{"version":3,"file":"ej2-treemap.umd.min.js","sources":["../src/treemap/utils/helper.js","../src/treemap/model/theme.js","../src/treemap/model/constants.js","../src/treemap/model/base.js","../src/treemap/layout/render-panel.js","../src/treemap/model/print.js","../src/treemap/model/image-export.js","../src/treemap/model/pdf-export.js","../src/treemap/treemap.js","../src/treemap/layout/legend.js","../src/treemap/user-interaction/highlight-selection.js","../src/treemap/user-interaction/tooltip.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n *\n * @param {string} value - specifies the text.\n * @param {number} containerSize - specifies the container size value.\n * @returns {number} - Returns the number value which is converted from string.\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n *\n * @param {Rect} location - Specifies the location of text.\n * @param {Alignment} alignment - Specifies the alignment of the text.\n * @param {Size} textSize - Specifies the size of the text.\n * @param {type} type - Specifies whether the provided text is title or subtitle.\n * @returns {Location} - Returns the location of text.\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n *\n * @param {SvgRenderer} renderer - Specifies the rendering element of the SVG.\n * @param {any} renderOptions - Specifies the settings of the text.\n * @param {string} text - Specifies the text.\n * @returns {HTMLElement} - Returns the HTML element for the text.\n */\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifies the parent element of the text\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 &&\n                !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\n/**\n *\n * @param {string} targetId - Specifies the id of the element to which template is to be appended.\n * @param {Element} targetElement - Specifies the element to which template is to be appended.\n * @param {string} contentItemTemplate - Specifies the content to be appended as template.\n * @returns {void}\n */\nexport function setItemTemplateContent(targetId, targetElement, contentItemTemplate) {\n    var itemSelect = targetId.split('_RectPath')[0];\n    var itemTemplate;\n    if (targetId.indexOf('_LabelTemplate') > -1) {\n        itemTemplate = targetElement;\n    }\n    else {\n        itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n    }\n    if (!isNullOrUndefined(itemTemplate)) {\n        itemTemplate.innerHTML = contentItemTemplate;\n    }\n}\n/**\n *\n * @param {string} id - Specifies the id of the element.\n * @returns {Element} - Returns the element.\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n *\n * @param {any} a - Specifies the first order of TreeMap leaf elements.\n * @param {any} b - Specifies the second order of TreeMap leaf elements.\n * @returns {number} - Returns the order of the TreeMap leaf element.\n */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n/**\n *\n * @param {string[]} source - Specifies the data from the data source.\n * @param {string} pathName - Specifies the path name in the data source.\n * @param {any} processData - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {boolean} - Specifies whether data is available in the data source or not.\n */\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath :\n            treemap.weightValuePath;\n        var data = processData[path] || 'undefined';\n        if (source[i] === data) {\n            name += data + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n/**\n *\n * @param {any} data - Specifies the data to which the children elements to be found.\n * @returns {any} - Returns the children elements of the TreeMap leaf element.\n */\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n/**\n *\n * @param {any} data - Specifies the data to which highlight must be done.\n * @param {items} items - Specifies the data source items.\n * @param {string} mode - Specifies the mode of highlight.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {string[]} - Returns the highlighted items.\n */\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId\n    });\n    childElement.style.cssText = 'position: absolute;pointer-events: auto;';\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        var regExp = RegExp;\n        templateHtml = templateHtml.replace(new regExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @param {LabelPosition} position - Specifies the position\n * @param {Size} labelSize - Specifies the label size.\n * @param {string} type - Specifies the type.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {Location} - Returns the text location.\n */\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\n/**\n *\n * @param {HTMLElement} element - Specifies the element to be measured.\n * @param {HTMLElement} parentElement - Specifies the parent element of the element to be measured.\n * @returns {Size} - Returns the element size.\n */\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @returns {number} - Returns the area width.\n */\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\n/**\n *\n * @param {Rect} input - Specifies input for the calculation.\n * @returns {number} - Returns the shortest edge.\n */\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\n/**\n *\n * @param {Rect} rect - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\n/**\n *\n * @param {Rect} container - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\n/**\n *\n * @param {number} pageX - Specifies the horizontal position of the mouse location.\n * @param {number} pageY - Specifies the vertical position of the mouse location.\n * @param {Element} element - Specifies the element to which the click is done.\n * @returns {Location} - Returns the clicked location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\n/**\n *\n * @param {ColorMappingModel[]} colorMapping - Specifies the color mapping instance.\n * @param {string} equalValue - Specifies the equal value.\n * @param {number | string} value - Specifies the range value.\n * @returns {any} - Returns the color mapping object.\n * @private\n */\nexport function colorMap(colorMapping, equalValue, value) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) &&\n                (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value)\n                || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to)\n            || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity)\n            && fill) {\n            opacity = deSaturationColor(colorMapping[i], value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\n/**\n *\n * @param {ColorMappingModel} colorMapping - Specifies the color mapping object.\n * @param {number} rangeValue - Specifies the range value.\n * @returns {string} - Returns the opacity for the color mapping.\n * @private\n */\nexport function deSaturationColor(colorMapping, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping object.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\n/**\n *\n * @param {number} r - Specifies the red color value.\n * @param {number} g - Specifies the green color value.\n * @param {number} b - Specifies the blue color value.\n * @returns {string} - Returns the fill color.\n */\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/**\n *\n * @param {number} value - Specifies the range value.\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {number} - Returns the color value.\n */\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\n/**\n *\n * @param {number} maximumWidth - Specifies the length of the text.\n * @param {string} dataLabel - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/**\n *\n * @param {number} maxWidth - Specifies the length of the text.\n * @param {string} label - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function textWrap(maxWidth, label, font) {\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {number} maxHeight - Specifies the maximum height.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the hidden text.\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\n/**\n *\n * @param {number} a - Specifies the first value of the leaf.\n * @param {number} b - Specifies the second value of the leaf.\n * @returns {number} - Returns whether values are equal or not.\n */\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} element - Specifies the selected TreeMap leaf item.\n * @param {string} className -Specifies the selected class name.\n * @returns {void}\n */\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} legendGroup - Specifies the selected element.\n * @returns {void}\n */\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    var treemapSVGRectElement = legendGroup.childNodes[j];\n                    treemapSVGRectElement.setAttribute('fill', treemap.selectionSettings.fill);\n                    treemapSVGRectElement.setAttribute('stroke', treemap.selectionSettings.border.color);\n                    treemapSVGRectElement.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    treemapSVGRectElement.setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLCollection} elements - Specifies the selected TreeMap element.\n * @param {string} type - Specifies the selection type.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeClassNames(elements, type, treemap) {\n    var element;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n/**\n *\n * @param {SVGPathElement} element - Specifies the SVG path element.\n * @param {any} options - Specifies the settings for the SVG path element.\n * @returns {void}\n */\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n/**\n *\n * @param {string} format - Specifies the format value.\n * @param {any} data - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string} - Returns the formatted text.\n */\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\n/**\n *\n * @param {number} value - Specifies the text to be formatted.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string | number} - Returns the formatted text.\n */\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifies the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var isRGBValue = color.replace(/[()RGBrgba ]/g, '').split(',');\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[0], 10), parseInt(isRGBValue[1], 10), parseInt(isRGBValue[2], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @param {string} label - Specifies the label\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n/**\n *\n * @param {any} data - Specifies the data source object.\n * @param {any} item - Specifies the leaf item.\n * @returns {boolean} - Returns whether the TreeMap item is level item or leaf item.\n */\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeShape(collection) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeLegend(collection) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\n/**\n *\n * @param {Element} element - Specifies the selected element.\n * @param {string} fill - Specifies the fill color.\n * @param {string} opacity - Specifies the opacity.\n * @param {string} borderColor - Specifies the border color.\n * @param {string} borderWidth - Specifies the border width.\n * @returns {void}\n */\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n/**\n *\n * @param {any[]} collection - Specifies the selected item collection.\n * @param {any[]} element - Specifies the selected element collection.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection);\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n/**\n *\n * @param {number} length - Specifies the length of the legend group.\n * @param {any} item - Specifies the legend item.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {number} - Returns the legend index.\n */\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {number} index - Specifies the index of legend.\n * @param {number} number - Specifies the leaf item index.\n * @param {Element} legendElement - Specifies the legend element.\n * @param {Element} shapeElement - Specifies the shape element.\n * @param {any[]} renderItems - Specifies the item index.\n * @param {any[]} legendCollection - Specifies the legend collection.\n * @returns {void}\n */\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n/**\n *\n * @param {string} id - Specifies the id of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","/**\n * Maps Themes doc\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontSize: '15px',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontSize: '15px',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#374151',\n                subTitleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#374151',\n                legendTextColor: '#374151',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#D1D5DB',\n                subTitleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#D1D5DB',\n                legendTextColor: '#D1D5DB',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Helvetica Neue'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Helvetica Neue'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                subTitleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#201F1E',\n                legendTextColor: '#201F1E',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                subTitleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#F3F2F1',\n                legendTextColor: '#F3F2F1',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontSize: '15px',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ fontFamily: null }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ?\n                        groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 :\n                        (levels.length === 0) ? 0 : levels[index] ?\n                            levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems();\n    };\n    /** @private */\n    LayoutPanel.prototype.renderLayoutItems = function () {\n        var _this = this;\n        var position;\n        var treeMap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var rectPath = '';\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template'\n        });\n        templateGroup.style.cssText = 'overflow: hidden; position: absolute;pointer-events: none;' +\n            'top:' + treeMap.areaRect.y + 'px;' +\n            'left:' + treeMap.areaRect.x + 'px;' +\n            'height:' + treeMap.areaRect.height + 'px;' +\n            'width:' + treeMap.areaRect.width + 'px;';\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName || 'undefined';\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        if (!isNullOrUndefined(templateEle)) {\n                            templateGroup.appendChild(templateEle);\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            _this.treemap.renderReactTemplates();\n                        }\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('role', '');\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                var regExp = RegExp;\n                template = template.replace(new regExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        var labelElement;\n        if (!isNullOrUndefined(document.getElementById(this.treemap.element.id + '_Secondary_Element'))) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn = getTemplateFunction(template);\n            var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n            labelElement = convertElement(templateElement, templateId, item['data']);\n            var templateSize = measureElement(labelElement, secondaryEle);\n            var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n            labelElement.style.left = templateLocation.x + 'px';\n            labelElement.style.top = templateLocation.y + 'px';\n        }\n        return labelElement;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    LayoutPanel.prototype.destroy = function () {\n        this.treemap = null;\n        this.currentRect = null;\n        this.layoutGroup = null;\n        this.renderer = null;\n        this.renderItems = [];\n        this.parentData = [];\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printFunction, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function Print(control) {\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (treeMap, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(treeMap, elements), name: beforePrint\n        };\n        treeMap.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (treeMap, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(treeMap.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print module.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function ImageExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (treeMap, type, fileName, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': treeMap.availableSize.height.toString(),\n                    'width': treeMap.availableSize.width.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                treeMap.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(treeMap.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ImageExport.prototype.destroy = function () { };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function PdfExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (treeMap, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': treeMap.availableSize.width.toString(),\n                    'height': treeMap.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'TailwindDark' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Bootstrap5Dark'\n                    || treeMap.theme === 'Fluent' || treeMap.theme === 'FluentDark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (treeMap.availableSize.width - 60), treeMap.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement, setItemTemplateContent } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**\n     * Constructor for TreeMap component.\n     *\n     * @param {TreeMapModel} options - Specifies the treemap instance.\n     * @param {string | HTMLElement} element - Specifies the treemap element.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.trigger(load, { treemap: this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        this.renderElements();\n    };\n    TreeMap.prototype.renderElements = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.layout)) {\n            this.layout = new LayoutPanel(this);\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element'\n            });\n            secondaryElement.style.cssText = 'position: absolute;z-index:1;';\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup\n            && !isNullOrUndefined(this.svgObject) && !isNullOrUndefined(document.getElementById(this.layout.layoutGroup.id))\n            && !isNullOrUndefined(document.getElementById(this.treeMapLegendModule.legendGroup.id))) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * Render the treemap border\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = {\n            color: title.textStyle.color, size: title.textStyle.size, fontFamily: title.textStyle.fontFamily,\n            fontStyle: title.textStyle.fontStyle, fontWeight: title.textStyle.fontWeight, opacity: title.textStyle.opacity\n        };\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        style.fontFamily = style.fontFamily || this.themeStyle.fontFamily;\n        style.size = style.size || (type === 'title' ? this.themeStyle.fontSize : this.themeStyle.subtitleFontSize);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path],\n                                    levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the treemap.\n     * @returns {void}\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the extension type of the exported document.\n     * @param {string} fileName - Specifies file name for exporting the rendered TreeMap.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document.\n     * @param {boolean} allowDownload - Specifies whether the exported file should be downloaded or not.\n     * @returns {string} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var orderNames = [];\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (!isNullOrUndefined(groupPath)) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        LevelsData.levelsData[(LevelsData.levelsData.length - 1)][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param {number} start - Specifies the start value of the treemap level.\n     * @returns {void}\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = LevelsData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ?\n                    [] : previousData[j][currentPath];\n                if (this.IsChildHierarchy(currentName.split('#'), previousData[j]['levelOrderName'].split('#'))) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.IsChildHierarchy = function (current, previous) {\n        var isChild = false;\n        for (var i = 0; i < previous.length; i++) {\n            if (current.length < i || previous[i] !== current[i]) {\n                return false;\n            }\n            else {\n                isChild = true;\n            }\n        }\n        return isChild;\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param {any[]} processData - Specifies the treemap data.\n     * @param {string} type - Specifies the type of the data.\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        this.resizeEvent = this.resizeOnTreeMap.bind(this);\n        window.addEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('role', '');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param {Event} e - Specifies the pointer event.\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            this.isResize = true;\n            var args_1 = {\n                name: resize,\n                cancel: false,\n                previousSize: this.availableSize,\n                currentSize: new Size(0, 0),\n                treemap: this\n            };\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n                this.resizeTo = setTimeout(function () {\n                    _this.unWireEVents();\n                    _this.createSvg();\n                    _this.refreshing = true;\n                    _this.wireEVents();\n                    args_1.currentSize = _this.availableSize;\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    _this.trigger(resize, args_1, function (observedArgs) {\n                        _this.render();\n                    });\n                }, 500);\n            }\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the mouse click event in the treemap.\n     * @returns {void}\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_Item_Index_')[1]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param {string} labelText - Specifies the label text.\n     * @param {any} item - Specifies the treemap item.\n     * @returns {any} - Returns label of the drilled level.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {boolean} directLevel - Specifies the current level.\n     * @returns {boolean} - check whether it is previous level or not.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {number} i - Specifies the treemap item.\n     * @returns {any} - return the new drill down object.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @returns {void}\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            index = parseFloat(targetId.split('_Item_Index_')[1]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: newDrillItem\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems();\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @return {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection);\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     *\n     * @param {string[]} levelOrder - Specifies the order of the level.\n     * @param {boolean} isSelected - check whether it is selected or not.\n     * @return {void}\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.isDestroyed) {\n            var render = false;\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                        this.renderBorder();\n                        break;\n                    case 'height':\n                    case 'width':\n                    case 'layoutType':\n                    case 'levels':\n                    case 'drillDownView':\n                    case 'renderDirection':\n                    case 'leafItemSettings':\n                    case 'legendSettings':\n                    case 'dataSource':\n                        render = true;\n                        break;\n                }\n            }\n            if (render) {\n                this.createSvg();\n                this.renderElements();\n            }\n        }\n    };\n    /**\n     * Gets component name.\n     *\n     * @returns {string} - return the treemap instance.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        removeElement('treeMapMeasureText');\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","import { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0]);\n        }\n        if (this.legendCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.levelIndex > nextItem.levelIndex) ? 1 :\n                (firstItem.levelIndex < nextItem.levelIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.groupIndex > nextItem.groupIndex) ? 1 :\n                (firstItem.groupIndex < nextItem.groupIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.leafIndex > nextItem.leafIndex) ? 1 :\n                (firstItem.leafIndex < nextItem.leafIndex) ? -1 : 0; });\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var itemTextStyle = legend.textStyle;\n            itemTextStyle.size = itemTextStyle.size || treemap.themeStyle.legendFontSize;\n            itemTextStyle.fontFamily = itemTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], itemTextStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var legendLength = this.legendCollections.length;\n                var rectWidth = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength) :\n                    (legendWidth / legendLength) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength) : (legendHeight / legendLength);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth : rectHeight), legendText, itemTextStyle);\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth) - itemStartX) :\n                            (rectWidth + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth, height: rectHeight, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var j = 0; j < colorMapping.length; j++) {\n                var colorMap = colorMapping[j];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue, levelIndex: !isLeafItem ? j : -1, leafIndex: isLeafItem ? j : -1,\n                        legendName: legendText, legendFill: fill, legendData: [], groupIndex: !isLeafItem ? groupIndex : -1,\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     *\n     * @param {PointerEvent | TouchEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_Item_Index_')[1])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    /**\n     * Wire events for event handler\n     *\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the legend module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.outOfRangeLegend = null;\n        this.totalPages = [];\n        this.translate = null;\n        this.legendBorderRect = null;\n        this.legendGroup = null;\n        this.legendNames = [];\n        this.defsElement = null;\n        this.legendLinearGradient = null;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = null;\n        this.removeEventListener();\n        //TODO: The removeInteractivePointer method (calling method) is called in a timer in the mouseUpHandler method. Because of this handling, adding the below code results in a spec failure.\n        //this.treemap = null;\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     *\n     * @param {ColorMappingModel} colorMap - Specifies the color mapping instance.\n     * @param {number} legendIndex - Specifies the index of legend.\n     * @returns {string} - Returns the legend color.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection, setItemTemplateContent } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in highlight\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {boolean} - return the highlight process is true or false.\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection);\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ?\n                        this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true)\n                && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection);\n                }\n                this.shapeTarget = 'highlight';\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ?\n                        selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection);\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection);\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in selection\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    treemap.trigger(itemSelected, eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection);\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection);\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection);\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection);\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            if (!isNullOrUndefined(item)) {\n                value = item['weight'];\n                toolTipData = item['data'];\n                if (!isNullOrUndefined(item['options'])) {\n                    markerFill = item['options']['fill'];\n                }\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip'\n                    });\n                    tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                    _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                fill: this.treemap.tooltipSettings.fill ? this.treemap.tooltipSettings.fill : this.treemap.themeStyle.tooltipFillColor\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.treemap.isVue || this.treemap.isVue3) {\n                this.svgTooltip.controlInstance = this.treemap;\n            }\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipSettings = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","setItemTemplateContent","targetId","targetElement","contentItemTemplate","itemTemplate","itemSelect","querySelector","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","isExist","name","leaf","leafItemSettings","data","levels","groupPath","labelPath","weightValuePath","findChildren","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","trim","e","convertElement","element","labelId","childElement","cssText","elementLength","templateHtml","regExp","RegExp","toString","findLabelLocation","rect","labelSize","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","treemapSVGRectElement","removeClassNames","elements","parseFloat","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","formatFunction","convertToHexCode","hex","convertHexToColor","result","exec","isRGBValue","window","getComputedStyle","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","subtitleFontSize","legendFontSize","tooltipFillOpacity","tooltipTextOpacity","labelFontFamily","beforePrint","itemRendering","drillStart","drillEnd","itemSelected","itemHighlight","tooltipRendering","itemClick","itemMove","doubleClick","rightClick","mouseMove","legendItemRendering","legendRendering","resize","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","_loop_1","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","path","drawPath","renderItemText","renderTemplate","renderReactTemplates","tabIndex","svgObject","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","textLocation","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateId","baseTemplateId","labelElement","templateLocation","textValue","destroy","currentRect","Theme","mapsTitleFont","Print","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","printFunction","div","cloneNode","Element","getModuleName","ImageExport","export","allowDownload","Promise","resolve","reject","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","context_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","exportElement","backgroundElement","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","isResize","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","renderElements","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","isResized","renderComplete","firstChild","hasChildNodes","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","level","childName","name_1","childGroupPath","start","currentName","currentPath","prevPath","previousData","IsChildHierarchy","current","isChild","groupObj","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeEvent","resizeOnTreeMap","bind","addEventListener","Internationalization","isDestroyed","args_1","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","labelText","clickArgs","mouseEvent","preventDefault","doubleTapTimer1","end","Date","getMilliseconds","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","layoutID","templateID","drillMouseMove","drillLength","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","removeSvg","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","firstItem","nextItem","leafIndex","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","itemTextStyle","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","legendLength","rectWidth","rectHeight","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","s","m","length_5","selectionElement","__rest","t","getOwnPropertySymbols","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","isVue","isVue3","controlInstance","appendTo","tooltipElementId"],"mappings":"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"}