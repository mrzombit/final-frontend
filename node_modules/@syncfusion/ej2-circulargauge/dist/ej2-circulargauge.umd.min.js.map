{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper-common.js","../src/circular-gauge/utils/helper-circular-gauge.js","../src/circular-gauge/utils/helper-tooltip.js","../src/circular-gauge/utils/helper-axis-panel.js","../src/circular-gauge/utils/helper-axis-renderer.js","../src/circular-gauge/utils/helper-pointer-renderer.js","../src/circular-gauge/utils/helper-legend.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id\n        });\n        tooltip.style.cssText = 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n            'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"';\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight, size: tooltipArgs.tooltip.textStyle.size\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if ((animate || pointer.animation.enable) && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = (pointer.animation.enable && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    timeStamp = (args.timeStamp / pointer.animation.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                    textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                    element.style.visibility = 'visible';\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                timeStamp = (arg.timeStamp / arg.duration);\n                pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                _this.setPointerValue(axis, pointer, pointerValue);\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf(\"%\") > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Bootstrap5Dark'\n                || gauge.theme === 'Fluent' || gauge.theme === 'FluentDark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                gauge.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(gauge.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(gauge.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.renderElements();\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable;\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer);\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specified the orientation for the exported pdf document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {string} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.removeSvg();\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = Object.keys(newProp.axes).length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","pointerTextStyle","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","annotationTextStyle","removeTooltip","clearTemplate","children","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","controlInstance","className","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","pointerColor","textObject","visibility","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","timeStamp","val","progress","args","delay","sweepAngle","pointAngle","pointerValue","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","axisLabelRenderSuccess","this_2","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","move","mouseX","mouseY","legends","originalText","offsetWidth","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","titleFontColor","fontSize","titleFontWeight","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","_b","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component"],"mappings":"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"}