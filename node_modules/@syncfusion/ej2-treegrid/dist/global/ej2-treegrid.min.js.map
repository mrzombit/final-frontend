{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/renderer/virtual-tree-freeze-render.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', rowDetails.record[this.parent.idMapping]);\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', rowDetails.record[this.parent.idMapping]);\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords'])) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.enablePersistence && this.allowResizing) {\n            for (var i = 0; i < this.columns.length; i++) {\n                if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].columns)) {\n                    for (var j = 0; j < this.columns[parseInt(i.toString(), 10)].columns.length; j++) {\n                        var stackedColumn = this.columns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n                        var currentColumn = this.grid.getColumnByField(stackedColumn.field);\n                        stackedColumn.width = currentColumn.width;\n                    }\n                }\n            }\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        this.expandRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.getCurrentViewRecords();\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                    .cells[this.treeColumnIndex];\n                var row = rows[parseInt(i.toString(), 10)];\n                var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeContentRender, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new FreezeContentRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LoadingIndicator","_super","apply","Property","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","rowsObj","getRowsObject","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","loadChildOnDemand","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","showSpinner","currentViewData","inx","haveChild","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","rowDragAndDropModule","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","triggerEvents","IsExpandCollapseClicked","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","getVisibleRecords","sHeight","scrollHeight","clientHeight","getContent","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","stackedColumn","currentColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","removeAttribute","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","setTimeout","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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ACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,gBAAa,IACpC8E,IACI27B,WACDhgB,EAASzgB,UAAW,eAAY,IACnC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,wBAAqB,IAC5C8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,eAAY,IACnC8E,IACI27B,WACDhgB,EAASzgB,UAAW,oBAAiB,IACxC8E,IACI27B,WACDhgB,EAASzgB,UAAW,gBAAa,IACpC8E,IACI27B,WACDhgB,EAASzgB,UAAW,wBAAqB,IAC5C8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,wBAAqB,IAC5C8E,IACI27B,WACDhgB,EAASzgB,UAAW,mBAAgB,IACvC8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,oBAAiB,IACxC8E,IACIc,YAAS,IACV6a,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,mBAAgB,IACvC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,oBAAiB,IACxC8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,oBAAiB,IACxC8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,mBAAgB,IACvC8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,eAAY,IACnC8E,IACI27B,WACDhgB,EAASzgB,UAAW,iBAAc,IACrC8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,iBAAc,IACrC8E,IACI27B,WACDhgB,EAASzgB,UAAW,iBAAc,IACrC8E,IACI27B,WACDhgB,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,oBAAiB,IACxC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,mBAAgB,IACvC8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,sBAAmB,IAC1C8E,IACI27B,WACDhgB,EAASzgB,UAAW,uBAAoB,IAC3C8E,IACI27B,WACDhgB,EAASzgB,UAAW,iBAAc,IACrC8E,IACI27B,WACDhgB,EAASzgB,UAAW,kBAAe,IACtC8E,IACI27B,WACDhgB,EAASzgB,UAAW,cAAW,IAClC8E,IACI27B,WACDhgB,EAASzgB,UAAW,mBAAgB,IACvC8E,IACI27B,WACDhgB,EAASzgB,UAAW,yBAAsB,IAC7C8E,IACI27B,WACDhgB,EAASzgB,UAAW,cAAW,IAClC8E,IACIc,YAAU,IACX6a,EAASzgB,UAAW,uBAAoB,IAC3C8E,IACIy7B,aAAYjvB,IACbmP,EAASzgB,UAAW,wBAAqB,IAC5C8E,IACIc,YAAS,IACV6a,EAASzgB,UAAW,uBAAoB,IAC3C8E,IACIc,YAAS,IACV6a,EAASzgB,UAAW,qBAAkB,IACzC8E,IACI27B,WACDhgB,EAASzgB,UAAW,uBAAoB,IAC3C8E,IACI27B,WACDhgB,EAASzgB,UAAW,6BAA0B,IACjD8E,IACI27B,WACDhgB,EAASzgB,UAAW,yBA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"}