{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/loading-indicator.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/renderer/virtual-tree-freeze-render.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', rowDetails.record[this.parent.idMapping]);\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', rowDetails.record[this.parent.idMapping]);\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords'])) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.enablePersistence && this.allowResizing) {\n            for (var i = 0; i < this.columns.length; i++) {\n                if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].columns)) {\n                    for (var j = 0; j < this.columns[parseInt(i.toString(), 10)].columns.length; j++) {\n                        var stackedColumn = this.columns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n                        var currentColumn = this.grid.getColumnByField(stackedColumn.field);\n                        stackedColumn.width = currentColumn.width;\n                    }\n                }\n            }\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        this.expandRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.getCurrentViewRecords();\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                    .cells[this.treeColumnIndex];\n                var row = rows[parseInt(i.toString(), 10)];\n                var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeContentRender, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new FreezeContentRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LoadingIndicator","_super","apply","Property","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","movableContent","frozenContent","content","dataRowIndex","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","templateFn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","rowsObj","getRowsObject","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","actionArgs","searchString","expands","loadChildOnDemand","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","showSpinner","remoteExpandedData","remoteCollapsedData","currentViewData","inx","haveChild","events.actionComplete","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","rowDragAndDropModule","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","IsExpandCollapseClicked","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","literals.movableContent","literals.frozenContent","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","getVisibleRecords","sHeight","scrollHeight","clientHeight","getContent","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","stackedColumn","currentColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","lastrowIdx","lastRow","removeAttribute","events.localPagedExpandCollapse","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","literals.dataRowIndex","rowCollection","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","setTimeout","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","literals.content","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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wB,GAC/CyE,IACIc,YAAS,IACV2e,EAASlkB,UAAW,kCAA8B,GACrDyE,IACIc,YAAS,IACV2e,EAASlkB,UAAW,+BAA2B,GAClDyE,IACI0/B,aAAYlgB,KACbC,EAASlkB,UAAW,8BAA0B,GACjDyE,IACIc,WAAS,QACV2e,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,eAAW,GAClCyE,IACI4/B,WACDngB,EAASlkB,UAAW,YAAQ,GAC/ByE,IACI4/B,WACDngB,EAASlkB,UAAW,iBAAa,GACpCyE,IACI4/B,WACDngB,EAASlkB,UAAW,gBAAY,GACnCyE,IACI4/B,WACDngB,EAASlkB,UAAW,kBAAc,GACrCyE,IACI4/B,WACDngB,EAASlkB,UAAW,iBAAa,GACpCyE,IACI4/B,WACDngB,EAASlkB,UAAW,gBAAY,GACnCyE,IACI4/B,WACDngB,EAASlkB,UAAW,iBAAa,GACpCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,iBAAa,GACpCyE,IACI4/B,WACDngB,EAASlkB,UAAW,gBAAY,GACnCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,yBAAqB,GAC5CyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,gBAAY,GACnCyE,IACI4/B,WACDngB,EAASlkB,UAAW,qBAAiB,GACxCyE,IACI4/B,WACDngB,EAASlkB,UAAW,iBAAa,GACpCyE,IACI4/B,WACDngB,EAASlkB,UAAW,yBAAqB,GAC5CyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,yBAAqB,GAC5CyE,IACI4/B,WACDngB,EAASlkB,UAAW,oBAAgB,GACvCyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,qBAAiB,GACxCyE,IACIc,YAAS,IACV2e,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,oBAAgB,GACvCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,qBAAiB,GACxCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,qBAAiB,GACxCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,oBAAgB,GACvCyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,gBAAY,GACnCyE,IACI4/B,WACDngB,EAASlkB,UAAW,kBAAc,GACrCyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,kBAAc,GACrCyE,IACI4/B,WACDngB,EAASlkB,UAAW,kBAAc,GACrCyE,IACI4/B,WACDngB,EAASlkB,UAAW,sBAAkB,GACzCyE,IACI4/B,WACDngB,EAASlkB,UAAW,qBAAiB,GACxCyE,IACI4/B,WACDngB,EAASlkB,UAAW,mBAAe,GACtCyE,IACI4/B,WACDngB,EAASlkB,UAAW,oBAAgB,GACvCyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB,UAAW,uBAAmB,GAC1CyE,IACI4/B,WACDngB,EAASlkB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"}