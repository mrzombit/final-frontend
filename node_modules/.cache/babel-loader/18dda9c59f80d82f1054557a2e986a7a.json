{"ast":null,"code":"import _objectSpread from \"/Users/koonk/Documents/GitHub/final-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/final-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koonk/Documents/GitHub/final-frontend/src/components/statement/charts/combinationCharts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'primereact/chart';\nexport default function CombinationCharts(props) {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    chartData = _useState2[0],\n    setChartData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chartOptions = _useState4[0],\n    setChartOptions = _useState4[1]; // const [totalRevenue, setTotalRevenue] = useState([]);\n  // const [totalFixedCost, setTotalFixedCos] = useState([]);\n  // const [totalRevenue_MIN, setTotalRevenue_MIN] = useState([]);\n  // const [netIncome, setNetIncome] = useState([]);\n  // const [netIncome_MIN, setNetIncome_MIN] = useState([]);\n  // // if (props.data_type === \"revenue\" || props.data_type === \"expense\") {\n  // \tsetTotalRevenue(props.totalRevenue);\n  // \tsetTotalFixedCos(props.total_fixed_cost);\n  // \tsetNetIncome(totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]));\n  // \tsetTotalRevenue_MIN(props.totalRevenue_MIN);\n  // \tsetNetIncome_MIN(totalRevenue_MIN.map((revenue, index) => revenue - totalFixedCost[index]));\n  // // }\n  var totalRevenue = [];\n  var totalFixedCost = [];\n  var totalRevenue_MIN = [];\n  var totalCFO = [];\n  var totalCFI = [];\n  var totalCFF = [];\n  var inv_names = [];\n  var inv_amounts = [];\n  var expense_names = [];\n  var expense_amounts = [];\n  var revenue_service_names = [];\n  var revenue_service_amounts = [];\n  var revenue_product_names = [];\n  var revenue_product_amounts = [];\n  var yearRange = [];\n  totalRevenue = props.totalRevenue;\n  totalFixedCost = props.total_fixed_cost;\n  totalRevenue_MIN = props.totalRevenue_MIN;\n  totalCFO = props.totalCFO;\n  totalCFI = props.totalCFI;\n  totalCFF = props.totalCFF;\n  inv_names = props.inv_names;\n  inv_amounts = props.inv_amounts;\n  expense_names = props.expense_names;\n  expense_amounts = props.expense_amounts;\n  revenue_service_names = props.revenue_service_names;\n  revenue_service_amounts = props.revenue_service_amounts;\n  revenue_product_names = props.revenue_product_names;\n  revenue_product_amounts = props.revenue_product_amounts;\n  yearRange = props.yearRange;\n\n  // let pj_period = [];\n  // for (let i = 1; i < projection_period + 1; i++) {\n  // \tpj_period.push(`${i}`);\n  // }\n\n  // for (let i = 1; i < projection_period + 1; i++) {\n  // \ttotalServiceRevenue.push(totalServiceRevenue[0]);\n  // }\n\n  // let atta = 1\n  // for (let i = 1; i < projection_period + 1; i++) {\n  // \tatta += 0.07\n  // \ttotalFixedCost.push(totalFixedCost[0] * atta);\n  // }\n\n  useEffect(function () {\n    // console.log(pj_period)\n    var documentStyle = getComputedStyle(document.documentElement);\n    var textColor = documentStyle.getPropertyValue('--text-color');\n    var textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n    var surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n    if (props.data_type === \"income\") {\n      var netIncome = totalRevenue.map(function (revenue, index) {\n        return revenue - totalFixedCost[index];\n      });\n      var netIncome_MIN = totalRevenue_MIN.map(function (revenue, index) {\n        return revenue - totalFixedCost[index];\n      });\n      var data = {\n        labels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n        datasets: [{\n          type: 'line',\n          label: 'กำไร(ขาดทุน)',\n          borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [50, 25, 12, 48]\n        }, {\n          type: 'line',\n          label: 'กำไร(ขาดทุน)-min',\n          // borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderColor: \"#cccccc\",\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [0, 0, 0, 0]\n        }, {\n          type: 'bar',\n          label: 'กระแสเงินสดรับ',\n          data: [2, 84, 24, 75],\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }, {\n          type: 'bar',\n          label: 'กระแสเงินสดจ่าย',\n          data: [4000, 3200, 2400, 1400],\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          borderColor: 'rgb(153, 102, 255)',\n          borderWidth: 1\n        }]\n      };\n      var options = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n\n      // let shallowData = data\n\n      // shallowData = shallowData.datasets.map(d => {\n      // \t// if (data.labels !== pj_period) {\n      // \t// \tshallowData.labels = pj_period\n      // \t// }\n      // \tif (d.label === \"กระแสเงินสดรับ\") {\n      // \t\td.data = totalRevenue\n      // \t}\n      // \tif (d.label === \"กระแสเงินสดจ่าย\") {\n      // \t\td.data = totalFixedCost\n      // \t}\n      // \tif (d.label === \"กำไร(ขาดทุน)\") {\n      // \t\td.data = netIncome\n      // \t}\n      // \tif (d.label === \"กำไร(ขาดทุน)-min\") {\n      // \t\td.data = netIncome_MIN\n      // \t}\n      // \treturn shallowData\n      // })\n\n      var shallowData = data;\n      var shallowDatalabels = data.labels;\n      var shallowDataDatasets = data.datasets;\n      data.labels = yearRange;\n      shallowDataDatasets = shallowDataDatasets.map(function (d) {\n        if (d.label === \"กระแสเงินสดรับ\") {\n          d.data = totalRevenue;\n        }\n        if (d.label === \"กระแสเงินสดจ่าย\") {\n          d.data = totalFixedCost;\n        }\n        if (d.label === \"กำไร(ขาดทุน)\") {\n          d.data = netIncome;\n        }\n        if (d.label === \"กำไร(ขาดทุน)-min\") {\n          d.data = netIncome_MIN;\n        }\n        return shallowDataDatasets;\n      });\n      shallowData = _objectSpread({}, data, {\n        labels: yearRange,\n        datasets: shallowDataDatasets\n      });\n      setChartData(data);\n      setChartOptions(options);\n    }\n    if (props.data_type === \"income-line\") {\n      // let netIncome = totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n      // let netIncome_MIN = totalRevenue_MIN.map((revenue, index) => revenue - totalFixedCost[index]);\n      var _data = {\n        labels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n        datasets: [{\n          type: 'line',\n          label: 'กำไร(ขาดทุน)',\n          borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [50, 25, 12, 48]\n        }, {\n          type: 'line',\n          label: 'กำไร(ขาดทุน)-min',\n          // borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderColor: \"#cccccc\",\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [100, 10, 50, 90]\n        }]\n      };\n      var _options = {\n        responsive: false,\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n\n      // let shallowData = data\n\n      // shallowData = shallowData.datasets.map(d => {\n      // \t// if (data.labels !== pj_period) {\n      // \t// \tshallowData.labels = pj_period\n      // \t// }\n      // \tif (d.label === \"กระแสเงินสดรับ\") {\n      // \t\td.data = totalRevenue\n      // \t}\n      // \tif (d.label === \"กระแสเงินสดจ่าย\") {\n      // \t\td.data = totalFixedCost\n      // \t}\n      // \tif (d.label === \"กำไร(ขาดทุน)\") {\n      // \t\td.data = netIncome\n      // \t}\n      // \tif (d.label === \"กำไร(ขาดทุน)-min\") {\n      // \t\td.data = netIncome_MIN\n      // \t}\n      // \treturn shallowData\n      // })\n\n      setChartData(_data);\n      setChartOptions(_options);\n    }\n    if (props.data_type === \"cashflow\") {\n      var CfoCfi = totalCFO.map(function (cfo, index) {\n        return cfo + totalCFI[index];\n      });\n      var netCashflow = totalCFF.map(function (cff, index) {\n        return cff + CfoCfi[index];\n      });\n      var _data2 = {\n        labels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n        datasets: [{\n          type: 'line',\n          label: 'Net Cashflow',\n          borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [50, 25, 12, 48]\n        },\n        // {\n        // \ttype: 'line',\n        // \tlabel: 'กำไร(ขาดทุน)-min',\n        // \t// borderColor: documentStyle.getPropertyValue('--blue-500'),\n        // \tborderColor: \"#cccccc\",\n        // \tborderWidth: 2,\n        // \tfill: false,\n        // \ttension: 0.4,\n        // \tdata: [0, 0, 0, 0]\n        // },\n        {\n          type: 'bar',\n          label: 'CFI',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(175, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }, {\n          type: 'bar',\n          label: 'CFO',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }, {\n          type: 'bar',\n          label: 'CFF',\n          data: [4000, 3200, 2400, 1400],\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          borderColor: 'rgb(153, 102, 255)',\n          borderWidth: 1\n        }]\n      };\n      var _options2 = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n      var _shallowData = _data2;\n      var _shallowDatalabels = _data2.labels;\n      var _shallowDataDatasets = _data2.datasets;\n      _data2.labels = yearRange;\n      _shallowDataDatasets = _shallowDataDatasets.map(function (d) {\n        if (d.label === \"CFO\" && totalCFO !== []) {\n          d.data = totalCFO;\n        }\n        if (d.label === \"CFI\" && totalCFI !== []) {\n          d.data = totalCFI;\n        }\n        if (d.label === \"CFF\" && totalCFF !== []) {\n          d.data = totalCFF;\n        }\n        if (d.label === \"Net Cashflow\") {\n          d.data = netCashflow;\n        }\n        return _shallowDataDatasets;\n      });\n      _shallowData = _objectSpread({}, _data2, {\n        labels: yearRange,\n        datasets: _shallowDataDatasets\n      });\n      setChartData(_data2);\n      // setChartData(shallowData[0]);\n      setChartOptions(_options2);\n    }\n    if (props.data_type === \"total-investment\") {\n      // if (inv_amounts.length !== 0) {\n      // \tsumInv = inv_amounts.reduce((result, number) => result + number);\n      // }\n      var _data3 = {\n        labels: [\"ซื้อที่ดิน\", \"ทำร้าน\", \"บลาๆ\", \"บลาๆ\"],\n        datasets: [\n        // {\n        // \ttype: 'line',\n        // \tlabel: 'ราคาสุทธิ',\n        // \tborderColor: documentStyle.getPropertyValue('--blue-500'),\n        // \tborderWidth: 2,\n        // \tfill: false,\n        // \ttension: 0.4,\n        // \tdata: [50, 25, 12, 48]\n        // },\n        {\n          type: 'bar',\n          label: 'ราคา/หน่วย',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(175, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }]\n      };\n      var _options3 = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n      var _shallowData2 = _data3;\n      var _shallowDatalabels2 = _data3.labels;\n      var _shallowDataDatasets2 = _data3.datasets;\n      _data3.labels = inv_names;\n      _shallowDataDatasets2 = _shallowDataDatasets2.map(function (d) {\n        if (d.label === \"ราคา/หน่วย\") {\n          d.data = inv_amounts;\n        }\n        // if (d.label === \"ราคาสุทธิ\" ) {\n        // \td.data = sumInv\n        // }\n      });\n\n      _shallowData2 = _objectSpread({}, _data3, {\n        labels: inv_names,\n        datasets: _shallowDataDatasets2\n      });\n      setChartData(_data3);\n      // setChartData(shallowData[0]);\n      setChartOptions(_options3);\n    }\n    if (props.data_type === \"expense\") {\n      var _data4 = {\n        labels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n        datasets: [{\n          type: 'line',\n          label: 'ราคาสุทธิ',\n          borderColor: documentStyle.getPropertyValue('--blue-500'),\n          borderWidth: 2,\n          fill: false,\n          tension: 0.4,\n          data: [50, 25, 12, 48]\n        }, {\n          type: 'bar',\n          label: 'ราคา/หน่วย',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(175, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }]\n      };\n      var _options4 = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n      var _shallowData3 = _data4;\n      var _shallowDatalabels3 = _data4.labels;\n      var _shallowDataDatasets3 = _data4.datasets;\n      _data4.labels = expense_names;\n      _shallowDataDatasets3 = _shallowDataDatasets3.map(function (d) {\n        if (d.label === \"ราคา/หน่วย\") {\n          d.data = expense_amounts;\n        }\n        // if (d.label === \"ราคาสุทธิ\" ) {\n        // \td.data = sumInv\n        // }\n      });\n\n      _shallowData3 = _objectSpread({}, _data4, {\n        labels: expense_names,\n        datasets: _shallowDataDatasets3\n      });\n      setChartData(_data4);\n      // setChartData(shallowData[0]);\n      setChartOptions(_options4);\n    }\n    if (props.data_type === \"revenue-service\") {\n      var _data5 = {\n        labels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n        datasets: [{\n          type: 'bar',\n          label: 'ราคา/หน่วย',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(175, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }]\n      };\n      var _options5 = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n      var _shallowData4 = _data5;\n      var _shallowDatalabels4 = _data5.labels;\n      var _shallowDataDatasets4 = _data5.datasets;\n      _data5.labels = revenue_service_names;\n      _shallowDataDatasets4 = _shallowDataDatasets4.map(function (d) {\n        if (d.label === \"ราคา/หน่วย\") {\n          d.data = revenue_service_amounts;\n        }\n        // if (d.label === \"ราคาสุทธิ\" ) {\n        // \td.data = sumInv\n        // }\n      });\n\n      _shallowData4 = _objectSpread({}, _data5, {\n        labels: revenue_service_names,\n        datasets: _shallowDataDatasets4\n      });\n      setChartData(_data5);\n      // setChartData(shallowData[0]);\n      setChartOptions(_options5);\n    }\n    if (props.data_type === \"revenue-product\") {\n      var _data6 = {\n        labels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n        datasets: [{\n          type: 'bar',\n          label: 'ราคา/หน่วย',\n          data: [200, 8400, 2400, 7500],\n          backgroundColor: 'rgba(175, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }]\n      };\n      var _options6 = {\n        maintainAspectRatio: false,\n        aspectRatio: 0.6,\n        plugins: {\n          legend: {\n            labels: {\n              color: textColor\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          },\n          y: {\n            ticks: {\n              color: textColorSecondary\n            },\n            grid: {\n              color: surfaceBorder\n            }\n          }\n        }\n      };\n      var _shallowData5 = _data6;\n      var _shallowDatalabels5 = _data6.labels;\n      var _shallowDataDatasets5 = _data6.datasets;\n      _data6.labels = revenue_product_names;\n      _shallowDataDatasets5 = _shallowDataDatasets5.map(function (d) {\n        if (d.label === \"ราคา/หน่วย\") {\n          d.data = revenue_product_amounts;\n        }\n        // if (d.label === \"ราคาสุทธิ\" ) {\n        // \td.data = sumInv\n        // }\n      });\n\n      _shallowData5 = _objectSpread({}, _data6, {\n        labels: revenue_product_names,\n        datasets: _shallowDataDatasets5\n      });\n      setChartData(_data6);\n      // setChartData(shallowData[0]);\n      setChartOptions(_options6);\n    }\n  }, [totalRevenue, totalFixedCost, totalCFO, totalCFI, totalCFF]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    type: \"line\",\n    data: chartData,\n    options: chartOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","Chart","CombinationCharts","props","_useState","_useState2","_slicedToArray","chartData","setChartData","_useState3","_useState4","chartOptions","setChartOptions","totalRevenue","totalFixedCost","totalRevenue_MIN","totalCFO","totalCFI","totalCFF","inv_names","inv_amounts","expense_names","expense_amounts","revenue_service_names","revenue_service_amounts","revenue_product_names","revenue_product_amounts","yearRange","total_fixed_cost","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","data_type","netIncome","map","revenue","index","netIncome_MIN","data","labels","datasets","type","label","borderColor","borderWidth","fill","tension","backgroundColor","options","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","ticks","grid","y","shallowData","shallowDatalabels","shallowDataDatasets","d","_objectSpread","responsive","CfoCfi","cfo","netCashflow","cff","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/koonk/Documents/GitHub/final-frontend/src/components/statement/charts/combinationCharts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chart } from 'primereact/chart';\n\nexport default function CombinationCharts(props) {\n\tconst [chartData, setChartData] = useState({});\n\tconst [chartOptions, setChartOptions] = useState({});\n\n\n\t// const [totalRevenue, setTotalRevenue] = useState([]);\n\t// const [totalFixedCost, setTotalFixedCos] = useState([]);\n\t// const [totalRevenue_MIN, setTotalRevenue_MIN] = useState([]);\n\t// const [netIncome, setNetIncome] = useState([]);\n\t// const [netIncome_MIN, setNetIncome_MIN] = useState([]);\n\n\t// // if (props.data_type === \"revenue\" || props.data_type === \"expense\") {\n\t// \tsetTotalRevenue(props.totalRevenue);\n\t// \tsetTotalFixedCos(props.total_fixed_cost);\n\t// \tsetNetIncome(totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]));\n\n\t// \tsetTotalRevenue_MIN(props.totalRevenue_MIN);\n\t// \tsetNetIncome_MIN(totalRevenue_MIN.map((revenue, index) => revenue - totalFixedCost[index]));\n\t// // }\n\n\tlet totalRevenue = [];\n\tlet totalFixedCost = [];\n\tlet totalRevenue_MIN = [];\n\tlet totalCFO = [];\n\tlet totalCFI = [];\n\tlet totalCFF = [];\n\n\tlet inv_names = [];\n\tlet inv_amounts = [];\n\tlet expense_names = [];\n\tlet expense_amounts = [];\n\tlet revenue_service_names = [];\n\tlet revenue_service_amounts = [];\n\tlet revenue_product_names = [];\n\tlet revenue_product_amounts = [];\n\tlet yearRange = [];\n\n\ttotalRevenue = props.totalRevenue;\n\ttotalFixedCost = props.total_fixed_cost;\n\ttotalRevenue_MIN = props.totalRevenue_MIN;\n\ttotalCFO = props.totalCFO;\n\ttotalCFI = props.totalCFI;\n\ttotalCFF = props.totalCFF;\n\n\tinv_names = props.inv_names;\n\tinv_amounts = props.inv_amounts;\n\texpense_names = props.expense_names;\n\texpense_amounts = props.expense_amounts;\n\trevenue_service_names = props.revenue_service_names;\n\trevenue_service_amounts = props.revenue_service_amounts;\n\trevenue_product_names = props.revenue_product_names;\n\trevenue_product_amounts = props.revenue_product_amounts;\n\tyearRange = props.yearRange;\n\n\n\n\n\n\t// let pj_period = [];\n\t// for (let i = 1; i < projection_period + 1; i++) {\n\t// \tpj_period.push(`${i}`);\n\t// }\n\n\t// for (let i = 1; i < projection_period + 1; i++) {\n\t// \ttotalServiceRevenue.push(totalServiceRevenue[0]);\n\t// }\n\n\t// let atta = 1\n\t// for (let i = 1; i < projection_period + 1; i++) {\n\t// \tatta += 0.07\n\t// \ttotalFixedCost.push(totalFixedCost[0] * atta);\n\t// }\n\n\tuseEffect(() => {\n\t\t// console.log(pj_period)\n\t\tconst documentStyle = getComputedStyle(document.documentElement);\n\t\tconst textColor = documentStyle.getPropertyValue('--text-color');\n\t\tconst textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n\t\tconst surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n\t\tif (props.data_type === \"income\") {\n\t\t\tlet netIncome = totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\t\t\tlet netIncome_MIN = totalRevenue_MIN.map((revenue, index) => revenue - totalFixedCost[index]);\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'กำไร(ขาดทุน)',\n\t\t\t\t\t\tborderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [50, 25, 12, 48]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'กำไร(ขาดทุน)-min',\n\t\t\t\t\t\t// borderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderColor: \"#cccccc\",\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [0, 0, 0, 0]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'กระแสเงินสดรับ',\n\t\t\t\t\t\tdata: [2, 84, 24, 75],\n\t\t\t\t\t\tbackgroundColor: 'rgba(75, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'กระแสเงินสดจ่าย',\n\t\t\t\t\t\tdata: [4000, 3200, 2400, 1400],\n\t\t\t\t\t\tbackgroundColor: 'rgba(153, 102, 255, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(153, 102, 255)',\n\t\t\t\t\t\tborderWidth: 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// let shallowData = data\n\n\t\t\t// shallowData = shallowData.datasets.map(d => {\n\t\t\t// \t// if (data.labels !== pj_period) {\n\t\t\t// \t// \tshallowData.labels = pj_period\n\t\t\t// \t// }\n\t\t\t// \tif (d.label === \"กระแสเงินสดรับ\") {\n\t\t\t// \t\td.data = totalRevenue\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กระแสเงินสดจ่าย\") {\n\t\t\t// \t\td.data = totalFixedCost\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กำไร(ขาดทุน)\") {\n\t\t\t// \t\td.data = netIncome\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กำไร(ขาดทุน)-min\") {\n\t\t\t// \t\td.data = netIncome_MIN\n\t\t\t// \t}\n\t\t\t// \treturn shallowData\n\t\t\t// })\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = yearRange\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"กระแสเงินสดรับ\") {\n\t\t\t\t\td.data = totalRevenue\n\t\t\t\t}\n\t\t\t\tif (d.label === \"กระแสเงินสดจ่าย\") {\n\t\t\t\t\td.data = totalFixedCost\n\t\t\t\t}\n\t\t\t\tif (d.label === \"กำไร(ขาดทุน)\") {\n\t\t\t\t\td.data = netIncome\n\t\t\t\t}\n\t\t\t\tif (d.label === \"กำไร(ขาดทุน)-min\") {\n\t\t\t\t\td.data = netIncome_MIN\n\t\t\t\t}\n\t\t\t\treturn shallowDataDatasets\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: yearRange,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\t\t\tsetChartData(data);\n\t\t\tsetChartOptions(options);\n\n\t\t}\n\t\tif (props.data_type === \"income-line\") {\n\t\t\t// let netIncome = totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\t\t\t// let netIncome_MIN = totalRevenue_MIN.map((revenue, index) => revenue - totalFixedCost[index]);\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'กำไร(ขาดทุน)',\n\t\t\t\t\t\tborderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [50, 25, 12, 48]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'กำไร(ขาดทุน)-min',\n\t\t\t\t\t\t// borderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderColor: \"#cccccc\",\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [100, 10, 50, 90]\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tresponsive: false,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// let shallowData = data\n\n\t\t\t// shallowData = shallowData.datasets.map(d => {\n\t\t\t// \t// if (data.labels !== pj_period) {\n\t\t\t// \t// \tshallowData.labels = pj_period\n\t\t\t// \t// }\n\t\t\t// \tif (d.label === \"กระแสเงินสดรับ\") {\n\t\t\t// \t\td.data = totalRevenue\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กระแสเงินสดจ่าย\") {\n\t\t\t// \t\td.data = totalFixedCost\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กำไร(ขาดทุน)\") {\n\t\t\t// \t\td.data = netIncome\n\t\t\t// \t}\n\t\t\t// \tif (d.label === \"กำไร(ขาดทุน)-min\") {\n\t\t\t// \t\td.data = netIncome_MIN\n\t\t\t// \t}\n\t\t\t// \treturn shallowData\n\t\t\t// })\n\n\n\n\n\t\t\tsetChartData(data);\n\t\t\tsetChartOptions(options);\n\n\t\t}\n\n\t\tif (props.data_type === \"cashflow\") {\n\t\t\tlet CfoCfi = totalCFO.map((cfo, index) => cfo + totalCFI[index]);\n\t\t\tlet netCashflow = totalCFF.map((cff, index) => cff + CfoCfi[index]);\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"2020\", \"2021\", \"2022\", \"2023\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'Net Cashflow',\n\t\t\t\t\t\tborderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [50, 25, 12, 48]\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \ttype: 'line',\n\t\t\t\t\t// \tlabel: 'กำไร(ขาดทุน)-min',\n\t\t\t\t\t// \t// borderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t// \tborderColor: \"#cccccc\",\n\t\t\t\t\t// \tborderWidth: 2,\n\t\t\t\t\t// \tfill: false,\n\t\t\t\t\t// \ttension: 0.4,\n\t\t\t\t\t// \tdata: [0, 0, 0, 0]\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'CFI',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(175, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'CFO',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(75, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'CFF',\n\t\t\t\t\t\tdata: [4000, 3200, 2400, 1400],\n\t\t\t\t\t\tbackgroundColor: 'rgba(153, 102, 255, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(153, 102, 255)',\n\t\t\t\t\t\tborderWidth: 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = yearRange\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"CFO\" && totalCFO !== []) {\n\t\t\t\t\td.data = totalCFO\n\t\t\t\t}\n\t\t\t\tif (d.label === \"CFI\" && totalCFI !== []) {\n\t\t\t\t\td.data = totalCFI\n\t\t\t\t}\n\t\t\t\tif (d.label === \"CFF\" && totalCFF !== []) {\n\t\t\t\t\td.data = totalCFF\n\t\t\t\t}\n\t\t\t\tif (d.label === \"Net Cashflow\") {\n\t\t\t\t\td.data = netCashflow\n\t\t\t\t}\n\t\t\t\treturn shallowDataDatasets\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: yearRange,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\n\t\t\tsetChartData(data);\n\t\t\t// setChartData(shallowData[0]);\n\t\t\tsetChartOptions(options);\n\n\t\t}\n\t\tif (props.data_type === \"total-investment\") {\n\t\t\t// if (inv_amounts.length !== 0) {\n\t\t\t// \tsumInv = inv_amounts.reduce((result, number) => result + number);\n\t\t\t// }\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"ซื้อที่ดิน\", \"ทำร้าน\", \"บลาๆ\", \"บลาๆ\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t// {\n\t\t\t\t\t// \ttype: 'line',\n\t\t\t\t\t// \tlabel: 'ราคาสุทธิ',\n\t\t\t\t\t// \tborderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t// \tborderWidth: 2,\n\t\t\t\t\t// \tfill: false,\n\t\t\t\t\t// \ttension: 0.4,\n\t\t\t\t\t// \tdata: [50, 25, 12, 48]\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'ราคา/หน่วย',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(175, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = inv_names\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"ราคา/หน่วย\") {\n\t\t\t\t\td.data = inv_amounts\n\t\t\t\t}\n\t\t\t\t// if (d.label === \"ราคาสุทธิ\" ) {\n\t\t\t\t// \td.data = sumInv\n\t\t\t\t// }\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: inv_names,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\t\t\tsetChartData(data);\n\t\t\t// setChartData(shallowData[0]);\n\t\t\tsetChartOptions(options);\n\n\t\t}\n\t\tif (props.data_type === \"expense\") {\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tlabel: 'ราคาสุทธิ',\n\t\t\t\t\t\tborderColor: documentStyle.getPropertyValue('--blue-500'),\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tdata: [50, 25, 12, 48]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'ราคา/หน่วย',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(175, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = expense_names\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"ราคา/หน่วย\") {\n\t\t\t\t\td.data = expense_amounts\n\t\t\t\t}\n\t\t\t\t// if (d.label === \"ราคาสุทธิ\" ) {\n\t\t\t\t// \td.data = sumInv\n\t\t\t\t// }\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: expense_names,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\t\t\tsetChartData(data);\n\t\t\t// setChartData(shallowData[0]);\n\t\t\tsetChartOptions(options);\n\n\n\t\t}\n\t\tif (props.data_type === \"revenue-service\") {\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'ราคา/หน่วย',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(175, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = revenue_service_names\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"ราคา/หน่วย\") {\n\t\t\t\t\td.data = revenue_service_amounts\n\t\t\t\t}\n\t\t\t\t// if (d.label === \"ราคาสุทธิ\" ) {\n\t\t\t\t// \td.data = sumInv\n\t\t\t\t// }\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: revenue_service_names,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\t\t\tsetChartData(data);\n\t\t\t// setChartData(shallowData[0]);\n\t\t\tsetChartOptions(options);\n\n\n\t\t}\n\t\tif (props.data_type === \"revenue-product\") {\n\t\t\tconst data = {\n\t\t\t\tlabels: [\"เงินเดือนพบักงาน\", \"จ่าย\", \"บลาๆ\", \"บลาๆ\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tlabel: 'ราคา/หน่วย',\n\t\t\t\t\t\tdata: [200, 8400, 2400, 7500],\n\t\t\t\t\t\tbackgroundColor: 'rgba(175, 192, 192, 0.2)',\n\t\t\t\t\t\tborderColor: 'rgb(75, 192, 192)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tconst options = {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 0.6,\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tcolor: textColorSecondary\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: surfaceBorder\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet shallowData = data\n\t\t\tlet shallowDatalabels = data.labels\n\t\t\tlet shallowDataDatasets = data.datasets\n\n\t\t\tdata.labels = revenue_product_names\n\t\t\tshallowDataDatasets = shallowDataDatasets.map(d => {\n\t\t\t\tif (d.label === \"ราคา/หน่วย\") {\n\t\t\t\t\td.data = revenue_product_amounts\n\t\t\t\t}\n\t\t\t\t// if (d.label === \"ราคาสุทธิ\" ) {\n\t\t\t\t// \td.data = sumInv\n\t\t\t\t// }\n\t\t\t})\n\t\t\tshallowData = {\n\t\t\t\t...data,\n\t\t\t\tlabels: revenue_product_names,\n\t\t\t\tdatasets: shallowDataDatasets\n\t\t\t}\n\n\t\t\tsetChartData(data);\n\t\t\t// setChartData(shallowData[0]);\n\t\t\tsetChartOptions(options);\n\n\n\t\t}\n\n\t}, [totalRevenue, totalFixedCost, totalCFO, totalCFI, totalCFF,]);\n\n\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<Chart type=\"line\" data={chartData} options={chartOptions} />\n\t\t\t</div>\n\t)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}