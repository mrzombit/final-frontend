{"ast":null,"code":"import _toConsumableArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/statement/charts/combinationChartsMinMax.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Chart } from 'primereact/chart';\nexport default function CombinationChartsMinMax(props) {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    chartData = _useState2[0],\n    setChartData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chartOptions = _useState4[0],\n    setChartOptions = _useState4[1];\n  useEffect(function () {\n    // example data\n    var documentStyle = getComputedStyle(document.documentElement);\n    var data = {\n      labels: ['January', 'February', 'March', 'April'],\n      datasets: [{\n        type: 'line',\n        label: 'สุทธิ',\n        borderColor: documentStyle.getPropertyValue('--blue-500'),\n        borderWidth: 2,\n        fill: false,\n        tension: 0.4,\n        data: [500, 250, 1200, 480]\n      }, {\n        type: 'line',\n        label: 'สุทธิ',\n        borderColor: documentStyle.getPropertyValue('--blue-500'),\n        borderWidth: 2,\n        fill: false,\n        tension: 0.4,\n        data: [4000, 1500, 2200, 800]\n      }, {\n        label: 'Sales',\n        data: [2000, 1500, 3000, 2500],\n        backgroundColor: '#42A5F5',\n        borderColor: '#1E88E5',\n        borderWidth: 1\n      }, {\n        label: 'Sales2',\n        data: [3000, 2500, 4000, 3500],\n        backgroundColor: '#333333',\n        borderColor: '#1E88E5',\n        borderWidth: 1\n      }]\n    };\n\n    // calculate max and min values for each bar\n    var maxValues = data.datasets[0].data.map(function (value, index) {\n      var dataValues = data.datasets.map(function (dataset) {\n        return dataset.data[index];\n      });\n      return Math.max.apply(Math, _toConsumableArray(dataValues));\n    });\n    var minValues = data.datasets[0].data.map(function (value, index) {\n      var dataValues = data.datasets.map(function (dataset) {\n        return dataset.data[index];\n      });\n      return Math.min.apply(Math, _toConsumableArray(dataValues));\n    });\n\n    // set chart data and options\n    setChartData(data);\n    setChartOptions({\n      scales: {\n        x: {\n          stacked: true\n        },\n        y: {\n          stacked: true,\n          ticks: {\n            beginAtZero: true,\n            max: Math.max.apply(Math, _toConsumableArray(maxValues)),\n            min: Math.min.apply(Math, _toConsumableArray(minValues))\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    type: \"bar\",\n    data: chartData,\n    options: chartOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","Chart","CombinationChartsMinMax","props","_useState","_useState2","_slicedToArray","chartData","setChartData","_useState3","_useState4","chartOptions","setChartOptions","documentStyle","getComputedStyle","document","documentElement","data","labels","datasets","type","label","borderColor","getPropertyValue","borderWidth","fill","tension","backgroundColor","maxValues","map","value","index","dataValues","dataset","Math","max","apply","_toConsumableArray","minValues","min","scales","x","stacked","y","ticks","beginAtZero","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/statement/charts/combinationChartsMinMax.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Chart } from 'primereact/chart';\n\nexport default function CombinationChartsMinMax(props) {\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n\n  useEffect(() => {\n    // example data\n    const documentStyle = getComputedStyle(document.documentElement);\n    const data = {\n      labels: ['January', 'February', 'March', 'April'],\n      datasets: [\n        {\n            type: 'line',\n            label: 'สุทธิ',\n            borderColor: documentStyle.getPropertyValue('--blue-500'),\n            borderWidth: 2,\n            fill: false,\n            tension: 0.4,\n            data: [500, 250, 1200, 480,],\n        },\n        {\n            type: 'line',\n            label: 'สุทธิ',\n            borderColor: documentStyle.getPropertyValue('--blue-500'),\n            borderWidth: 2,\n            fill: false,\n            tension: 0.4,\n            data: [4000, 1500, 2200, 800],\n        },\n        {\n          label: 'Sales',\n          data: [2000, 1500, 3000, 2500],\n          backgroundColor: '#42A5F5',\n          borderColor: '#1E88E5',\n          borderWidth: 1,\n        },\n        {\n          label: 'Sales2',\n          data: [3000, 2500, 4000, 3500],\n          backgroundColor: '#333333',\n          borderColor: '#1E88E5',\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    // calculate max and min values for each bar\n    const maxValues = data.datasets[0].data.map((value, index) => {\n      const dataValues = data.datasets.map((dataset) => dataset.data[index]);\n      return Math.max(...dataValues);\n    });\n\n    const minValues = data.datasets[0].data.map((value, index) => {\n      const dataValues = data.datasets.map((dataset) => dataset.data[index]);\n      return Math.min(...dataValues);\n    });\n\n    // set chart data and options\n    setChartData(data);\n    setChartOptions({\n      scales: {\n\t\tx:{\n\t\t\tstacked: true,\n\t\t},\n        y: {\n          stacked: true,\n          ticks: {\n            beginAtZero: true,\n            max: Math.max(...maxValues),\n            min: Math.min(...minValues),\n          },\n        },\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <Chart type=\"bar\" data={chartData} options={chartOptions} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}