{"ast":null,"code":"import _objectSpread from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/ffc/ffcCard/ffcCard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { create, all } from 'mathjs';\nimport './ffcCard.css';\nimport { IconContext } from \"react-icons\";\nimport { BsFillBarChartFill } from \"react-icons/bs\";\nimport { FaThList } from \"react-icons/fa\";\nimport CombinationCharts from '../../statement/charts/combinationCharts';\nimport \"../../../pages/checkBiz/statementsPage/chartPages/chartPages.css\";\nimport \"../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../checkbiz/sidebarEditdata/editInputOnSidebar\";\nimport checkbizFormula from \"../../checkbiz/checkbizFormula/checkbizFormula\";\n\n// import BarChart from '../../statement/charts/barChart';\n// import CombinationChartsMinMax from '../../statement/charts/combinationChartsMinMax';\n// import stackedBar from '../../statement/charts/stackedBar';\n// import DoughnutChart from '../../statement/charts/doughnutChart';\n// import bizSidebar from '../../bizTools/bizSidebar/bizSidebar';\n// import statementHearder from '../../statement/statementHearder';\n// import sensitivityEditSidebar from '../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar';\n// import { AiOutlineDoubleLeft } from \"react-icons/ai\";\n// import BIZTOOL_PAGE_CONFIG from '../../../pages/bizTools/pageConfig';\n\nvar ffcCard = function ffcCard(props) {\n  var cbf = checkbizFormula();\n  var _cbf$calculateRevenue = cbf.calculateRevenue(),\n    totalRevenue = _cbf$calculateRevenue.totalRevenue,\n    totalRevenue_MIN = _cbf$calculateRevenue.totalRevenue_MIN;\n  var totalFixedCost = cbf.calculateTotalFixdcost();\n  var yearRange = cbf.calculateYearRange();\n  var totalCFO = cbf.calculateCFO();\n  var totalCFI = cbf.calculateCFI();\n  var totalCFF = cbf.calculateCFF();\n  var CfoCfi = totalCFO.map(function (cfo, index) {\n    return cfo + totalCFI[index];\n  });\n  var netCashflow = totalCFF.map(function (cff, index) {\n    return cff + CfoCfi[index];\n  });\n\n  // const [tableName, setTableName] = useState(\"\");\n  // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n  // const config = BIZTOOL_PAGE_CONFIG.revenue\n  // const [tableService, setTableService] = useState();\n  // const [service, setService] = useState();\n  // const [revenuePerService, setRevenuePerService] = useState();\n  // const [message, setMessage] = useState(\"\");\n  // const [sidebar, setSidebar] = useState(true);\n  // const showSidebar = () => setSidebar(!sidebar);\n\n  // const handleChange = (event) => {\n  //     setMessage(event.target.value);\n  //     console.log(\"value is:\", event.target.value);\n  // };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    chart = _useState2[0],\n    setChart = _useState2[1]; // const totalRevenue = [];\n  // const totalFixedCost = [];\n  // const totalCFO = [];\n  // const totalCFI = [0, 0, 0];\n  // const totalCFF = [];\n  var totalInvestment = 0;\n  // const yearRange = [2565, 2566, 2567, 2568];\n\n  var inv_names = [];\n  var inv_amounts = [];\n  var expense_names = [];\n  var expense_amounts = [];\n  var revenue_service_names = [];\n  var revenue_service_amounts = [];\n  var revenue_product_names = [];\n  var revenue_product_amounts = [];\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState3 = useState({\n      user: false,\n      projects: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoaded = _useState4[0],\n    setIsLoaded = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    reload = _useState6[0],\n    setReload = _useState6[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setModelConfig(selectedProject.model_config);\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n    setTableMiscellaneousData(selectedProject.miscellaneous);\n  }, [selectedProject]);\n  var _useState7 = useState(selectedProject.model_config),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modelConfig = _useState8[0],\n    setModelConfig = _useState8[1];\n  var _useState9 = useState(selectedProject.revenue),\n    _useState10 = _slicedToArray(_useState9, 2),\n    tableRevenueData = _useState10[0],\n    setTableRevenueData = _useState10[1];\n  var _useState11 = useState(selectedProject.expense),\n    _useState12 = _slicedToArray(_useState11, 2),\n    tableExpenseData = _useState12[0],\n    setTableExpenseData = _useState12[1];\n  var _useState13 = useState(selectedProject.miscellaneous),\n    _useState14 = _slicedToArray(_useState13, 2),\n    tableMiscellaneousData = _useState14[0],\n    setTableMiscellaneousData = _useState14[1];\n  var onValChange = function onValChange(tableID, unitID, amountPerUnit) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    var shallowFixedCostTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    var shallowInvestmentTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables));\n    shallowServiceTables = shallowServiceTables.map(function (eachTableService) {\n      if (eachTableService._id === tableID) {\n        eachTableService.services = eachTableService.services.map(function (eachService) {\n          if (eachService._id === unitID) {\n            if (eachService.revenue_per_service !== amountPerUnit) {\n              eachService.revenue_per_service = amountPerUnit;\n            }\n          }\n          return eachService;\n        });\n      }\n      return eachTableService;\n    });\n    shallowProductTables = shallowProductTables.map(function (eachTableProduct) {\n      if (eachTableProduct._id === tableID) {\n        eachTableProduct.products = eachTableProduct.products.map(function (eachProduct) {\n          if (eachProduct._id === unitID) {\n            if (eachProduct.revenue_per_unit !== amountPerUnit) {\n              eachProduct.revenue_per_unit = amountPerUnit;\n            }\n          }\n          return eachProduct;\n        });\n      }\n      return eachTableProduct;\n    });\n    shallowFixedCostTables = shallowFixedCostTables.map(function (eachTableFixedCost) {\n      if (eachTableFixedCost._id === tableID) {\n        eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(function (eachFixedCost) {\n          if (eachFixedCost._id === unitID) {\n            if (eachFixedCost.amount !== amountPerUnit) {\n              eachFixedCost.amount = amountPerUnit;\n            }\n          }\n          return eachFixedCost;\n        });\n      }\n      return eachTableFixedCost;\n    });\n\n    // shallowInvestmentTables = shallowInvestmentTables.map(\n    //   (eachTableInvestment) => {\n    //     if (eachTableInvestment._id === tableID) {\n    //       eachTableInvestment.investments = eachTableInvestment.investments.map(\n    //         (eachInvestment) => {\n    //           if (eachInvestment._id === unitID) {\n    //             if (eachInvestment.amount !== amountPerUnit) {\n    //               eachInvestment.amount = amountPerUnit;\n    //             }\n    //           }\n    //           return eachInvestment;\n    //         }\n    //       );\n    //     }\n    //     return eachTableInvestment;\n    //   }\n    // );\n\n    // Find the index of the table with the matching ID\n    var tableIndex = shallowInvestmentTables.findIndex(function (table) {\n      return table._id === tableID;\n    });\n\n    // Update the investment table if found\n    if (tableIndex !== -1) {\n      shallowInvestmentTables[tableIndex] = _objectSpread({}, shallowInvestmentTables[tableIndex], {\n        investments: shallowInvestmentTables[tableIndex].investments.map(function (eachInvestment) {\n          if (eachInvestment._id === unitID) {\n            if (eachInvestment.amount !== amountPerUnit) {\n              eachInvestment.amount = amountPerUnit;\n            }\n          }\n          return eachInvestment;\n        })\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      },\n      expense: {\n        fixed_cost_tables: shallowFixedCostTables,\n        investment_tables: shallowInvestmentTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  function calculateRevenue_service() {\n    var sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    var sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n  function calculateRevenue() {\n    var totalValue = 0;\n    totalValue = calculateRevenue_service() + calculateRevenue_product();\n    totalRevenue.push(totalValue);\n    return totalValue;\n  }\n  function calculateFixedCost() {\n    var sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.forEach(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n  function calculateCFO() {\n    var result = 0;\n    result = calculateRevenue() - calculateFixedCost();\n    return result;\n  }\n  function calculateCFI() {\n    var result = 0;\n    return result;\n  }\n  function calculateCFF() {\n    var result = 0;\n    return result;\n  }\n\n  // function netCashflow() {\n  //     let result = 0\n  //     result = calculateCFO() + calculateCFI() + calculateCFF()\n  //     return result\n  // }\n  ////////////////////////////////////////////\n  function total_CFO() {\n    var sum_fixed_cost = 0;\n    var increase = 0;\n    var sum_service_revenue = 0;\n    var sum_product_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n        increase = eachFixedCost.cost_increase;\n      });\n    });\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n    for (var i = 1; i < modelConfig.projection_period; i++) {\n      sum_fixed_cost += sum_fixed_cost * (increase / 100);\n      increase += increase;\n      totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n    }\n    // return sum_fixed_cost\n  }\n\n  function total_CFI() {\n    var sum_investment = 0;\n    tableExpenseData.investment_tables.map(function (table) {\n      table.investments.map(function (eachData) {\n        sum_investment += eachData.amount;\n      });\n    });\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalCFI.unshift(-sum_investment);\n  }\n  function total_CFF() {\n    var total = 0;\n    var increase = 0;\n    var sum_debt = 0;\n    var sum_equity = 0;\n    tableMiscellaneousData.debt_issuance.forEach(function (table) {\n      table.payments.map(function (eachData) {\n        //year?\n        // sum_debt += eachData.amount;\n        totalCFF.push(-eachData.amount);\n      });\n    });\n\n    // tableMiscellaneousData.equity_contribution.forEach((table) => {\n    //   sum_equity += table.amount;\n    // });\n\n    // for (let i = 1; i < modelConfig.projection_period; i++) {\n    //   totalCFF.push(sum_equity - sum_debt);\n    // }\n  }\n\n  //////////////////////////////////////////// FFC 5\n\n  function calculateInitialInvestment() {\n    tableExpenseData.investment_tables.forEach(function (table) {\n      table.investments.forEach(function (eachCost) {\n        totalInvestment += eachCost.amount;\n      });\n    });\n  }\n  function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n    var cashFlows = [];\n    var currentCashFlow = initialInvestment;\n    for (var i = 0; i < numberOfYears; i++) {\n      cashFlows.push(currentCashFlow);\n      currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n    }\n    return cashFlows;\n  }\n  function calculateNPV(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    console.log(\"NPV : \".concat(initialInvestment, \" ,[ \").concat(cashFlows, \" ], \").concat(discountRate));\n    return netPresentValue.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  var math = create(all);\n  function calculateIRR(cashFlows) {\n    var math = require('mathjs');\n    var irr = math.finance.IRR(cashFlows);\n    return irr.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  function calculatePaybackPeriod(initialInvestment, cashFlows) {\n    var cumulativeCashFlow = -initialInvestment; // Add the initial investment as a negative cash flow\n    var paybackPeriod = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      cumulativeCashFlow += cashFlows[i];\n      if (cumulativeCashFlow >= 0) {\n        paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1];\n        break;\n      }\n    }\n    return paybackPeriod.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    var profitabilityIndex = netPresentValue / initialInvestment;\n    return profitabilityIndex.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  ///////////////////////////////////////////////////// FOR CHART\n\n  function calculateInitialInvestment_for_chart() {\n    tableExpenseData.investment_tables.map(function (table) {\n      table.investments.map(function (eachCost) {\n        inv_names.push(eachCost.name);\n        inv_amounts.push(eachCost.amount);\n      });\n    });\n  }\n  function calculateFixedCost_for_chart() {\n    tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n        expense_names.push(eachFixedCost.name);\n        expense_amounts.push(eachFixedCost.amount);\n      });\n    });\n  }\n  function calculateRevenue_service_for_chart() {\n    tableRevenueData.service_tables.map(function (tableService) {\n      tableService.services.map(function (eachService) {\n        revenue_service_names.push(eachService.name);\n        revenue_service_amounts.push(eachService.revenue_per_service);\n      });\n    });\n  }\n  function calculateRevenue_product_for_chart() {\n    tableRevenueData.product_tables.map(function (tableProduct) {\n      tableProduct.products.map(function (eachProduct) {\n        revenue_product_names.push(eachProduct.name);\n        revenue_product_amounts.push(eachProduct.revenue_per_unit);\n      });\n    });\n  }\n  //////////////////////////////////////////// FFC 5 ;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-table-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 21\n    }\n  }, props.tableName ? props.tableName : \"tableName\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconContext.Provider, {\n    value: {\n      color: \"#9fa7c2\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaThList, {\n    onClick: function onClick() {\n      return setChart(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(BsFillBarChartFill, {\n    onClick: function onClick() {\n      return setChart(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      margin: \"2px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, chart ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-body-chart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 25\n    }\n  }, props.type == \"total-investment\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 37\n    }\n  }, calculateInitialInvestment_for_chart()), /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type,\n    inv_names: inv_names,\n    inv_amounts: inv_amounts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 37\n    }\n  })), props.type == \"expense\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 37\n    }\n  }, calculateFixedCost_for_chart()), /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type,\n    expense_names: expense_names,\n    expense_amounts: expense_amounts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 37\n    }\n  })), props.type == \"revenue-service\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, calculateRevenue_service_for_chart()), /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type,\n    revenue_service_names: revenue_service_names,\n    revenue_service_amounts: revenue_service_amounts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 37\n    }\n  })), props.type == \"revenue-product\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 37\n    }\n  }, calculateRevenue_product_for_chart()), /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type,\n    revenue_product_names: revenue_product_names,\n    revenue_product_amounts: revenue_product_amounts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 37\n    }\n  })), props.type == \"cashflow\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type,\n    totalCFO: calculateCFO(),\n    totalCFI: calculateCFI(),\n    totalCFF: calculateCFF(),\n    inv_names: inv_names\n    // inv_amounts={inv_amounts}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 37\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 25\n    }\n  }, props.type === \"revenue\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 37\n    }\n  }, tableRevenueData.service_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 45\n      }\n    }, table.services.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 57\n        }\n      }, each.revenue_per_service), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }), tableRevenueData.product_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 45\n      }\n    }, table.products.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 57\n        }\n      }, each.revenue_per_unit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"revenue-service\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 37\n    }\n  }, tableRevenueData.service_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 45\n      }\n    }, table.services.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 57\n        }\n      }, each.revenue_per_service), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"revenue-product\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 37\n    }\n  }, tableRevenueData.product_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 45\n      }\n    }, table.products.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 57\n        }\n      }, each.revenue_per_unit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"fixed-cost\" && tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tableFixedCost._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 37\n      }\n    }, tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: eachFixedCost._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 45\n        }\n      }, eachFixedCost.name !== \"\" && /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n        name: eachFixedCost.name,\n        type: \"text\",\n        defaultValue: eachFixedCost.amount,\n        className: \"chart-input\",\n        onChange: function onChange(event) {\n          return onValChange(tableFixedCost._id, eachFixedCost._id, event.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 53\n        }\n      }));\n    }));\n  }), props.type === \"expense\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 37\n    }\n  }, tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: tableFixedCost._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 45\n      }\n    }, tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: eachFixedCost._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 57\n        }\n      }, eachFixedCost.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 57\n        }\n      }, eachFixedCost.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 57\n        }\n      }, eachFixedCost.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"total-investment\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 33\n    }\n  }, calculateInitialInvestment(), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 37\n    }\n  }, tableExpenseData.investment_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 45\n      }\n    }, table.investments.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 57\n        }\n      }, each.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"cashflow\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 33\n    }\n  }, calculateInitialInvestment(), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 45\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 49\n      }\n    }, i);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 41\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E14\\u0E33\\u0E40\\u0E19\\u0E34\\u0E19\\u0E07\\u0E32\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 45\n    }\n  }, \"\\u0E15\\u0E49\\u0E19\\u0E17\\u0E38\\u0E19\\u0E17\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E40\\u0E07\\u0E34\\u0E19\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 49\n      }\n    }, calculateFixedCost().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 45\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E17\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E40\\u0E07\\u0E34\\u0E19\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 49\n      }\n    }, calculateRevenue().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 41\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E25\\u0E07\\u0E17\\u0E38\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 45\n    }\n  }, \"\\u0E04\\u0E48\\u0E32\\u0E43\\u0E0A\\u0E49\\u0E08\\u0E48\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E25\\u0E07\\u0E17\\u0E38\\u0E19\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 49\n      }\n    }, totalInvestment.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 41\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E08\\u0E31\\u0E14\\u0E2B\\u0E32\\u0E40\\u0E07\\u0E34\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 45\n    }\n  }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E48\\u0E32\\u0E22\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E0A\\u0E33\\u0E23\\u0E30\\u0E40\\u0E07\\u0E34\\u0E19\\u0E01\\u0E39\\u0E49\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"td\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 49\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 45\n    }\n  }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E02\\u0E32\\u0E22\\u0E2B\\u0E38\\u0E49\\u0E19\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"td\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 49\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 45\n    }\n  }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E48\\u0E32\\u0E22\\u0E08\\u0E32\\u0E01\\u0E40\\u0E07\\u0E34\\u0E19\\u0E1B\\u0E31\\u0E19\\u0E1C\\u0E25\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"td\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 49\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 45\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 49\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })))), props.type === \"financial-return\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 33\n    }\n  }, calculateInitialInvestment(), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 45\n    }\n  }, \"Net Present value (NPV)\"), console.log(\"totalInvestment\" + totalInvestment), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 45\n    }\n  }, calculateNPV(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 45\n    }\n  }, \"Payback period\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 45\n    }\n  }, calculatePaybackPeriod(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4)))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 45\n    }\n  }, \"profitability index (PI)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 45\n    }\n  }, calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7))))), props.type === \"entrepreneurial-decision\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 33\n    }\n  }, calculateInitialInvestment(), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 45\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E40\\u0E07\\u0E34\\u0E19\\u0E25\\u0E07\\u0E17\\u0E38\\u0E19\"), console.log(\"totalInvestment\" + totalInvestment), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 45\n    }\n  }, totalInvestment)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 45\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E04\\u0E48\\u0E32\\u0E43\\u0E0A\\u0E49\\u0E08\\u0E48\\u0E32\\u0E22\\u0E41\\u0E15\\u0E48\\u0E25\\u0E30\\u0E1B\\u0E35\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 45\n    }\n  }, calculatePaybackPeriod(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4)))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 45\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E22\\u0E2D\\u0E14\\u0E02\\u0E32\\u0E22 (\\u0E1B\\u0E35\\u0E17\\u0E35\\u0E48 1 - n) \\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E0A\\u0E34\\u0E49\\u0E19\\u0E15\\u0E48\\u0E2D\\u0E1B\\u0E35\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 45\n    }\n  }, calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 45\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E23\\u0E32\\u0E04\\u0E32\\u0E15\\u0E48\\u0E2D\\u0E0A\\u0E37\\u0E49\\u0E19\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 45\n    }\n  }, calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 45\n    }\n  }, \"\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E15\\u0E49\\u0E19\\u0E17\\u0E38\\u0E19\\u0E15\\u0E48\\u0E2D\\u0E0A\\u0E34\\u0E49\\u0E19\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 45\n    }\n  }, calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)))))))));\n};\nexport default ffcCard;","map":{"version":3,"names":["React","useEffect","useState","create","all","IconContext","BsFillBarChartFill","FaThList","CombinationCharts","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","EditInputOnSidebar","checkbizFormula","ffcCard","props","cbf","_cbf$calculateRevenue","calculateRevenue","totalRevenue","totalRevenue_MIN","totalFixedCost","calculateTotalFixdcost","yearRange","calculateYearRange","totalCFO","calculateCFO","totalCFI","calculateCFI","totalCFF","calculateCFF","CfoCfi","map","cfo","index","netCashflow","cff","_useState","_useState2","_slicedToArray","chart","setChart","totalInvestment","inv_names","inv_amounts","expense_names","expense_amounts","revenue_service_names","revenue_service_amounts","revenue_product_names","revenue_product_amounts","dispatch","selectedProject","state","projects","_useState3","user","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","reload","setReload","_id","project","setModelConfig","model_config","setTableRevenueData","revenue","setTableExpenseData","expense","setTableMiscellaneousData","miscellaneous","_useState7","_useState8","modelConfig","_useState9","_useState10","tableRevenueData","_useState11","_useState12","tableExpenseData","_useState13","_useState14","tableMiscellaneousData","onValChange","tableID","unitID","amountPerUnit","shallowServiceTables","JSON","parse","stringify","service_tables","shallowProductTables","product_tables","shallowFixedCostTables","fixed_cost_tables","shallowInvestmentTables","investment_tables","eachTableService","services","eachService","revenue_per_service","eachTableProduct","products","eachProduct","revenue_per_unit","eachTableFixedCost","fixed_costs","eachFixedCost","amount","tableIndex","findIndex","table","_objectSpread","investments","eachInvestment","shallowSelectedProject","id","data","calculateRevenue_service","sum_service_revenue","forEach","tableService","calculateRevenue_product","sum_product_revenue","tableProduct","totalValue","push","calculateFixedCost","sum_fixed_cost","tableFixedCost","result","total_CFO","increase","cost_increase","i","projection_period","total_CFI","sum_investment","eachData","unshift","total_CFF","total","sum_debt","sum_equity","debt_issuance","payments","calculateInitialInvestment","eachCost","calculateCashFlows","initialInvestment","annualGrowthRate","numberOfYears","cashFlows","currentCashFlow","calculateNPV","discountRate","presentValueOfCashFlows","length","Math","pow","netPresentValue","console","log","concat","toFixed","replace","math","calculateIRR","require","irr","finance","IRR","calculatePaybackPeriod","cumulativeCashFlow","paybackPeriod","calculateProfitabilityIndex","profitabilityIndex","calculateInitialInvestment_for_chart","name","calculateFixedCost_for_chart","calculateRevenue_service_for_chart","calculateRevenue_product_for_chart","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","tableName","Provider","value","color","onClick","style","margin","type","data_type","Fragment","key","each","start_date","substring","defaultValue","onChange","event","target","scope","eachYear"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/ffc/ffcCard/ffcCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { create, all } from 'mathjs'\nimport './ffcCard.css'\nimport { IconContext } from \"react-icons\";\nimport { BsFillBarChartFill } from \"react-icons/bs\";\nimport { FaThList } from \"react-icons/fa\";\n\nimport CombinationCharts from '../../statement/charts/combinationCharts';\nimport \"../../../pages/checkBiz/statementsPage/chartPages/chartPages.css\";\nimport \"../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    fetchProjectById,\n    projectUpdated,\n    updateProject,\n} from \"../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../checkbiz/sidebarEditdata/editInputOnSidebar\";\nimport checkbizFormula from \"../../checkbiz/checkbizFormula/checkbizFormula\";\n\n// import BarChart from '../../statement/charts/barChart';\n// import CombinationChartsMinMax from '../../statement/charts/combinationChartsMinMax';\n// import stackedBar from '../../statement/charts/stackedBar';\n// import DoughnutChart from '../../statement/charts/doughnutChart';\n// import bizSidebar from '../../bizTools/bizSidebar/bizSidebar';\n// import statementHearder from '../../statement/statementHearder';\n// import sensitivityEditSidebar from '../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar';\n// import { AiOutlineDoubleLeft } from \"react-icons/ai\";\n// import BIZTOOL_PAGE_CONFIG from '../../../pages/bizTools/pageConfig';\n\nconst ffcCard = (props) => {\n\n    const cbf = checkbizFormula();\n    const { totalRevenue, totalRevenue_MIN } = cbf.calculateRevenue();\n    const totalFixedCost = cbf.calculateTotalFixdcost();\n    const yearRange = cbf.calculateYearRange();\n    const totalCFO = cbf.calculateCFO();\n    const totalCFI = cbf.calculateCFI();\n    const totalCFF = cbf.calculateCFF();\n    let CfoCfi = totalCFO.map((cfo, index) => cfo + totalCFI[index]);\n    let netCashflow = totalCFF.map((cff, index) => cff + CfoCfi[index]);\n\n\n    // const [tableName, setTableName] = useState(\"\");\n    // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n    // const config = BIZTOOL_PAGE_CONFIG.revenue\n    // const [tableService, setTableService] = useState();\n    // const [service, setService] = useState();\n    // const [revenuePerService, setRevenuePerService] = useState();\n    // const [message, setMessage] = useState(\"\");\n    // const [sidebar, setSidebar] = useState(true);\n    // const showSidebar = () => setSidebar(!sidebar);\n\n    // const handleChange = (event) => {\n    //     setMessage(event.target.value);\n    //     console.log(\"value is:\", event.target.value);\n    // };\n\n\n    const [chart, setChart] = useState(false);\n    // const totalRevenue = [];\n    // const totalFixedCost = [];\n    // const totalCFO = [];\n    // const totalCFI = [0, 0, 0];\n    // const totalCFF = [];\n    let totalInvestment = 0;\n    // const yearRange = [2565, 2566, 2567, 2568];\n\n    const inv_names = [];\n    const inv_amounts = [];\n    const expense_names = [];\n    const expense_amounts = [];\n    const revenue_service_names = [];\n    const revenue_service_amounts = [];\n    const revenue_product_names = [];\n    const revenue_product_amounts = [];\n\n\n    const dispatch = useDispatch();\n    const selectedProject = useSelector(\n        (state) => state.projects.selectedProject\n    );\n    const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n    const [reload, setReload] = useState(false);\n\n\n    useEffect(() => {\n\n        if (isLoaded.projects) {\n            dispatch(fetchProjectById(selectedProject._id));\n            setIsLoaded({ user: true, project: true });\n        }\n        if (!reload) {\n            dispatch(fetchProjectById(selectedProject._id));\n            setReload(true);\n        }\n        setModelConfig(selectedProject.model_config);\n        setTableRevenueData(selectedProject.revenue);\n        setTableExpenseData(selectedProject.expense);\n        setTableMiscellaneousData(selectedProject.miscellaneous);\n    }, [selectedProject]);\n\n    const [modelConfig, setModelConfig] = useState(\n        selectedProject.model_config\n    );\n    const [tableRevenueData, setTableRevenueData] = useState(\n        selectedProject.revenue\n    );\n    const [tableExpenseData, setTableExpenseData] = useState(\n        selectedProject.expense\n    );\n    const [tableMiscellaneousData, setTableMiscellaneousData] = useState(\n        selectedProject.miscellaneous\n    );\n\n    const onValChange = (tableID, unitID, amountPerUnit) => {\n        let shallowServiceTables = JSON.parse(\n            JSON.stringify(selectedProject.revenue.service_tables)\n        );\n        let shallowProductTables = JSON.parse(\n            JSON.stringify(selectedProject.revenue.product_tables)\n        );\n        let shallowFixedCostTables = JSON.parse(\n            JSON.stringify(selectedProject.expense.fixed_cost_tables)\n        );\n        let shallowInvestmentTables = JSON.parse(\n            JSON.stringify(selectedProject.expense.investment_tables)\n        );\n\n        shallowServiceTables = shallowServiceTables.map((eachTableService) => {\n            if (eachTableService._id === tableID) {\n                eachTableService.services = eachTableService.services.map(\n                    (eachService) => {\n                        if (eachService._id === unitID) {\n                            if (eachService.revenue_per_service !== amountPerUnit) {\n                                eachService.revenue_per_service = amountPerUnit;\n                            }\n                        }\n                        return eachService;\n                    }\n                );\n            }\n            return eachTableService;\n        });\n\n        shallowProductTables = shallowProductTables.map((eachTableProduct) => {\n            if (eachTableProduct._id === tableID) {\n                eachTableProduct.products = eachTableProduct.products.map(\n                    (eachProduct) => {\n                        if (eachProduct._id === unitID) {\n                            if (eachProduct.revenue_per_unit !== amountPerUnit) {\n                                eachProduct.revenue_per_unit = amountPerUnit;\n                            }\n                        }\n                        return eachProduct;\n                    }\n                );\n            }\n            return eachTableProduct;\n        });\n\n        shallowFixedCostTables = shallowFixedCostTables.map(\n            (eachTableFixedCost) => {\n                if (eachTableFixedCost._id === tableID) {\n                    eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(\n                        (eachFixedCost) => {\n                            if (eachFixedCost._id === unitID) {\n                                if (eachFixedCost.amount !== amountPerUnit) {\n                                    eachFixedCost.amount = amountPerUnit;\n                                }\n                            }\n                            return eachFixedCost;\n                        }\n                    );\n                }\n                return eachTableFixedCost;\n            }\n        );\n\n        // shallowInvestmentTables = shallowInvestmentTables.map(\n        //   (eachTableInvestment) => {\n        //     if (eachTableInvestment._id === tableID) {\n        //       eachTableInvestment.investments = eachTableInvestment.investments.map(\n        //         (eachInvestment) => {\n        //           if (eachInvestment._id === unitID) {\n        //             if (eachInvestment.amount !== amountPerUnit) {\n        //               eachInvestment.amount = amountPerUnit;\n        //             }\n        //           }\n        //           return eachInvestment;\n        //         }\n        //       );\n        //     }\n        //     return eachTableInvestment;\n        //   }\n        // );\n\n        // Find the index of the table with the matching ID\n        const tableIndex = shallowInvestmentTables.findIndex((table) => table._id === tableID);\n\n        // Update the investment table if found\n        if (tableIndex !== -1) {\n            shallowInvestmentTables[tableIndex] = {\n                ...shallowInvestmentTables[tableIndex],\n                investments: shallowInvestmentTables[tableIndex].investments.map((eachInvestment) => {\n                    if (eachInvestment._id === unitID) {\n                        if (eachInvestment.amount !== amountPerUnit) {\n                            eachInvestment.amount = amountPerUnit;\n                        }\n                    }\n                    return eachInvestment;\n                }),\n            };\n        }\n\n        let shallowSelectedProject = {\n            ...selectedProject,\n            revenue: {\n                service_tables: shallowServiceTables,\n                product_tables: shallowProductTables,\n            },\n            expense: {\n                fixed_cost_tables: shallowFixedCostTables,\n                investment_tables: shallowInvestmentTables,\n            },\n        };\n        dispatch(projectUpdated(shallowSelectedProject));\n        dispatch(\n            updateProject({ id: selectedProject._id, data: shallowSelectedProject })\n        );\n    };\n\n\n    function calculateRevenue_service() {\n        let sum_service_revenue = 0;\n        tableRevenueData.service_tables.forEach((tableService) => {\n            tableService.services.forEach((eachService) => {\n                sum_service_revenue += eachService.revenue_per_service;\n            });\n        });\n        return sum_service_revenue;\n    }\n    function calculateRevenue_product() {\n        let sum_product_revenue = 0;\n        tableRevenueData.product_tables.forEach((tableProduct) => {\n            tableProduct.products.forEach((eachProduct) => {\n                sum_product_revenue += eachProduct.revenue_per_unit;\n            });\n        });\n        return sum_product_revenue;\n    }\n\n    function calculateRevenue() {\n        let totalValue = 0;\n        totalValue = calculateRevenue_service() + calculateRevenue_product();\n        totalRevenue.push(totalValue);\n        return totalValue;\n    }\n\n    function calculateFixedCost() {\n        let sum_fixed_cost = 0;\n        tableExpenseData.fixed_cost_tables.forEach((tableFixedCost) => {\n            tableFixedCost.fixed_costs.forEach((eachFixedCost) => {\n                sum_fixed_cost += eachFixedCost.amount;\n            });\n        });\n        return sum_fixed_cost;\n    }\n\n\n\n    function calculateCFO() {\n        let result = 0\n        result = calculateRevenue() - calculateFixedCost();\n        return result\n    }\n\n    function calculateCFI() {\n        let result = 0\n        return result\n    }\n\n    function calculateCFF() {\n        let result = 0\n        return result\n    }\n\n    // function netCashflow() {\n    //     let result = 0\n    //     result = calculateCFO() + calculateCFI() + calculateCFF()\n    //     return result\n    // }\n    ////////////////////////////////////////////\n    function total_CFO() {\n        let sum_fixed_cost = 0;\n        let increase = 0;\n        let sum_service_revenue = 0;\n        let sum_product_revenue = 0;\n\n        tableRevenueData.service_tables.forEach((tableService) => {\n            tableService.services.forEach((eachService) => {\n                sum_service_revenue += eachService.revenue_per_service;\n            });\n        });\n\n        tableRevenueData.product_tables.forEach((tableProduct) => {\n            tableProduct.products.forEach((eachProduct) => {\n                sum_product_revenue += eachProduct.revenue_per_unit;\n            });\n        });\n\n        tableExpenseData.fixed_cost_tables.map((tableFixedCost) => {\n            tableFixedCost.fixed_costs.map((eachFixedCost) => {\n                sum_fixed_cost += eachFixedCost.amount;\n                increase = eachFixedCost.cost_increase\n            });\n        });\n\n\n\n        // ปีแรก\n        // totalFixedCost.push(sum_fixed_cost + sum_investment);\n        totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n\n        for (let i = 1; i < modelConfig.projection_period; i++) {\n            sum_fixed_cost += sum_fixed_cost * (increase / 100)\n            increase += increase\n            totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n        }\n        // return sum_fixed_cost\n    }\n    function total_CFI() {\n        let sum_investment = 0;\n        tableExpenseData.investment_tables.map((table) => {\n            table.investments.map((eachData) => {\n                sum_investment += eachData.amount\n            })\n        })\n\n        // ปีแรก\n        // totalFixedCost.push(sum_fixed_cost + sum_investment);\n        totalCFI.unshift(-sum_investment);\n\n    }\n    function total_CFF() {\n        let total = 0;\n        let increase = 0;\n        let sum_debt = 0;\n        let sum_equity = 0;\n\n        tableMiscellaneousData.debt_issuance.forEach((table) => {\n            table.payments.map((eachData) => {\n                //year?\n                // sum_debt += eachData.amount;\n                totalCFF.push(-eachData.amount);\n            })\n        });\n\n        // tableMiscellaneousData.equity_contribution.forEach((table) => {\n        //   sum_equity += table.amount;\n        // });\n\n\n\n        // for (let i = 1; i < modelConfig.projection_period; i++) {\n        //   totalCFF.push(sum_equity - sum_debt);\n        // }\n\n    }\n\n    //////////////////////////////////////////// FFC 5\n\n    function calculateInitialInvestment() {\n        tableExpenseData.investment_tables.forEach((table) => {\n            table.investments.forEach((eachCost) => {\n                totalInvestment += eachCost.amount;\n            });\n        });\n    }\n\n\n    function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n        let cashFlows = [];\n        let currentCashFlow = initialInvestment;\n\n        for (let i = 0; i < numberOfYears; i++) {\n            cashFlows.push(currentCashFlow);\n            currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n        }\n\n        return cashFlows;\n    }\n\n    function calculateNPV(initialInvestment, cashFlows, discountRate) {\n        let presentValueOfCashFlows = 0\n        for (let i = 0; i < cashFlows.length; i++) {\n            presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n        }\n        const netPresentValue = presentValueOfCashFlows - initialInvestment\n        console.log(`NPV : ${initialInvestment} ,[ ${cashFlows} ], ${discountRate}`)\n\n        return netPresentValue.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    }\n\n    const math = create(all)\n\n    function calculateIRR(cashFlows) {\n        const math = require('mathjs');\n\n        const irr = math.finance.IRR(cashFlows);\n\n        return irr.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    }\n\n\n\n    function calculatePaybackPeriod(initialInvestment, cashFlows) {\n        let cumulativeCashFlow = -initialInvestment // Add the initial investment as a negative cash flow\n        let paybackPeriod = 0\n\n        for (let i = 0; i < cashFlows.length; i++) {\n            cumulativeCashFlow += cashFlows[i]\n            if (cumulativeCashFlow >= 0) {\n                paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1]\n                break\n            }\n        }\n\n        return paybackPeriod.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    }\n\n    function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n        let presentValueOfCashFlows = 0\n        for (let i = 0; i < cashFlows.length; i++) {\n            presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n        }\n        const netPresentValue = presentValueOfCashFlows - initialInvestment\n        const profitabilityIndex = netPresentValue / initialInvestment\n        return profitabilityIndex.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    }\n    ///////////////////////////////////////////////////// FOR CHART\n\n    function calculateInitialInvestment_for_chart() {\n        tableExpenseData.investment_tables.map((table) => {\n            table.investments.map((eachCost) => {\n                inv_names.push(eachCost.name)\n                inv_amounts.push(eachCost.amount)\n            });\n        });\n    }\n    function calculateFixedCost_for_chart() {\n        tableExpenseData.fixed_cost_tables.map((tableFixedCost) => {\n            tableFixedCost.fixed_costs.map((eachFixedCost) => {\n                expense_names.push(eachFixedCost.name)\n                expense_amounts.push(eachFixedCost.amount)\n            });\n        });\n    }\n    function calculateRevenue_service_for_chart() {\n        tableRevenueData.service_tables.map((tableService) => {\n            tableService.services.map((eachService) => {\n                revenue_service_names.push(eachService.name)\n                revenue_service_amounts.push(eachService.revenue_per_service)\n            });\n        });\n    }\n    function calculateRevenue_product_for_chart() {\n        tableRevenueData.product_tables.map((tableProduct) => {\n            tableProduct.products.map((eachProduct) => {\n                revenue_product_names.push(eachProduct.name)\n                revenue_product_amounts.push(eachProduct.revenue_per_unit)\n            });\n        });\n    }\n    //////////////////////////////////////////// FFC 5 ;\n\n\n    return (\n        <div className=\"ffc-card-container\">\n            <div>\n                <div className='d-flex justify-content-between'>\n                    <div className=\"ffc-table-name\">{props.tableName ? props.tableName : \"tableName\"}</div>\n                    <div className='d-flex'>\n                        <IconContext.Provider value={{ color: \"#9fa7c2\" }}>\n                            <FaThList onClick={() => setChart(false)} />&nbsp;\n                            <BsFillBarChartFill onClick={() => setChart(true)} />\n                        </IconContext.Provider>\n                    </div>\n                </div>\n                <hr style={{ margin: \"2px\" }}></hr>\n                <div>\n                    {chart ?\n                        <div className=\"ffc-card-body-chart\">\n                            {props.type == \"total-investment\" &&\n                                <div>\n                                    <div>{calculateInitialInvestment_for_chart()}</div>\n                                    <CombinationCharts\n                                        className=\"combination-charts\"\n                                        data_type={props.type}\n                                        inv_names={inv_names}\n                                        inv_amounts={inv_amounts}\n                                    />\n                                </div>\n                            }\n                            {props.type == \"expense\" &&\n                                <div>\n                                    <div>{calculateFixedCost_for_chart()}</div>\n                                    <CombinationCharts\n                                        className=\"combination-charts\"\n                                        data_type={props.type}\n                                        expense_names={expense_names}\n                                        expense_amounts={expense_amounts}\n                                    />\n                                </div>\n                            }\n                            {props.type == \"revenue-service\" &&\n                                <div>\n                                    <div>{calculateRevenue_service_for_chart()}</div>\n                                    <CombinationCharts\n                                        className=\"combination-charts\"\n                                        data_type={props.type}\n                                        revenue_service_names={revenue_service_names}\n                                        revenue_service_amounts={revenue_service_amounts}\n                                    />\n                                </div>\n                            }\n                            {props.type == \"revenue-product\" &&\n                                <div>\n                                    <div>{calculateRevenue_product_for_chart()}</div>\n                                    <CombinationCharts\n                                        className=\"combination-charts\"\n                                        data_type={props.type}\n                                        revenue_product_names={revenue_product_names}\n                                        revenue_product_amounts={revenue_product_amounts}\n                                    />\n                                </div>\n                            }\n                            {props.type == \"cashflow\" &&\n                                <div>\n                                    <CombinationCharts\n                                        className=\"combination-charts\"\n                                        data_type={props.type}\n                                        totalCFO={calculateCFO()}\n                                        totalCFI={calculateCFI()}\n                                        totalCFF={calculateCFF()}\n                                        inv_names={inv_names}\n                                    // inv_amounts={inv_amounts}\n                                    />\n                                </div>\n                            }\n\n\n\n\n                        </div>\n                        :\n                        <div className='ffc-card-body'>\n                            {props.type === \"revenue\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.service_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.services.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_service}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                        {tableRevenueData.product_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.products.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_unit}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n\n                            }\n                            {props.type === \"revenue-service\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.service_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.services.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_service}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n\n                            }\n                            {props.type === \"revenue-product\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.product_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.products.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_unit}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"fixed-cost\" &&\n                                tableExpenseData.fixed_cost_tables.map((tableFixedCost) => (\n                                    <div key={tableFixedCost._id}>\n                                        {/* <div className=\"total-text\">{tableFixedCost.name}</div> */}\n                                        {tableFixedCost.fixed_costs.map((eachFixedCost) => (\n                                            <div key={eachFixedCost._id}>\n                                                {eachFixedCost.name !== \"\" && (\n                                                    <EditInputOnSidebar\n                                                        name={eachFixedCost.name}\n                                                        type=\"text\"\n                                                        defaultValue={eachFixedCost.amount}\n                                                        className=\"chart-input\"\n                                                        onChange={(event) =>\n                                                            onValChange(\n                                                                tableFixedCost._id,\n                                                                eachFixedCost._id,\n                                                                event.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                ))}\n                            {props.type === \"expense\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableExpenseData.fixed_cost_tables.map((tableFixedCost) => (\n                                            <React.Fragment key={tableFixedCost._id}>\n                                                {tableFixedCost.fixed_costs.map((eachFixedCost) => (\n                                                    <tr key={eachFixedCost._id}>\n                                                        <td>{eachFixedCost.name}</td>\n                                                        <td>{eachFixedCost.amount}</td>\n                                                        <td>{eachFixedCost.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"total-investment\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    {calculateInitialInvestment()}\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableExpenseData.investment_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.investments.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.amount}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"cashflow\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    {calculateInitialInvestment()}\n                                    <thead>\n                                        <tr className=\"table\">\n                                            <th scope=\"col\" className=\"dov-name-cell\">รายการ</th>\n                                            {yearRange.map((i) => (\n                                                <th scope=\"col\" className=\"dov-money-cell\">{i}</th>\n                                            ))}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมดำเนินงาน</th>\n                                        {/* <tr>\n                                            <td className=\"dov-name-cell\">ค่าเสื่อมราคาและการจัดจำหน่าย</td>\n                                            {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                                                // yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{eachYear}</td>\n                                                // ))\n                                            ))}\n                                        </tr> */}\n                                        <tr>\n                                            <td className=\"dov-name-cell\">ต้นทุนทางการเงิน</td>\n                                            {yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{calculateFixedCost().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                            ))}\n                                        </tr>\n                                        <tr>\n                                            <td className=\"dov-name-cell\">รายได้ทางการเงิน</td>\n                                            {yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{calculateRevenue().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                            ))}\n                                        </tr>\n                                        <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมลงทุน</th>\n                                        <tr>\n                                            <td className=\"dov-name-cell\">ค่าใช้จ่ายการลงทุน</td>\n                                            {yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{totalInvestment.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                            ))}\n                                        </tr>\n\n                                        <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมจัดหาเงิน</th>\n                                        <tr>\n                                            <td className=\"dov-name-cell\">เงินสดจ่ายจากการชำระเงินกู้</td>\n                                            {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                                                // yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                                // ))\n                                            ))}\n                                        </tr>\n                                        <tr>\n                                            <td className=\"dov-name-cell\">เงินสดรับจากการขายหุ้น</td>\n                                            {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                                                // yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                                // ))\n                                            ))}\n                                        </tr>\n                                        <tr>\n                                            <td className=\"dov-name-cell\">เงินสดจ่ายจากเงินปันผล</td>\n                                            {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                                                // yearRange.map((i) => (\n                                                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                                // ))\n                                            ))}\n                                        </tr>\n                                        <tr>\n                                            <th className=\"dov-name-cell\">กระแสเงินสดสุทธิ</th>\n                                            {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                                                // yearRange.map((i) => (\n                                                <th scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</th>\n                                                // ))\n                                            ))}\n                                        </tr>\n\n\n                                        {/* {tableRevenueData.service_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.services.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td className=\"dov-name-cell\">{each.name}</td>\n                                                        {yearRange.map((i) => (\n                                                            <td scope=\"col\" className=\"dov-money-cell\">{each.revenue_per_service.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                                                        ))}\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))} */}\n\n\n\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"financial-return\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    {calculateInitialInvestment()}\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">Financial Return</th>\n                                            <th style={{ width: \"190px\" }} className=\"text-left\" scope=\"col\">Best Case</th> */}\n                                            {/* <th sstyle={{ width: \"190px\" }} cope=\"col\">Average</th>\n                                            <th sstyle={{ width: \"190px\" }} cope=\"col\">Worst Case</th>\n                                            <th sstyle={{ width: \"90px\" }} cope=\"col\">xxxx</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Net Present value (NPV)</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {console.log(\"totalInvestment\" + totalInvestment)}\n                                            <td>{calculateNPV(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                            {/* <td>{calculateNPV(initialInvestment, cashFlows, discountRate)}</td> */}\n                                        </tr>\n                                        {/* <tr>\n                                            <td>Internal rate of return (IRR)</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td>{calculateIRR(calculateCashFlows(200000,0.7,4)(calculateCashFlows(200000,0.7,4)))}</td>\n                                        </tr> */}\n                                        <tr>\n                                            <td>Payback period</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculatePaybackPeriod(initialInvestment, cashFlows)}</td> */}\n                                            <td>{calculatePaybackPeriod(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4))}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>profitability index (PI)</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate)}</td> */}\n                                            <td>{calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                            }\n                            {props.type === \"entrepreneurial-decision\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    {calculateInitialInvestment()}\n                                    <thead>\n                                        <tr>\n                                            {/* <th style={{ width: \"390px\" }} scope=\"col\">Financial Return</th>\n                                            <th style={{ width: \"190px\" }} className=\"text-left\" scope=\"col\">Best Case</th> */}\n                                            {/* <th sstyle={{ width: \"190px\" }} cope=\"col\">Average</th>\n                                            <th sstyle={{ width: \"190px\" }} cope=\"col\">Worst Case</th>\n                                            <th sstyle={{ width: \"90px\" }} cope=\"col\">xxxx</th> */}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>ประมาณการเงินลงทุน</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {console.log(\"totalInvestment\" + totalInvestment)}\n                                            <td>{totalInvestment}</td>\n                                            {/* <td>{calculateNPV(initialInvestment, cashFlows, discountRate)}</td> */}\n                                        </tr>\n                                        {/* <tr>\n                                            <td>Internal rate of return (IRR)</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            <td>{calculateIRR(calculateCashFlows(200000,0.7,4)(calculateCashFlows(200000,0.7,4)))}</td>\n                                        </tr> */}\n                                        <tr>\n                                            <td>ประมาณการค่าใช้จ่ายแต่ละปี</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculatePaybackPeriod(initialInvestment, cashFlows)}</td> */}\n                                            <td>{calculatePaybackPeriod(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4))}</td>\n                                        </tr>\n                                        {/* <tr>\n                                            <td>ประมาณการเติบโตของค่าใช้จ่ายต่อปี</td>\n                                            <td>{calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                        </tr> */}\n                                        <tr>\n                                            <td>ประมาณการยอดขาย (ปีที่ 1 - n) จำนวนชิ้นต่อปี</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate)}</td> */}\n                                            <td>{calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>ประมาณการราคาต่อชื้น</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate)}</td> */}\n                                            <td>{calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>ประมาณการต้นทุนต่อชิ้น</td>\n                                            {/* <td></td>\n                                            <td></td>\n                                            <td></td> */}\n                                            {/* <td>{calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate)}</td> */}\n                                            <td>{calculateProfitabilityIndex(totalInvestment, calculateCashFlows(totalInvestment, 0.7, 4), 0.7)}</td>\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                            }\n\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ffcCard"],"mappings":"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"},"metadata":{},"sourceType":"module"}