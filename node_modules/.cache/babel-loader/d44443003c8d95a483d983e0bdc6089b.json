{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('../node/Raw').mode;\nvar COMMA = TYPE.Comma;\nvar WHITESPACE = TYPE.WhiteSpace;\n\n// var( <ident> , <value>? )\nmodule.exports = function () {\n  var children = this.createList();\n  this.scanner.skipSC();\n\n  // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n  children.push(this.Identifier());\n  this.scanner.skipSC();\n  if (this.scanner.tokenType === COMMA) {\n    children.push(this.Operator());\n    var startIndex = this.scanner.tokenIndex;\n    var value = this.parseCustomProperty ? this.Value(null) : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false);\n    if (value.type === 'Value' && value.children.isEmpty()) {\n      for (var offset = startIndex - this.scanner.tokenIndex; offset <= 0; offset++) {\n        if (this.scanner.lookupType(offset) === WHITESPACE) {\n          value.children.appendData({\n            type: 'WhiteSpace',\n            loc: null,\n            value: ' '\n          });\n          break;\n        }\n      }\n    }\n    children.push(value);\n  }\n  return children;\n};","map":null,"metadata":{},"sourceType":"script"}