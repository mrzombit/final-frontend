{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar keywords = Object.create(null);\nvar properties = Object.create(null);\nvar HYPHENMINUS = 45; // '-'.charCodeAt()\n\nfunction isCustomProperty(str, offset) {\n  offset = offset || 0;\n  return str.length - offset >= 2 && str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\nfunction getVendorPrefix(str, offset) {\n  offset = offset || 0;\n\n  // verdor prefix should be at least 3 chars length\n  if (str.length - offset >= 3) {\n    // vendor prefix starts with hyper minus following non-hyper minus\n    if (str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n      // vendor prefix should contain a hyper minus at the ending\n      var secondDashIndex = str.indexOf('-', offset + 2);\n      if (secondDashIndex !== -1) {\n        return str.substring(offset, secondDashIndex + 1);\n      }\n    }\n  }\n  return '';\n}\nfunction getKeywordDescriptor(keyword) {\n  if (hasOwnProperty.call(keywords, keyword)) {\n    return keywords[keyword];\n  }\n  var name = keyword.toLowerCase();\n  if (hasOwnProperty.call(keywords, name)) {\n    return keywords[keyword] = keywords[name];\n  }\n  var custom = isCustomProperty(name, 0);\n  var vendor = !custom ? getVendorPrefix(name, 0) : '';\n  return keywords[keyword] = Object.freeze({\n    basename: name.substr(vendor.length),\n    name: name,\n    vendor: vendor,\n    prefix: vendor,\n    custom: custom\n  });\n}\nfunction getPropertyDescriptor(property) {\n  if (hasOwnProperty.call(properties, property)) {\n    return properties[property];\n  }\n  var name = property;\n  var hack = property[0];\n  if (hack === '/') {\n    hack = property[1] === '/' ? '//' : '/';\n  } else if (hack !== '_' && hack !== '*' && hack !== '$' && hack !== '#' && hack !== '+' && hack !== '&') {\n    hack = '';\n  }\n  var custom = isCustomProperty(name, hack.length);\n\n  // re-use result when possible (the same as for lower case)\n  if (!custom) {\n    name = name.toLowerCase();\n    if (hasOwnProperty.call(properties, name)) {\n      return properties[property] = properties[name];\n    }\n  }\n  var vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n  var prefix = name.substr(0, hack.length + vendor.length);\n  return properties[property] = Object.freeze({\n    basename: name.substr(prefix.length),\n    name: name.substr(hack.length),\n    hack: hack,\n    vendor: vendor,\n    prefix: prefix,\n    custom: custom\n  });\n}\nmodule.exports = {\n  keyword: getKeywordDescriptor,\n  property: getPropertyDescriptor,\n  isCustomProperty: isCustomProperty,\n  vendorPrefix: getVendorPrefix\n};","map":null,"metadata":{},"sourceType":"script"}