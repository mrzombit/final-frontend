{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar DELIM = TYPE.Delim;\nvar IDENT = TYPE.Ident;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar NUMBER = TYPE.Number;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\nvar TILDE = 0x007E; // U+007E TILDE (~)\n\nfunction getNode(context) {\n  switch (this.scanner.tokenType) {\n    case LEFTSQUAREBRACKET:\n      return this.AttributeSelector();\n    case HASH:\n      return this.IdSelector();\n    case COLON:\n      if (this.scanner.lookupType(1) === COLON) {\n        return this.PseudoElementSelector();\n      } else {\n        return this.PseudoClassSelector();\n      }\n    case IDENT:\n      return this.TypeSelector();\n    case NUMBER:\n    case PERCENTAGE:\n      return this.Percentage();\n    case DIMENSION:\n      // throws when .123ident\n      if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\n        this.error('Identifier is expected', this.scanner.tokenStart + 1);\n      }\n      break;\n    case DELIM:\n      var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n      switch (code) {\n        case PLUSSIGN:\n        case GREATERTHANSIGN:\n        case TILDE:\n          context.space = null;\n          context.ignoreWSAfter = true;\n          return this.Combinator();\n        case SOLIDUS:\n          // /deep/\n          return this.Combinator();\n        case FULLSTOP:\n          return this.ClassSelector();\n        case ASTERISK:\n        case VERTICALLINE:\n          return this.TypeSelector();\n        case NUMBERSIGN:\n          return this.IdSelector();\n      }\n      break;\n  }\n}\n;\nmodule.exports = {\n  getNode: getNode\n};","map":null,"metadata":{},"sourceType":"script"}