{"ast":null,"code":"import _toConsumableArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/pages/bizTools/operationCostPage/operationCostPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport BizSidebar from \"../../../components/bizTools/bizSidebar/bizSidebar\";\nimport \"../biztools.css\";\nimport BiztoolHeader from \"../../../components/investmentProject/biztoolHeader/biztoolHeader\";\nimport BiztoolBody from \"../../../components/investmentProject/biztoolBody/biztoolBody\";\nimport BIZTOOL_PAGE_CONFIG from \"../pageConfig\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nimport InitialPeriodMonths from \"../../../components/investmentProject/initialPeriodMonths\";\nfunction OperationCostPage() {\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState = useState({\n      user: false,\n      projects: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reload = _useState4[0],\n    setReload = _useState4[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setTableData(selectedProject.expense.fixed_cost_tables);\n  }, [selectedProject]);\n  var _useState5 = useState(selectedProject.expense.fixed_cost_tables),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tableData = _useState6[0],\n    setTableData = _useState6[1];\n  var config = BIZTOOL_PAGE_CONFIG.operationCost;\n  var onCellChange = function onCellChange(tableType, tableId, rowId, columnIndex, value) {\n    var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    shallowTables = shallowTables.map(function (eachTable) {\n      if (eachTable._id === tableId) {\n        var shallowRows = eachTable.fixed_costs;\n        shallowRows = shallowRows.map(function (eachRow) {\n          if (eachRow._id === rowId) {\n            if (columnIndex === 0) {\n              return _objectSpread({}, eachRow, {\n                name: value\n              });\n            } else if (columnIndex === 1) {\n              return _objectSpread({}, eachRow, {\n                amount: Number(value)\n              });\n            } else if (columnIndex === 2) {\n              return value.type === 'cost-increase-dropdown' ? _objectSpread({}, eachRow, {\n                cost_increase: value.cost_increase\n              }) : _objectSpread({}, eachRow, {\n                cost_increase_period_id: value.cost_increase_period_id\n              });\n            } else if (columnIndex === 3) {\n              return _objectSpread({}, eachRow, {\n                period_id: value\n              });\n            } else if (columnIndex === 4) {\n              var shallowNumbersTrends = eachRow.number;\n              shallowNumbersTrends[value.index] = Number(value.value);\n              return _objectSpread({}, eachRow, {\n                number: shallowNumbersTrends\n              });\n            }\n          }\n          return eachRow;\n        });\n        eachTable.fixed_costs = shallowRows;\n      }\n      return eachTable;\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: shallowTables\n      })\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var addRowHandle = function addRowHandle(tableType, tableId) {\n    var shallowNumber = [];\n    for (var i = 0; i < InitialPeriodMonths([\"มกราคม\", \"กุมภาพันธ์\", \"มีนาคม\", \"เมษายน\", \"พฤษภาคม\", \"มิถุนายน\", \"กรกฏาคม\", \"สิงหาคม\", \"กันยายน\", \"ตุลาคม\", \"พฤศจิกายน\", \"ธันวาคม\"], selectedProject.model_config.start_date, selectedProject.model_config.projection_period).length; i++) {\n      shallowNumber.push(1);\n    }\n    var initialRow = {\n      name: \"\",\n      amount: 0,\n      period_id: \"63de92ebd63688ac8b7ed999\",\n      number: shallowNumber,\n      start_date: new Date(),\n      cost_increase: 0,\n      cost_increase_period_id: \"63de932fd63688ac8b7ed99f\"\n    };\n    var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    shallowTables = shallowTables.map(function (eachTable) {\n      if (eachTable._id === tableId) eachTable.fixed_costs.push(initialRow);\n      return eachTable;\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: shallowTables\n      })\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var tableHeaderOnChange = function tableHeaderOnChange(tableType, tableId, value) {\n    var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    shallowTables = shallowTables.map(function (eachTable) {\n      if (eachTable._id === tableId) eachTable.name = value;\n      return eachTable;\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: shallowTables\n      })\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var addTableHandleFunction = function addTableHandleFunction(data) {\n    var shallowTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      fixed_costs: []\n    };\n    var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    var newShallowTables = [].concat(_toConsumableArray(shallowTables), [shallowTable]);\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: newShallowTables\n      })\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var handleRowOptionFunction = function handleRowOptionFunction(tableType, tableId, rowId) {\n    var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    shallowTables = shallowTables.map(function (eachTable) {\n      if (eachTable._id === tableId) {\n        var shallowRows = [];\n        eachTable.fixed_costs.forEach(function (eachRow) {\n          if (eachRow._id !== rowId) shallowRows.push(eachRow);\n        });\n        eachTable.fixed_costs = shallowRows;\n      }\n      return eachTable;\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: shallowTables\n      })\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var handleTableOptionFunction = function handleTableOptionFunction(tableType, tableId) {\n    var shallowTables = [];\n    var tables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    tables.forEach(function (eachTable) {\n      if (eachTable._id !== tableId) {\n        shallowTables.push(eachTable);\n      }\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      expense: _objectSpread({}, selectedProject.expense, {\n        fixed_cost_tables: shallowTables\n      })\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BizSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 biztool-body-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BiztoolHeader, {\n    type: config.type,\n    title: config.title,\n    handleFunction: function handleFunction() {\n      return addTableHandleFunction;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BiztoolBody, {\n    handleTableOptionFunction: handleTableOptionFunction,\n    handleRowOptionFunction: handleRowOptionFunction,\n    handleFunction: function handleFunction() {\n      return addTableHandleFunction;\n    },\n    tableHeaderOnChange: tableHeaderOnChange,\n    addRowHandle: addRowHandle,\n    onCellChange: onCellChange,\n    type: config.type,\n    tableStyle: config.tableStyle,\n    tableData: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  })));\n}\nexport default OperationCostPage;","map":{"version":3,"names":["React","useState","useEffect","BizSidebar","BiztoolHeader","BiztoolBody","BIZTOOL_PAGE_CONFIG","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","InitialPeriodMonths","OperationCostPage","dispatch","selectedProject","state","projects","_useState","user","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","reload","setReload","_id","project","setTableData","expense","fixed_cost_tables","_useState5","_useState6","tableData","config","operationCost","onCellChange","tableType","tableId","rowId","columnIndex","value","shallowTables","JSON","parse","stringify","map","eachTable","shallowRows","fixed_costs","eachRow","_objectSpread","name","amount","Number","type","cost_increase","cost_increase_period_id","period_id","shallowNumbersTrends","number","index","shallowSelectedProject","id","data","addRowHandle","shallowNumber","i","model_config","start_date","projection_period","length","push","initialRow","Date","tableHeaderOnChange","addTableHandleFunction","shallowTable","description","color","text_color","newShallowTables","concat","_toConsumableArray","handleRowOptionFunction","forEach","handleTableOptionFunction","tables","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","handleFunction","tableStyle"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/pages/bizTools/operationCostPage/operationCostPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BizSidebar from \"../../../components/bizTools/bizSidebar/bizSidebar\";\nimport \"../biztools.css\";\nimport BiztoolHeader from \"../../../components/investmentProject/biztoolHeader/biztoolHeader\";\nimport BiztoolBody from \"../../../components/investmentProject/biztoolBody/biztoolBody\";\nimport BIZTOOL_PAGE_CONFIG from \"../pageConfig\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nimport InitialPeriodMonths from \"../../../components/investmentProject/initialPeriodMonths\";\n\n\nfunction OperationCostPage() {\n  const dispatch = useDispatch();\n  const selectedProject = useSelector(\n    (state) => state.projects.selectedProject\n  );\n  const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n  const [reload, setReload] = useState(false)\n\n  useEffect(() => {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({ user: true, project: true });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id))\n      setReload(true)\n    }\n    setTableData(selectedProject.expense.fixed_cost_tables)\n  }, [selectedProject]);\n\n  const [tableData, setTableData] = useState(selectedProject.expense.fixed_cost_tables)\n  const config  = BIZTOOL_PAGE_CONFIG.operationCost\n\n  const onCellChange = (tableType, tableId, rowId, columnIndex, value) => {\n    let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n    shallowTables = shallowTables.map((eachTable => {\n      if (eachTable._id === tableId) {\n        let shallowRows = eachTable.fixed_costs\n        shallowRows = shallowRows.map(eachRow => {\n          if (eachRow._id === rowId) {\n            if (columnIndex === 0) {\n              return { ...eachRow, name: value }\n            }\n            else if (columnIndex === 1) {\n              return { ...eachRow, amount: Number(value) }\n            }\n            else if (columnIndex === 2) {\n              return value.type === 'cost-increase-dropdown' ? {\n                ...eachRow,\n                cost_increase: value.cost_increase,\n              } : {\n                ...eachRow,\n                cost_increase_period_id: value.cost_increase_period_id\n              }\n            }\n            else if (columnIndex === 3) {\n              return { ...eachRow, period_id: value }\n            }\n            else if (columnIndex === 4) {\n              const shallowNumbersTrends = eachRow.number\n              shallowNumbersTrends[value.index] = Number(value.value)\n              return { ...eachRow, number: shallowNumbersTrends }\n            }\n          }\n          return eachRow\n        })\n        eachTable.fixed_costs = shallowRows\n      }\n      return eachTable\n    }))\n    let shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: shallowTables\n      }\n    }\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const addRowHandle = (tableType, tableId) => {\n    const shallowNumber = []\n    for(let i = 0; i<InitialPeriodMonths([\n      \"มกราคม\",\n      \"กุมภาพันธ์\",\n      \"มีนาคม\",\n      \"เมษายน\",\n      \"พฤษภาคม\",\n      \"มิถุนายน\",\n      \"กรกฏาคม\",\n      \"สิงหาคม\",\n      \"กันยายน\",\n      \"ตุลาคม\",\n      \"พฤศจิกายน\",\n      \"ธันวาคม\",\n    ],\n      selectedProject.model_config.start_date,\n      selectedProject.model_config.projection_period).length; i++){\n        shallowNumber.push(1)\n      }\n    const initialRow = {\n      name: \"\",\n      amount: 0,\n      period_id: \"63de92ebd63688ac8b7ed999\",\n      number: shallowNumber,\n      start_date: new Date(),\n      cost_increase: 0,\n      cost_increase_period_id: \"63de932fd63688ac8b7ed99f\",\n    }\n    let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n    shallowTables = shallowTables.map(eachTable => {\n      if (eachTable._id === tableId) eachTable.fixed_costs.push(initialRow)\n      return eachTable\n    })\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: shallowTables\n      }\n    }\n\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const tableHeaderOnChange = (tableType, tableId, value) => {\n\n    let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n\n    shallowTables = shallowTables.map(eachTable => {\n      if (eachTable._id === tableId) eachTable.name = value\n      return eachTable\n    })\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: shallowTables\n      }\n    }\n\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n\n  }\n\n  const addTableHandleFunction = (data) => {\n    let shallowTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      fixed_costs: [],\n    }\n\n    let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n    let newShallowTables = [...shallowTables, shallowTable]\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: newShallowTables\n      }\n    }\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const handleRowOptionFunction = (tableType, tableId, rowId) => {\n    let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n    shallowTables = shallowTables.map((eachTable) => {\n      if (eachTable._id === tableId) {\n        let shallowRows = []\n        eachTable.fixed_costs.forEach(eachRow => {\n          if (eachRow._id !== rowId) shallowRows.push(eachRow)\n        })\n        eachTable.fixed_costs = shallowRows\n      }\n      return eachTable\n    })\n    const shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: shallowTables\n      }\n    }\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const handleTableOptionFunction = (tableType, tableId) => {\n    let shallowTables = []\n    let tables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables))\n    tables.forEach((eachTable) => {\n      if (eachTable._id !== tableId) {\n        shallowTables.push(eachTable)\n      }\n    })\n    const shallowSelectedProject = {\n      ...selectedProject,\n      expense: {\n        ...selectedProject.expense,\n        fixed_cost_tables: shallowTables\n      }\n    }\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <BizSidebar />\n      <div className=\"p-4 biztool-body-width\">\n        <BiztoolHeader\n          type={config.type}\n          title={config.title}\n          handleFunction={() => addTableHandleFunction}\n        />\n        <BiztoolBody\n          handleTableOptionFunction={handleTableOptionFunction}\n          handleRowOptionFunction={handleRowOptionFunction}\n          handleFunction={() => addTableHandleFunction}\n          tableHeaderOnChange={tableHeaderOnChange}\n          addRowHandle={addRowHandle}\n          onCellChange={onCellChange}\n          type={config.type}\n          tableStyle={config.tableStyle}\n          tableData={tableData}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default OperationCostPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}