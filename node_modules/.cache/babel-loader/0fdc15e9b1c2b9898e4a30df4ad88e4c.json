{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <function-token> <sequence> )\nmodule.exports = {\n  name: 'Function',\n  structure: {\n    name: String,\n    children: [[]]\n  },\n  parse: function parse(readSequence, recognizer) {\n    var start = this.scanner.tokenStart;\n    var name = this.consumeFunctionName();\n    var nameLowerCase = name.toLowerCase();\n    var children;\n    children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);\n    if (!this.scanner.eof) {\n      this.eat(RIGHTPARENTHESIS);\n    }\n    return {\n      type: 'Function',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      name: name,\n      children: children\n    };\n  },\n  generate: function generate(node) {\n    this.chunk(node.name);\n    this.chunk('(');\n    this.children(node);\n    this.chunk(')');\n  },\n  walkContext: 'function'\n};","map":null,"metadata":{},"sourceType":"script"}