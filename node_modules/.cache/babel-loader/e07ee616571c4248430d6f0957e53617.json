{"ast":null,"code":"import _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/investmentProject/biztoolBody/biztoolTableList/biztoolTable/biztoolCell/numbersTableCell.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nvar NumbersTableCell = function NumbersTableCell(props) {\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  useEffect(function () {}, [selectedProject, props.handleFunction, props.onCellChange]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    periodMonthsName = _useState2[0],\n    setPeriodMonthsName = _useState2[1];\n  var monthsName = [\"มกราคม\", \"กุมภาพันธ์\", \"มีนาคม\", \"เมษายน\", \"พฤษภาคม\", \"มิถุนายน\", \"กรกฏาคม\", \"สิงหาคม\", \"กันยายน\", \"ตุลาคม\", \"พฤศจิกายน\", \"ธันวาคม\"];\n  var initialPeriodMonths = function initialPeriodMonths(startDate) {\n    var date = new Date(startDate);\n    var startMonthIndex = date.getMonth();\n    var result = [];\n    for (var i = startMonthIndex; 11 - startMonthIndex; i++) {\n      result.push({\n        year: 1,\n        month: monthsName[i]\n      });\n    }\n    for (var _i = 0; 12 * (selectedProject.model_config.projection_period - 1); _i++) {\n      result.push({\n        year: 2 + _i / 12,\n        month: monthsName[_i]\n      });\n    }\n    for (var _i2 = 0; startMonthIndex; _i2++) {\n      result.push({\n        year: selectedProject.model_config.projection_period,\n        month: monthsName[_i2]\n      });\n    }\n    setPeriodMonthsName(result);\n  };\n  console.log(selectedProject.model_config.start_date);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex numbers-table-style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, props.data.map(function (each, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"seasonal-month-style\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, \"\\u0E1B\\u0E35\\u0E17\\u0E35\\u0E48 \", periodMonthsName[i].year), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"\\u0E40\\u0E14\\u0E37\\u0E2D\\u0E19 \", periodMonthsName[i].month))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"seasonal-cell-style\",\n      value: each,\n      onKeyPress: function onKeyPress(e) {\n        return !/[0-9\\b]+/.test(e.key) && e.preventDefault();\n      }\n      // onChange={e =>\n      //   props.onCellChange(\n      //     props.tableType,\n      //     props.address.tableId,\n      //     props.address.rowId,\n      //     props.colIndex,\n      //     { index: i, value: e.target.value }\n      //   )\n      // }\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\nexport default NumbersTableCell;","map":{"version":3,"names":["React","useEffect","useState","useSelector","NumbersTableCell","props","selectedProject","state","projects","handleFunction","onCellChange","_useState","_useState2","_slicedToArray","periodMonthsName","setPeriodMonthsName","monthsName","initialPeriodMonths","startDate","date","Date","startMonthIndex","getMonth","result","i","push","year","month","model_config","projection_period","console","log","start_date","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","data","map","each","value","onKeyPress","e","test","key","preventDefault"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/investmentProject/biztoolBody/biztoolTableList/biztoolTable/biztoolCell/numbersTableCell.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nconst NumbersTableCell = (props) => {\n  const selectedProject = useSelector(state => state.projects.selectedProject)\n\n  useEffect(() => {\n  }, [selectedProject, props.handleFunction, props.onCellChange])\n\n  const [periodMonthsName, setPeriodMonthsName] = useState([])\n\n  const monthsName = [\n    \"มกราคม\",\n    \"กุมภาพันธ์\",\n    \"มีนาคม\",\n    \"เมษายน\",\n    \"พฤษภาคม\",\n    \"มิถุนายน\",\n    \"กรกฏาคม\",\n    \"สิงหาคม\",\n    \"กันยายน\",\n    \"ตุลาคม\",\n    \"พฤศจิกายน\",\n    \"ธันวาคม\",\n  ]\n\n  const initialPeriodMonths = (startDate) => {\n    let date = new Date(startDate)\n    let startMonthIndex = date.getMonth()\n    let result = []\n    for (let i = startMonthIndex; 11 - startMonthIndex; i++) {\n      result.push({ year: 1, month: monthsName[i] })\n    }\n    for (let i = 0; 12 * (selectedProject.model_config.projection_period - 1); i++) {\n      result.push({ year: 2 + i / 12, month: monthsName[i] })\n    }\n    for (let i = 0; startMonthIndex; i++) {\n      result.push({ year: selectedProject.model_config.projection_period, month: monthsName[i] })\n    }\n    setPeriodMonthsName(result)\n  }\n  console.log(selectedProject.model_config.start_date);\n  return (\n    <div className='d-flex numbers-table-style'  >\n      {props.data.map((each, i) =>\n        <div className=\"d-flex\">\n          <div className='seasonal-month-style'>\n            <div>\n              <div>\n                ปีที่ {periodMonthsName[i].year}\n              </div>\n              <div>\n                เดือน {periodMonthsName[i].month}\n              </div>\n            </div>\n          </div>\n          <input className='seasonal-cell-style'\n            value={each}\n            onKeyPress={(e) => !/[0-9\\b]+/.test(e.key) && e.preventDefault()}\n          // onChange={e =>\n          //   props.onCellChange(\n          //     props.tableType,\n          //     props.address.tableId,\n          //     props.address.rowId,\n          //     props.colIndex,\n          //     { index: i, value: e.target.value }\n          //   )\n          // }\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NumbersTableCell"],"mappings":"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"},"metadata":{},"sourceType":"module"}