{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\nmodule.exports = {\n  name: 'DeclarationList',\n  structure: {\n    children: [['Declaration']]\n  },\n  parse: function parse() {\n    var children = this.createList();\n    scan: while (!this.scanner.eof) {\n      switch (this.scanner.tokenType) {\n        case WHITESPACE:\n        case COMMENT:\n        case SEMICOLON:\n          this.scanner.next();\n          break;\n        default:\n          children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n      }\n    }\n    return {\n      type: 'DeclarationList',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function generate(node) {\n    this.children(node, function (prev) {\n      if (prev.type === 'Declaration') {\n        this.chunk(';');\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}