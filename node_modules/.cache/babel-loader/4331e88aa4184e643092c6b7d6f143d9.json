{"ast":null,"code":"import _objectSpread from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar BIZTOOL_PAGE_FUNCTION_CONFIG = {\n  totalInvestment: {\n    onCellChange: function onCellChange(tableType, tableId, rowId, columnIndex, value) {\n      var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables));\n      shallowTables = shallowTables.map(function (eachTable) {\n        if (eachTable._id == tableId) {\n          var shallowRows = eachTable.investments;\n          shallowRows = shallowRows.map(function (eachRow) {\n            if (eachRow._id == rowId) {\n              if (columnIndex == 0) {\n                return _objectSpread({}, eachRow, {\n                  name: value\n                });\n              } else if (columnIndex == 1) {\n                return _objectSpread({}, eachRow, {\n                  amount: Number(value)\n                });\n              } else if (columnIndex == 2) {\n                return _objectSpread({}, eachRow, {\n                  account_id: value\n                });\n              } else if (columnIndex == 3) {\n                return _objectSpread({}, eachRow, {\n                  start_date: value\n                });\n              }\n            }\n            return eachRow;\n          });\n          eachTable.investments = shallowRows;\n        }\n        return eachTable;\n      });\n      var shallowSelectedProject = _objectSpread({}, selectedProject, {\n        expense: _objectSpread({}, selectedProject.expense, {\n          investment_tables: shallowTables\n        })\n      });\n      dispatch(projectUpdated(shallowSelectedProject));\n      dispatch(updateProject({\n        id: selectedProject._id,\n        data: shallowSelectedProject\n      }));\n    },\n    addRowHandle: function addRowHandle(tableType, tableId) {\n      var initialRow = {\n        name: \"\",\n        amount: 0,\n        account_id: \"63de8eead63688ac8b7ed990\",\n        is_initial: true,\n        start_date: new Date()\n      };\n      var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables));\n      shallowTables = shallowTables.map(function (eachTable) {\n        if (eachTable._id == tableId) eachTable.investments.push(initialRow);\n        return eachTable;\n      });\n      var shallowSelectedProject = _objectSpread({}, selectedProject, {\n        expense: _objectSpread({}, selectedProject.expense, {\n          investment_tables: shallowTables\n        })\n      });\n      dispatch(projectUpdated(shallowSelectedProject));\n      dispatch(updateProject({\n        id: selectedProject._id,\n        data: shallowSelectedProject\n      }));\n    },\n    tableHeaderOnChange: function tableHeaderOnChange(tableType, tableId, value) {\n      var shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables));\n      shallowTables = shallowTables.map(function (eachTable) {\n        if (eachTable._id == tableId) eachTable.name = value;\n        return eachTable;\n      });\n      var shallowSelectedProject = _objectSpread({}, selectedProject, {\n        expense: _objectSpread({}, selectedProject.expense, {\n          investment_tables: shallowTables\n        })\n      });\n      dispatch(projectUpdated(shallowSelectedProject));\n      dispatch(updateProject({\n        id: selectedProject._id,\n        data: shallowSelectedProject\n      }));\n    }\n  },\n  operationCost: {},\n  revenue: {},\n  miscellaneous: {}\n};\nexport default BIZTOOL_PAGE_FUNCTION_CONFIG;","map":{"version":3,"names":["BIZTOOL_PAGE_FUNCTION_CONFIG","totalInvestment","onCellChange","tableType","tableId","rowId","columnIndex","value","shallowTables","JSON","parse","stringify","selectedProject","expense","investment_tables","map","eachTable","_id","shallowRows","investments","eachRow","_objectSpread","name","amount","Number","account_id","start_date","shallowSelectedProject","dispatch","projectUpdated","updateProject","id","data","addRowHandle","initialRow","is_initial","Date","push","tableHeaderOnChange","operationCost","revenue","miscellaneous"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/pages/bizTools/pageHandleFunctions.jsx"],"sourcesContent":["const BIZTOOL_PAGE_FUNCTION_CONFIG = {\n    totalInvestment: {\n        onCellChange: (tableType, tableId, rowId, columnIndex, value) => {\n            let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables))\n            shallowTables = shallowTables.map((eachTable => {\n                if (eachTable._id == tableId) {\n                    let shallowRows = eachTable.investments\n                    shallowRows = shallowRows.map(eachRow => {\n                        if (eachRow._id == rowId) {\n                            if (columnIndex == 0) {\n                                return { ...eachRow, name: value }\n                            }\n                            else if (columnIndex == 1) {\n                                return { ...eachRow, amount: Number(value) }\n                            }\n                            else if (columnIndex == 2) {\n                                return { ...eachRow, account_id: value }\n                            }\n                            else if (columnIndex == 3) {\n                                return { ...eachRow, start_date: value }\n                            }\n                        }\n                        return eachRow\n                    })\n                    eachTable.investments = shallowRows\n                }\n                return eachTable\n            }))\n            let shallowSelectedProject = {\n                ...selectedProject,\n                expense: {\n                    ...selectedProject.expense,\n                    investment_tables: shallowTables\n                }\n            }\n            dispatch(projectUpdated(shallowSelectedProject))\n            dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n        },\n        addRowHandle: (tableType, tableId) => {\n            const initialRow = {\n                name: \"\",\n                amount: 0,\n                account_id: \"63de8eead63688ac8b7ed990\",\n                is_initial: true,\n                start_date: new Date(),\n            }\n            let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables))\n            shallowTables = shallowTables.map(eachTable => {\n                if (eachTable._id == tableId) eachTable.investments.push(initialRow)\n                return eachTable\n            })\n\n            const shallowSelectedProject = {\n                ...selectedProject,\n                expense: {\n                    ...selectedProject.expense,\n                    investment_tables: shallowTables\n                }\n            }\n            dispatch(projectUpdated(shallowSelectedProject))\n            dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n        },\n        tableHeaderOnChange: (tableType, tableId, value) => {\n\n            let shallowTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables))\n            shallowTables = shallowTables.map(eachTable => {\n                if (eachTable._id == tableId) eachTable.name = value\n                return eachTable\n            })\n\n            const shallowSelectedProject = {\n                ...selectedProject,\n                expense: {\n                    ...selectedProject.expense,\n                    investment_tables: shallowTables\n                }\n            }\n            dispatch(projectUpdated(shallowSelectedProject))\n            dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n        }\n    },\n    operationCost: {\n\n    },\n    revenue: {\n\n    },\n    miscellaneous: {\n\n    },\n}\n\nexport default BIZTOOL_PAGE_FUNCTION_CONFIG;"],"mappings":"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"},"metadata":{},"sourceType":"module"}