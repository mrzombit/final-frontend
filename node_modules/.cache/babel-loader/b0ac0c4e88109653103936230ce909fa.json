{"ast":null,"code":"import _objectSpread from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/pages/checkBiz/statementsPage/chartPages/incomeChartPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport CombinationCharts from \"../../../../components/statement/charts/combinationCharts\";\nimport BizSidebar from \"../../../../components/bizTools/bizSidebar/bizSidebar\";\nimport StatementHearder from \"../../../../components/statement/statementHearder\";\nimport \"./chartPages.css\";\nimport { AiOutlineDoubleLeft } from \"react-icons/ai\";\nimport \"./../../../../components/sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../../../components/checkbiz/sidebarEditdata/editInputOnSidebar\";\n\n// import BarChart from \"../../../../components/statement/charts/barChart\";\n// import * as cbf from \"../../../../components/checkbiz/checkbizFormula/checkbizFormula_try\";\n// import CombinationChartsMinMax from \"../../../../components/statement/charts/combinationChartsMinMax\";\n// import StackedBar from \"../../../../components/statement/charts/stackedBar\";\n// import DoughnutChart from \"../../../../components/statement/charts/doughnutChart\";\n// import SensitivityEditSidebar from \"../../../../components/sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar\";\n// import BIZTOOL_PAGE_CONFIG from \"../../../bizTools/pageConfig\";\n\nvar incomeChartPage = function incomeChartPage(props) {\n  // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n  // const config = BIZTOOL_PAGE_CONFIG.revenue\n  // const [tableService, setTableService] = useState();\n  // const [service, setService] = useState();\n  // const [revenuePerService, setRevenuePerService] = useState();\n  // const [message, setMessage] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   setMessage(event.target.value);\n  //   console.log(\"value is:\", event.target.value);\n  // };\n\n  // const yearRange = [1, 2, 3, 4];\n\n  // const totalRevenue = [15000,17000,15000];\n  // const totalFixedCost = [17000,15000,10000];\n  var totalRevenue = [];\n  var totalFixedCost = [];\n  var totalRevenue_MIN = [];\n  var totalFixedCost_MIN = [];\n  // const totalIncome = [];\n  // const totalIncome = totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState = useState({\n      user: false,\n      projects: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reload = _useState4[0],\n    setReload = _useState4[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setModelConfig(selectedProject.model_config);\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n  }, [selectedProject]);\n  var _useState5 = useState(selectedProject.model_config),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modelConfig = _useState6[0],\n    setModelConfig = _useState6[1];\n  var _useState7 = useState(selectedProject.revenue),\n    _useState8 = _slicedToArray(_useState7, 2),\n    tableRevenueData = _useState8[0],\n    setTableRevenueData = _useState8[1];\n  var _useState9 = useState(selectedProject.expense),\n    _useState10 = _slicedToArray(_useState9, 2),\n    tableExpenseData = _useState10[0],\n    setTableExpenseData = _useState10[1];\n  var onValChange = function onValChange(tableID, unitID, amountPerUnit) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    var shallowFixedCostTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    var shallowInvestmentTables = JSON.parse(JSON.stringify(selectedProject.expense.investment_tables));\n    shallowServiceTables = shallowServiceTables.map(function (eachTableService) {\n      if (eachTableService._id === tableID) {\n        eachTableService.services = eachTableService.services.map(function (eachService) {\n          if (eachService._id === unitID) {\n            if (eachService.revenue_per_service !== amountPerUnit) {\n              eachService.revenue_per_service = amountPerUnit;\n            }\n          }\n          return eachService;\n        });\n      }\n      return eachTableService;\n    });\n    shallowProductTables = shallowProductTables.map(function (eachTableProduct) {\n      if (eachTableProduct._id === tableID) {\n        eachTableProduct.products = eachTableProduct.products.map(function (eachProduct) {\n          if (eachProduct._id === unitID) {\n            if (eachProduct.revenue_per_unit !== amountPerUnit) {\n              eachProduct.revenue_per_unit = amountPerUnit;\n            }\n          }\n          return eachProduct;\n        });\n      }\n      return eachTableProduct;\n    });\n    shallowFixedCostTables = shallowFixedCostTables.map(function (eachTableFixedCost) {\n      if (eachTableFixedCost._id === tableID) {\n        eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(function (eachFixedCost) {\n          if (eachFixedCost._id === unitID) {\n            if (eachFixedCost.amount !== amountPerUnit) {\n              eachFixedCost.amount = amountPerUnit;\n            }\n          }\n          return eachFixedCost;\n        });\n      }\n      return eachTableFixedCost;\n    });\n\n    // shallowInvestmentTables = shallowInvestmentTables.map(\n    //   (eachTableInvestment) => {\n    //     if (eachTableInvestment._id === tableID) {\n    //       eachTableInvestment.investments = eachTableInvestment.investments.map(\n    //         (eachInvestment) => {\n    //           if (eachInvestment._id === unitID) {\n    //             if (eachInvestment.amount !== amountPerUnit) {\n    //               eachInvestment.amount = amountPerUnit;\n    //             }\n    //           }\n    //           return eachInvestment;\n    //         }\n    //       );\n    //     }\n    //     return eachTableInvestment;\n    //   }\n    // );\n\n    // Find the index of the table with the matching ID\n    var tableIndex = shallowInvestmentTables.findIndex(function (table) {\n      return table._id === tableID;\n    });\n\n    // Update the investment table if found\n    if (tableIndex !== -1) {\n      shallowInvestmentTables[tableIndex] = _objectSpread({}, shallowInvestmentTables[tableIndex], {\n        investments: shallowInvestmentTables[tableIndex].investments.map(function (eachInvestment) {\n          if (eachInvestment._id === unitID) {\n            if (eachInvestment.amount !== amountPerUnit) {\n              eachInvestment.amount = amountPerUnit;\n            }\n          }\n          return eachInvestment;\n        })\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      },\n      expense: {\n        fixed_cost_tables: shallowFixedCostTables,\n        investment_tables: shallowInvestmentTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sidebar = _useState12[0],\n    setSidebar = _useState12[1];\n  var showSidebar = function showSidebar() {\n    return setSidebar(!sidebar);\n  };\n  function calculateRevenue_service() {\n    var sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    var sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n\n  // function calculateRevenue() {\n  //   let totalValue = 0;\n  //   let sum_product_revenue = 0;\n  //   let sum_service_revenue = 0;\n  //   tableRevenueData.product_tables.forEach((tableProduct) => {\n  //     tableProduct.products.forEach((eachProduct) => {\n  //       sum_product_revenue += eachProduct.revenue_per_unit;\n  //     });\n  //     tableRevenueData.service_tables.forEach((tableService) => {\n  //       tableService.services.forEach((eachService) => {\n  //         sum_service_revenue += (eachService.revenue_per_service - (eachService.revenue_per_service * eachService.cost_per_service / 100));\n  //       });\n  //     });\n  //   });\n  //   totalValue = sum_product_revenue + sum_service_revenue\n\n  //   totalRevenue.push(totalValue);\n  //   for (let i = 1; i < modelConfig.projection_period; i++) {\n  //     // totalValue += totalValue*(increase / 100)\n  //     // increase += increase\n  //     totalRevenue.push(totalValue);\n  //   }\n\n  //   return totalValue;\n  // }\n\n  function calculateRevenue() {\n    var totalValue = 0;\n    var totalValue_MIN = 0;\n    var sum_product_revenue = 0; //max\n    var sum_product_revenue_MIN = 0;\n    var sum_service_revenue = 0;\n    var sum_service_revenue_MIN = 0;\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        if (eachProduct.revenue_per_unit && typeof eachProduct.revenue_per_unit === \"string\") {\n          if (eachProduct.revenue_per_unit.includes(\"-\")) {\n            var _eachProduct$revenue_ = eachProduct.revenue_per_unit.split(\"-\").map(Number),\n              _eachProduct$revenue_2 = _slicedToArray(_eachProduct$revenue_, 2),\n              min = _eachProduct$revenue_2[0],\n              max = _eachProduct$revenue_2[1];\n            sum_product_revenue += max;\n            sum_product_revenue_MIN += min;\n            console.log(\"G\");\n          } else {\n            sum_product_revenue += eachProduct.revenue_per_unit;\n            sum_product_revenue_MIN += eachProduct.revenue_per_unit;\n          }\n        }\n      });\n    });\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service - eachService.revenue_per_service * eachService.cost_per_service / 100;\n        // if (eachService.revenue_per_service && typeof eachService.revenue_per_service === \"string\") {\n        //   if (eachService.revenue_per_service.includes(\"-\")) {\n        //     // let [min, max] = eachProduct.revenue_per_unit.split(\"-\").map(Number);\n        //     // sum_product_revenue += max\n        //     // sum_product_revenue_MIN += min\n        //     console.log(\"GG\")\n        //   } else {\n        //     sum_service_revenue += eachService.revenue_per_service\n        //     sum_service_revenue_MIN += eachService.revenue_per_service\n        //   }\n        // }\n      });\n    });\n\n    totalValue = sum_product_revenue + sum_service_revenue;\n    totalValue_MIN = sum_product_revenue_MIN + sum_service_revenue;\n    totalRevenue.push(totalValue);\n    totalRevenue_MIN.push(totalValue_MIN);\n    for (var i = 1; i < modelConfig.projection_period; i++) {\n      // totalValue += totalValue*(increase / 100)\n      // increase += increase\n      totalRevenue.push(totalValue);\n      totalRevenue_MIN.push(totalValue_MIN);\n    }\n    return totalValue;\n  }\n  function calculateFixedCost() {\n    var sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.forEach(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n  function calculateTotalFixdcost() {\n    var sum_fixed_cost = 0;\n    var sum_investment = 0;\n    var increase = 0;\n    // modelConfig.projection_period\n\n    tableExpenseData.fixed_cost_tables.forEach(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.forEach(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n        increase = eachFixedCost.cost_increase;\n      });\n    });\n    tableExpenseData.investment_tables.forEach(function (table) {\n      table.investments.forEach(function (eachData) {\n        sum_investment += eachData.amount;\n      });\n    });\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalFixedCost.push(sum_fixed_cost);\n    for (var i = 1; i < modelConfig.projection_period; i++) {\n      sum_fixed_cost += sum_fixed_cost * (increase / 100);\n      increase += increase;\n      totalFixedCost.push(sum_fixed_cost);\n    }\n  }\n\n  // function netIncome() {\n  //   return totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex sen-sidebar-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BizSidebar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: sidebar ? \"p-4 chart-pages-body2\" : \"p-4 chart-pages-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StatementHearder, {\n    title: \"Income Statement\",\n    sensitivityPath: \"/Sensitivity/income\",\n    listPath: \"/ProfitLossStatements\",\n    chartPath: \"/Chart/incom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CombinationCharts, {\n    data_type: \"revenue\",\n    totalRevenue: totalRevenue,\n    total_fixed_cost: totalFixedCost,\n    totalRevenue_MIN: totalRevenue_MIN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }), console.log(\"totalFixedCost : \" + totalFixedCost))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, sidebar ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sen-sidebar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sen-sidebar-show\",\n    onClick: showSidebar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineDoubleLeft, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E23\\u0E27\\u0E21\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, calculateRevenue_service() + calculateRevenue_product())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E08\\u0E48\\u0E32\\u0E22\\u0E23\\u0E27\\u0E21\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }, calculateTotalFixdcost())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  }, \"\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, calculateRevenue() - calculateFixedCost()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-name-side-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E01\\u0E32\\u0E23\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23/\\u0E27\\u0E31\\u0E19\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n    name: \"\\u0E23\\u0E27\\u0E21\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E1A\\u0E23\\u0E34\\u0E01\\u0E32\\u0E23/\\u0E27\\u0E31\\u0E19\",\n    type: \"text\",\n    defaultValue: calculateRevenue_service(),\n    className: \"chart-input\",\n    resultDisplay: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  }))), tableRevenueData.service_tables.map(function (tableService) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tableService._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, tableService.services.map(function (eachService) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: eachService._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, eachService.name !== \"\" && /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n        name: eachService.name,\n        type: \"text\",\n        defaultValue: eachService.revenue_per_service,\n        className: \"chart-input\",\n        onChange: function onChange(event) {\n          return onValChange(tableService._id, eachService._id, event.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-name-side-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 15\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E01\\u0E32\\u0E23\\u0E02\\u0E32\\u0E22\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32/\\u0E27\\u0E31\\u0E19\"), /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n    name: \"\\u0E23\\u0E27\\u0E21\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E02\\u0E32\\u0E22\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32/\\u0E27\\u0E31\\u0E19\",\n    type: \"text\",\n    defaultValue: calculateRevenue_product(),\n    className: \"chart-input\",\n    resultDisplay: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }), tableRevenueData.product_tables.map(function (tableProduct) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tableProduct._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, tableProduct.products.map(function (eachProduct) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: eachProduct._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }\n      }, eachProduct.name !== \"\" && /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n        name: eachProduct.name,\n        type: \"text\",\n        defaultValue: eachProduct.revenue_per_unit,\n        className: \"chart-input\",\n        onChange: function onChange(event) {\n          return onValChange(tableProduct._id, eachProduct._id, event.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-name-side-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E08\\u0E48\\u0E32\\u0E22/\\u0E27\\u0E31\\u0E19\"), /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n    name: \"\\u0E23\\u0E27\\u0E21\\u0E23\\u0E32\\u0E22\\u0E08\\u0E48\\u0E32\\u0E22\",\n    type: \"text\",\n    defaultValue: calculateFixedCost(),\n    className: \"chart-input\",\n    resultDisplay: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }), tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tableFixedCost._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }\n    }, tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: eachFixedCost._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }\n      }, eachFixedCost.name !== \"\" && /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n        name: eachFixedCost.name,\n        type: \"text\",\n        defaultValue: eachFixedCost.amount,\n        className: \"chart-input\",\n        onChange: function onChange(event) {\n          return onValChange(tableFixedCost._id, eachFixedCost._id, event.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }\n      }));\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sen-sidebar2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sen-sidebar-show2\",\n    onClick: showSidebar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineDoubleLeft, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }))))));\n};\nexport default incomeChartPage;","map":{"version":3,"names":["React","useEffect","useState","CombinationCharts","BizSidebar","StatementHearder","AiOutlineDoubleLeft","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","EditInputOnSidebar","incomeChartPage","props","totalRevenue","totalFixedCost","totalRevenue_MIN","totalFixedCost_MIN","dispatch","selectedProject","state","projects","_useState","user","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","reload","setReload","_id","project","setModelConfig","model_config","setTableRevenueData","revenue","setTableExpenseData","expense","_useState5","_useState6","modelConfig","_useState7","_useState8","tableRevenueData","_useState9","_useState10","tableExpenseData","onValChange","tableID","unitID","amountPerUnit","shallowServiceTables","JSON","parse","stringify","service_tables","shallowProductTables","product_tables","shallowFixedCostTables","fixed_cost_tables","shallowInvestmentTables","investment_tables","map","eachTableService","services","eachService","revenue_per_service","eachTableProduct","products","eachProduct","revenue_per_unit","eachTableFixedCost","fixed_costs","eachFixedCost","amount","tableIndex","findIndex","table","_objectSpread","investments","eachInvestment","shallowSelectedProject","id","data","_useState11","_useState12","sidebar","setSidebar","showSidebar","calculateRevenue_service","sum_service_revenue","forEach","tableService","calculateRevenue_product","sum_product_revenue","tableProduct","calculateRevenue","totalValue","totalValue_MIN","sum_product_revenue_MIN","sum_service_revenue_MIN","includes","_eachProduct$revenue_","split","Number","_eachProduct$revenue_2","min","max","console","log","cost_per_service","push","i","projection_period","calculateFixedCost","sum_fixed_cost","tableFixedCost","calculateTotalFixdcost","sum_investment","increase","cost_increase","eachData","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","title","sensitivityPath","listPath","chartPath","data_type","total_fixed_cost","onClick","name","type","defaultValue","resultDisplay","key","onChange","event","target","value"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/pages/checkBiz/statementsPage/chartPages/incomeChartPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CombinationCharts from \"../../../../components/statement/charts/combinationCharts\";\nimport BizSidebar from \"../../../../components/bizTools/bizSidebar/bizSidebar\";\nimport StatementHearder from \"../../../../components/statement/statementHearder\";\nimport \"./chartPages.css\";\nimport { AiOutlineDoubleLeft } from \"react-icons/ai\";\nimport \"./../../../../components/sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchProjectById,\n  projectUpdated,\n  updateProject,\n} from \"../../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../../../components/checkbiz/sidebarEditdata/editInputOnSidebar\";\n\n// import BarChart from \"../../../../components/statement/charts/barChart\";\n// import * as cbf from \"../../../../components/checkbiz/checkbizFormula/checkbizFormula_try\";\n// import CombinationChartsMinMax from \"../../../../components/statement/charts/combinationChartsMinMax\";\n// import StackedBar from \"../../../../components/statement/charts/stackedBar\";\n// import DoughnutChart from \"../../../../components/statement/charts/doughnutChart\";\n// import SensitivityEditSidebar from \"../../../../components/sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar\";\n// import BIZTOOL_PAGE_CONFIG from \"../../../bizTools/pageConfig\";\n\nconst incomeChartPage = (props) => {\n\n  // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n  // const config = BIZTOOL_PAGE_CONFIG.revenue\n  // const [tableService, setTableService] = useState();\n  // const [service, setService] = useState();\n  // const [revenuePerService, setRevenuePerService] = useState();\n  // const [message, setMessage] = useState(\"\");\n\n  // const handleChange = (event) => {\n  //   setMessage(event.target.value);\n  //   console.log(\"value is:\", event.target.value);\n  // };\n\n  // const yearRange = [1, 2, 3, 4];\n\n  // const totalRevenue = [15000,17000,15000];\n  // const totalFixedCost = [17000,15000,10000];\n  const totalRevenue = [];\n  const totalFixedCost = [];\n\n  const totalRevenue_MIN = [];\n  const totalFixedCost_MIN = [];\n  // const totalIncome = [];\n  // const totalIncome = totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\n  const dispatch = useDispatch();\n  const selectedProject = useSelector(\n    (state) => state.projects.selectedProject\n  );\n  const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n  const [reload, setReload] = useState(false);\n\n\n\n  useEffect(() => {\n\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({ user: true, project: true });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setModelConfig(selectedProject.model_config);\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n  }, [selectedProject]);\n\n  const [modelConfig, setModelConfig] = useState(\n    selectedProject.model_config\n  );\n  const [tableRevenueData, setTableRevenueData] = useState(\n    selectedProject.revenue\n  );\n  const [tableExpenseData, setTableExpenseData] = useState(\n    selectedProject.expense\n  );\n\n  const onValChange = (tableID, unitID, amountPerUnit) => {\n    let shallowServiceTables = JSON.parse(\n      JSON.stringify(selectedProject.revenue.service_tables)\n    );\n    let shallowProductTables = JSON.parse(\n      JSON.stringify(selectedProject.revenue.product_tables)\n    );\n    let shallowFixedCostTables = JSON.parse(\n      JSON.stringify(selectedProject.expense.fixed_cost_tables)\n    );\n    let shallowInvestmentTables = JSON.parse(\n      JSON.stringify(selectedProject.expense.investment_tables)\n    );\n\n    shallowServiceTables = shallowServiceTables.map((eachTableService) => {\n      if (eachTableService._id === tableID) {\n        eachTableService.services = eachTableService.services.map(\n          (eachService) => {\n            if (eachService._id === unitID) {\n              if (eachService.revenue_per_service !== amountPerUnit) {\n                eachService.revenue_per_service = amountPerUnit;\n              }\n            }\n            return eachService;\n          }\n        );\n      }\n      return eachTableService;\n    });\n\n    shallowProductTables = shallowProductTables.map((eachTableProduct) => {\n      if (eachTableProduct._id === tableID) {\n        eachTableProduct.products = eachTableProduct.products.map(\n          (eachProduct) => {\n            if (eachProduct._id === unitID) {\n              if (eachProduct.revenue_per_unit !== amountPerUnit) {\n                eachProduct.revenue_per_unit = amountPerUnit;\n              }\n            }\n            return eachProduct;\n          }\n        );\n      }\n      return eachTableProduct;\n    });\n\n    shallowFixedCostTables = shallowFixedCostTables.map(\n      (eachTableFixedCost) => {\n        if (eachTableFixedCost._id === tableID) {\n          eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(\n            (eachFixedCost) => {\n              if (eachFixedCost._id === unitID) {\n                if (eachFixedCost.amount !== amountPerUnit) {\n                  eachFixedCost.amount = amountPerUnit;\n                }\n              }\n              return eachFixedCost;\n            }\n          );\n        }\n        return eachTableFixedCost;\n      }\n    );\n\n    // shallowInvestmentTables = shallowInvestmentTables.map(\n    //   (eachTableInvestment) => {\n    //     if (eachTableInvestment._id === tableID) {\n    //       eachTableInvestment.investments = eachTableInvestment.investments.map(\n    //         (eachInvestment) => {\n    //           if (eachInvestment._id === unitID) {\n    //             if (eachInvestment.amount !== amountPerUnit) {\n    //               eachInvestment.amount = amountPerUnit;\n    //             }\n    //           }\n    //           return eachInvestment;\n    //         }\n    //       );\n    //     }\n    //     return eachTableInvestment;\n    //   }\n    // );\n\n    // Find the index of the table with the matching ID\n    const tableIndex = shallowInvestmentTables.findIndex((table) => table._id === tableID);\n\n    // Update the investment table if found\n    if (tableIndex !== -1) {\n      shallowInvestmentTables[tableIndex] = {\n        ...shallowInvestmentTables[tableIndex],\n        investments: shallowInvestmentTables[tableIndex].investments.map((eachInvestment) => {\n          if (eachInvestment._id === unitID) {\n            if (eachInvestment.amount !== amountPerUnit) {\n              eachInvestment.amount = amountPerUnit;\n            }\n          }\n          return eachInvestment;\n        }),\n      };\n    }\n\n\n\n    let shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables,\n      },\n      expense: {\n        fixed_cost_tables: shallowFixedCostTables,\n        investment_tables: shallowInvestmentTables,\n      },\n    };\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(\n      updateProject({ id: selectedProject._id, data: shallowSelectedProject })\n    );\n  };\n\n  const [sidebar, setSidebar] = useState(true);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  function calculateRevenue_service() {\n    let sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach((tableService) => {\n      tableService.services.forEach((eachService) => {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    let sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach((tableProduct) => {\n      tableProduct.products.forEach((eachProduct) => {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n\n  // function calculateRevenue() {\n  //   let totalValue = 0;\n  //   let sum_product_revenue = 0;\n  //   let sum_service_revenue = 0;\n  //   tableRevenueData.product_tables.forEach((tableProduct) => {\n  //     tableProduct.products.forEach((eachProduct) => {\n  //       sum_product_revenue += eachProduct.revenue_per_unit;\n  //     });\n  //     tableRevenueData.service_tables.forEach((tableService) => {\n  //       tableService.services.forEach((eachService) => {\n  //         sum_service_revenue += (eachService.revenue_per_service - (eachService.revenue_per_service * eachService.cost_per_service / 100));\n  //       });\n  //     });\n  //   });\n  //   totalValue = sum_product_revenue + sum_service_revenue\n\n  //   totalRevenue.push(totalValue);\n  //   for (let i = 1; i < modelConfig.projection_period; i++) {\n  //     // totalValue += totalValue*(increase / 100)\n  //     // increase += increase\n  //     totalRevenue.push(totalValue);\n  //   }\n\n  //   return totalValue;\n  // }\n\n  function calculateRevenue() {\n    let totalValue = 0;\n    let totalValue_MIN = 0;\n\n    let sum_product_revenue = 0; //max\n    let sum_product_revenue_MIN = 0;\n\n    let sum_service_revenue = 0;\n    let sum_service_revenue_MIN = 0;\n\n    tableRevenueData.product_tables.forEach((tableProduct) => {\n      tableProduct.products.forEach((eachProduct) => {\n        if (eachProduct.revenue_per_unit && typeof eachProduct.revenue_per_unit === \"string\") {\n          if (eachProduct.revenue_per_unit.includes(\"-\")) {\n            let [min, max] = eachProduct.revenue_per_unit.split(\"-\").map(Number);\n            sum_product_revenue += max\n            sum_product_revenue_MIN += min\n            console.log(\"G\")\n          } else {\n            sum_product_revenue += eachProduct.revenue_per_unit\n            sum_product_revenue_MIN += eachProduct.revenue_per_unit\n          }\n        }\n      });\n    });\n    tableRevenueData.service_tables.forEach((tableService) => {\n      tableService.services.forEach((eachService) => {\n\n        sum_service_revenue += (eachService.revenue_per_service - (eachService.revenue_per_service * eachService.cost_per_service / 100));\n        // if (eachService.revenue_per_service && typeof eachService.revenue_per_service === \"string\") {\n        //   if (eachService.revenue_per_service.includes(\"-\")) {\n        //     // let [min, max] = eachProduct.revenue_per_unit.split(\"-\").map(Number);\n        //     // sum_product_revenue += max\n        //     // sum_product_revenue_MIN += min\n        //     console.log(\"GG\")\n        //   } else {\n        //     sum_service_revenue += eachService.revenue_per_service\n        //     sum_service_revenue_MIN += eachService.revenue_per_service\n        //   }\n        // }\n\n      });\n    });\n\n    totalValue = sum_product_revenue + sum_service_revenue\n    totalValue_MIN = sum_product_revenue_MIN + sum_service_revenue\n\n    totalRevenue.push(totalValue);\n    totalRevenue_MIN.push(totalValue_MIN);\n\n    for (let i = 1; i < modelConfig.projection_period; i++) {\n      // totalValue += totalValue*(increase / 100)\n      // increase += increase\n      totalRevenue.push(totalValue);\n      totalRevenue_MIN.push(totalValue_MIN);\n    }\n\n    return totalValue;\n  }\n\n\n\n  function calculateFixedCost() {\n    let sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach((tableFixedCost) => {\n      tableFixedCost.fixed_costs.forEach((eachFixedCost) => {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n\n  function calculateTotalFixdcost() {\n    let sum_fixed_cost = 0;\n    let sum_investment = 0;\n    let increase = 0;\n    // modelConfig.projection_period\n\n    tableExpenseData.fixed_cost_tables.forEach((tableFixedCost) => {\n      tableFixedCost.fixed_costs.forEach((eachFixedCost) => {\n        sum_fixed_cost += eachFixedCost.amount;\n        increase = eachFixedCost.cost_increase\n      });\n    });\n\n    tableExpenseData.investment_tables.forEach((table) => {\n      table.investments.forEach((eachData) => {\n        sum_investment += eachData.amount\n      })\n    })\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalFixedCost.push(sum_fixed_cost);\n\n    for (let i = 1; i < modelConfig.projection_period; i++) {\n      sum_fixed_cost += sum_fixed_cost * (increase / 100)\n      increase += increase\n      totalFixedCost.push(sum_fixed_cost);\n    }\n\n  }\n\n  // function netIncome() {\n  //   return totalRevenue.map((revenue, index) => revenue - totalFixedCost[index]);\n\n  // }\n\n  return (\n    <div>\n      <div className=\"d-flex sen-sidebar-container\">\n        <BizSidebar />\n        <div\n          className={sidebar ? \"p-4 chart-pages-body2\" : \"p-4 chart-pages-body\"}\n        >\n          <StatementHearder\n            title=\"Income Statement\"\n            sensitivityPath=\"/Sensitivity/income\"\n            listPath=\"/ProfitLossStatements\"\n            chartPath=\"/Chart/incom\"\n          />\n          <div>\n            <CombinationCharts\n              data_type=\"revenue\"\n              totalRevenue={totalRevenue}\n              total_fixed_cost={totalFixedCost}\n              totalRevenue_MIN={totalRevenue_MIN}\n            />\n            {console.log(\"totalFixedCost : \" + totalFixedCost)}\n          </div>\n        </div>\n\n        <div className=\"\">\n          {sidebar ? (\n            <div className=\"sen-sidebar\">\n              <div className=\"sen-sidebar-show\" onClick={showSidebar}>\n                <AiOutlineDoubleLeft />\n              </div>\n              <div className=\"total-text\">\n                <div className=\"d-flex justify-content-between\">\n                  <div>รายได้รวม</div>\n                  <div>\n                    {calculateRevenue_service() + calculateRevenue_product()}\n                  </div>\n                </div>\n                <div className=\"d-flex justify-content-between\">\n                  <div>รายจ่ายรวม</div>\n                  <div>{calculateTotalFixdcost()}</div>\n                </div>\n                <div className=\"d-flex justify-content-between\">\n                  <div>สุทธิ</div>\n                  <div>{calculateRevenue() - calculateFixedCost()}</div>\n                </div>\n              </div>\n\n\n              <div className=\"table-name-side-text\">รายได้การบริการ/วัน</div>\n              <div className=\"\">\n                <div>\n                  <EditInputOnSidebar\n                    name=\"รวมรายได้จากการบริการ/วัน\"\n                    type=\"text\"\n                    defaultValue={calculateRevenue_service()}\n                    className=\"chart-input\"\n                    resultDisplay={true}\n                  />\n                </div>\n              </div>\n              {tableRevenueData.service_tables.map((tableService) => (\n                <div key={tableService._id}>\n                  {/* <div className=\"total-text\">{tableService.name}</div> */}\n                  {tableService.services.map((eachService) => (\n                    <div key={eachService._id}>\n                      {eachService.name !== \"\" && (\n                        <EditInputOnSidebar\n                          name={eachService.name}\n                          type=\"text\"\n                          defaultValue={eachService.revenue_per_service}\n                          className=\"chart-input\"\n                          onChange={(event) =>\n                            onValChange(\n                              tableService._id,\n                              eachService._id,\n                              event.target.value\n                            )\n                          }\n                        />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              ))}\n\n\n              <div className=\"table-name-side-text\">\n                รายได้การขายสินค้า/วัน\n              </div>\n              <EditInputOnSidebar\n                name=\"รวมรายได้จากการขายสินค้า/วัน\"\n                type=\"text\"\n                defaultValue={calculateRevenue_product()}\n                className=\"chart-input\"\n                resultDisplay={true}\n              />\n              {tableRevenueData.product_tables.map((tableProduct) => (\n                <div key={tableProduct._id}>\n                  {/* <div className=\"total-text\">{tableProduct.name}</div> */}\n                  {tableProduct.products.map((eachProduct) => (\n                    <div key={eachProduct._id}>\n                      {eachProduct.name !== \"\" && (\n                        <EditInputOnSidebar\n                          name={eachProduct.name}\n                          type=\"text\"\n                          defaultValue={eachProduct.revenue_per_unit}\n                          className=\"chart-input\"\n                          onChange={(event) =>\n                            onValChange(\n                              tableProduct._id,\n                              eachProduct._id,\n                              event.target.value\n                            )\n                          }\n                        />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              ))}\n\n\n              <div className=\"table-name-side-text\">รายจ่าย/วัน</div>\n              <EditInputOnSidebar\n                name=\"รวมรายจ่าย\"\n                type=\"text\"\n                defaultValue={calculateFixedCost()}\n                className=\"chart-input\"\n                resultDisplay={true}\n              />\n              {tableExpenseData.fixed_cost_tables.map((tableFixedCost) => (\n                <div key={tableFixedCost._id}>\n                  {/* <div className=\"total-text\">{tableFixedCost.name}</div> */}\n                  {tableFixedCost.fixed_costs.map((eachFixedCost) => (\n                    <div key={eachFixedCost._id}>\n                      {eachFixedCost.name !== \"\" && (\n                        <EditInputOnSidebar\n                          name={eachFixedCost.name}\n                          type=\"text\"\n                          defaultValue={eachFixedCost.amount}\n                          className=\"chart-input\"\n                          onChange={(event) =>\n                            onValChange(\n                              tableFixedCost._id,\n                              eachFixedCost._id,\n                              event.target.value\n                            )\n                          }\n                        />\n                      )}\n                    </div>\n                  ))}\n                </div>\n              ))}\n\n            </div>\n          ) : (\n            <div className=\"sen-sidebar2\">\n              <div className=\"sen-sidebar-show2\" onClick={showSidebar}>\n                <AiOutlineDoubleLeft />\n              </div>\n            </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default incomeChartPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}