{"ast":null,"code":"import _objectSpread from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/ffc/ffcCard/ffcCard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { create, all } from 'mathjs';\nimport './ffcCard.css';\nimport { IconContext } from \"react-icons\";\nimport { BsFillBarChartFill } from \"react-icons/bs\";\nimport { FaThList } from \"react-icons/fa\";\nimport CombinationCharts from '../../statement/charts/combinationCharts';\nimport \"../../../pages/checkBiz/statementsPage/chartPages/chartPages.css\";\nimport \"../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../checkbiz/sidebarEditdata/editInputOnSidebar\";\n\n// import BarChart from '../../statement/charts/barChart';\n// import CombinationChartsMinMax from '../../statement/charts/combinationChartsMinMax';\n// import stackedBar from '../../statement/charts/stackedBar';\n// import DoughnutChart from '../../statement/charts/doughnutChart';\n// import bizSidebar from '../../bizTools/bizSidebar/bizSidebar';\n// import statementHearder from '../../statement/statementHearder';\n// import sensitivityEditSidebar from '../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar';\n// import { AiOutlineDoubleLeft } from \"react-icons/ai\";\n// import BIZTOOL_PAGE_CONFIG from '../../../pages/bizTools/pageConfig';\n\nvar ffcCard = function ffcCard(props) {\n  // const [tableName, setTableName] = useState(\"\");\n  // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n  // const config = BIZTOOL_PAGE_CONFIG.revenue\n  // const [tableService, setTableService] = useState();\n  // const [service, setService] = useState();\n  // const [revenuePerService, setRevenuePerService] = useState();\n  // const [message, setMessage] = useState(\"\");\n  // const [sidebar, setSidebar] = useState(true);\n  // const showSidebar = () => setSidebar(!sidebar);\n  // const handleChange = (event) => {\n  //     setMessage(event.target.value);\n  //     console.log(\"value is:\", event.target.value);\n  // };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    chart = _useState2[0],\n    setChart = _useState2[1];\n  var totalRevenue = [];\n  var totalFixedCost = [];\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState3 = useState({\n      user: false,\n      projects: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoaded = _useState4[0],\n    setIsLoaded = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    reload = _useState6[0],\n    setReload = _useState6[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n  }, [selectedProject]);\n  var _useState7 = useState(selectedProject.revenue),\n    _useState8 = _slicedToArray(_useState7, 2),\n    tableRevenueData = _useState8[0],\n    setTableRevenueData = _useState8[1];\n  var _useState9 = useState(selectedProject.expense),\n    _useState10 = _slicedToArray(_useState9, 2),\n    tableExpenseData = _useState10[0],\n    setTableExpenseData = _useState10[1];\n  var onValChange = function onValChange(tableID, unitID, amountPerUnit) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    var shallowFixedCostTables = JSON.parse(JSON.stringify(selectedProject.expense.fixed_cost_tables));\n    shallowServiceTables = shallowServiceTables.map(function (eachTableService) {\n      if (eachTableService._id === tableID) {\n        eachTableService.services = eachTableService.services.map(function (eachService) {\n          if (eachService._id === unitID) {\n            if (eachService.revenue_per_service !== amountPerUnit) {\n              eachService.revenue_per_service = amountPerUnit;\n            }\n          }\n          return eachService;\n        });\n      }\n      return eachTableService;\n    });\n    shallowProductTables = shallowProductTables.map(function (eachTableProduct) {\n      if (eachTableProduct._id === tableID) {\n        eachTableProduct.products = eachTableProduct.products.map(function (eachProduct) {\n          if (eachProduct._id === unitID) {\n            if (eachProduct.revenue_per_unit !== amountPerUnit) {\n              eachProduct.revenue_per_unit = amountPerUnit;\n            }\n          }\n          return eachProduct;\n        });\n      }\n      return eachTableProduct;\n    });\n    shallowFixedCostTables = shallowFixedCostTables.map(function (eachTableFixedCost) {\n      if (eachTableFixedCost._id === tableID) {\n        eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(function (eachFixedCost) {\n          if (eachFixedCost._id === unitID) {\n            if (eachFixedCost.amount !== amountPerUnit) {\n              eachFixedCost.amount = amountPerUnit;\n            }\n          }\n          return eachFixedCost;\n        });\n      }\n      return eachTableFixedCost;\n    });\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      },\n      expense: {\n        fixed_cost_tables: shallowFixedCostTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  function calculateRevenue_service() {\n    var sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    var sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n  function calculateRevenue() {\n    var totalValue = 0;\n    totalValue = calculateRevenue_service() + calculateRevenue_product();\n    totalRevenue.push(totalValue);\n    return totalValue;\n  }\n  function calculateFixedCost() {\n    var sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.forEach(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n  function calculateTotalFixdcost() {\n    var totalValue = 0;\n    totalValue = calculateFixedCost();\n    totalFixedCost.push(totalValue);\n    return totalValue;\n  }\n  function calculateNPV(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    return netPresentValue;\n  }\n  var math = create(all);\n  function calculateIRR(cashFlows) {\n    var guess = 0.1; // Initial guess for IRR\n    var result = math.numeric.irr(cashFlows, guess);\n    return result;\n  }\n  function calculatePaybackPeriod(initialInvestment, cashFlows) {\n    var cumulativeCashFlow = -initialInvestment; // Add the initial investment as a negative cash flow\n    var paybackPeriod = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      cumulativeCashFlow += cashFlows[i];\n      if (cumulativeCashFlow >= 0) {\n        paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1];\n        break;\n      }\n    }\n    return paybackPeriod;\n  }\n  function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    var profitabilityIndex = netPresentValue / initialInvestment;\n    return profitabilityIndex;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-table-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, props.tableName ? props.tableName : \"tableName\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconContext.Provider, {\n    value: {\n      color: \"#9fa7c2\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaThList, {\n    onClick: function onClick() {\n      return setChart(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(BsFillBarChartFill, {\n    onClick: function onClick() {\n      return setChart(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      margin: \"2px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, chart ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-body-chart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CombinationCharts, {\n    className: \"combination-charts\",\n    data_type: props.type\n    //   total_service_revenue={totalRevenue}\n    //   total_fixed_cost={totalFixedCost}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ffc-card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, props.type === \"revenue\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 45\n    }\n  }, \"amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"390px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 45\n    }\n  }, \"start_date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, tableRevenueData.service_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 45\n      }\n    }, table.services.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 57\n        }\n      }, each.revenue_per_service), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }), tableRevenueData.product_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 45\n      }\n    }, table.products.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 57\n        }\n      }, each.revenue_per_unit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"revenue-service\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 45\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 45\n    }\n  }, \"amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"390px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }, \"start_date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, tableRevenueData.service_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 45\n      }\n    }, table.services.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 57\n        }\n      }, each.revenue_per_service), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"revenue-product\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 45\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 45\n    }\n  }, \"amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"390px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 45\n    }\n  }, \"start_date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 37\n    }\n  }, tableRevenueData.product_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 45\n      }\n    }, table.products.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 57\n        }\n      }, each.revenue_per_unit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"fixed-cost\" && tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: tableFixedCost._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 37\n      }\n    }, tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: eachFixedCost._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 45\n        }\n      }, eachFixedCost.name !== \"\" && /*#__PURE__*/React.createElement(EditInputOnSidebar, {\n        name: eachFixedCost.name,\n        type: \"text\",\n        defaultValue: eachFixedCost.amount,\n        className: \"chart-input\",\n        onChange: function onChange(event) {\n          return onValChange(tableFixedCost._id, eachFixedCost._id, event.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 53\n        }\n      }));\n    }));\n  }), props.type === \"expense\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 45\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 45\n    }\n  }, \"amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"390px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 45\n    }\n  }, \"start_date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 37\n    }\n  }, tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: tableFixedCost._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 45\n      }\n    }, tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: eachFixedCost._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 57\n        }\n      }, eachFixedCost.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 57\n        }\n      }, eachFixedCost.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 57\n        }\n      }, eachFixedCost.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"total-investment\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 45\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 45\n    }\n  }, \"amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"390px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 45\n    }\n  }, \"start_date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 37\n    }\n  }, tableExpenseData.investment_tables.map(function (table) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: table._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 45\n      }\n    }, table.investments.map(function (each) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: each._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 57\n        }\n      }, each.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 57\n        }\n      }, each.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 57\n        }\n      }, each.start_date.substring(0, 10)));\n    }));\n  }))), props.type === \"financial-return\" && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-sm ffc-table-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"390px\"\n    },\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 45\n    }\n  }, \"Financial Return\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"190px\"\n    },\n    className: \"text-left\",\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 45\n    }\n  }, \"Best Case\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"190px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 45\n    }\n  }, \"Average\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"190px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 45\n    }\n  }, \"Worst Case\"), /*#__PURE__*/React.createElement(\"th\", {\n    sstyle: {\n      width: \"90px\"\n    },\n    cope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 45\n    }\n  }, \"xxxx\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 45\n    }\n  }, \"Net Present value (NPV)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 45\n    }\n  }, \"Internal rate of return (IRR)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 45\n    }\n  }, \"Payback period\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 45\n    }\n  }, \"profitability index (PI)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 45\n    }\n  }))))))));\n};\nexport default ffcCard;","map":{"version":3,"names":["React","useEffect","useState","create","all","IconContext","BsFillBarChartFill","FaThList","CombinationCharts","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","EditInputOnSidebar","ffcCard","props","_useState","_useState2","_slicedToArray","chart","setChart","totalRevenue","totalFixedCost","dispatch","selectedProject","state","projects","_useState3","user","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","reload","setReload","_id","project","setTableRevenueData","revenue","setTableExpenseData","expense","_useState7","_useState8","tableRevenueData","_useState9","_useState10","tableExpenseData","onValChange","tableID","unitID","amountPerUnit","shallowServiceTables","JSON","parse","stringify","service_tables","shallowProductTables","product_tables","shallowFixedCostTables","fixed_cost_tables","map","eachTableService","services","eachService","revenue_per_service","eachTableProduct","products","eachProduct","revenue_per_unit","eachTableFixedCost","fixed_costs","eachFixedCost","amount","shallowSelectedProject","_objectSpread","id","data","calculateRevenue_service","sum_service_revenue","forEach","tableService","calculateRevenue_product","sum_product_revenue","tableProduct","calculateRevenue","totalValue","push","calculateFixedCost","sum_fixed_cost","tableFixedCost","calculateTotalFixdcost","calculateNPV","initialInvestment","cashFlows","discountRate","presentValueOfCashFlows","i","length","Math","pow","netPresentValue","math","calculateIRR","guess","result","numeric","irr","calculatePaybackPeriod","cumulativeCashFlow","paybackPeriod","calculateProfitabilityIndex","profitabilityIndex","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","tableName","Provider","value","color","onClick","style","margin","data_type","type","width","scope","sstyle","cope","table","Fragment","key","each","name","start_date","substring","defaultValue","onChange","event","target","investment_tables","investments"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/ffc/ffcCard/ffcCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { create, all } from 'mathjs'\nimport './ffcCard.css'\nimport { IconContext } from \"react-icons\";\nimport { BsFillBarChartFill } from \"react-icons/bs\";\nimport { FaThList } from \"react-icons/fa\";\n\nimport CombinationCharts from '../../statement/charts/combinationCharts';\nimport \"../../../pages/checkBiz/statementsPage/chartPages/chartPages.css\";\nimport \"../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    fetchProjectById,\n    projectUpdated,\n    updateProject,\n} from \"../../../features/projectsSlice\";\nimport EditInputOnSidebar from \"../../checkbiz/sidebarEditdata/editInputOnSidebar\";\n\n// import BarChart from '../../statement/charts/barChart';\n// import CombinationChartsMinMax from '../../statement/charts/combinationChartsMinMax';\n// import stackedBar from '../../statement/charts/stackedBar';\n// import DoughnutChart from '../../statement/charts/doughnutChart';\n// import bizSidebar from '../../bizTools/bizSidebar/bizSidebar';\n// import statementHearder from '../../statement/statementHearder';\n// import sensitivityEditSidebar from '../../sensitivity/sensitivityEdit/sidebar/sensitivityEditSidebar';\n// import { AiOutlineDoubleLeft } from \"react-icons/ai\";\n// import BIZTOOL_PAGE_CONFIG from '../../../pages/bizTools/pageConfig';\n\nconst ffcCard = (props) => {\n    // const [tableName, setTableName] = useState(\"\");\n    // const [newRevenuePerService, setNewRevenuePerService] = useState(null);\n    // const config = BIZTOOL_PAGE_CONFIG.revenue\n    // const [tableService, setTableService] = useState();\n    // const [service, setService] = useState();\n    // const [revenuePerService, setRevenuePerService] = useState();\n    // const [message, setMessage] = useState(\"\");\n    // const [sidebar, setSidebar] = useState(true);\n    // const showSidebar = () => setSidebar(!sidebar);\n\n    // const handleChange = (event) => {\n    //     setMessage(event.target.value);\n    //     console.log(\"value is:\", event.target.value);\n    // };\n    \n\n    const [chart, setChart] = useState(false);\n    const totalRevenue = [];\n    const totalFixedCost = [];\n\n    const dispatch = useDispatch();\n    const selectedProject = useSelector(\n        (state) => state.projects.selectedProject\n    );\n    const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n    const [reload, setReload] = useState(false);\n\n\n    useEffect(() => {\n        if (isLoaded.projects) {\n            dispatch(fetchProjectById(selectedProject._id));\n            setIsLoaded({ user: true, project: true });\n        }\n        if (!reload) {\n            dispatch(fetchProjectById(selectedProject._id));\n            setReload(true);\n        }\n        setTableRevenueData(selectedProject.revenue);\n        setTableExpenseData(selectedProject.expense);\n    }, [selectedProject]);\n\n    const [tableRevenueData, setTableRevenueData] = useState(\n        selectedProject.revenue\n    );\n    const [tableExpenseData, setTableExpenseData] = useState(\n        selectedProject.expense\n    );\n\n    const onValChange = (tableID, unitID, amountPerUnit) => {\n        let shallowServiceTables = JSON.parse(\n            JSON.stringify(selectedProject.revenue.service_tables)\n        );\n        let shallowProductTables = JSON.parse(\n            JSON.stringify(selectedProject.revenue.product_tables)\n        );\n        let shallowFixedCostTables = JSON.parse(\n            JSON.stringify(selectedProject.expense.fixed_cost_tables)\n        );\n\n        shallowServiceTables = shallowServiceTables.map((eachTableService) => {\n            if (eachTableService._id === tableID) {\n                eachTableService.services = eachTableService.services.map(\n                    (eachService) => {\n                        if (eachService._id === unitID) {\n                            if (eachService.revenue_per_service !== amountPerUnit) {\n                                eachService.revenue_per_service = amountPerUnit;\n                            }\n                        }\n                        return eachService;\n                    }\n                );\n            }\n            return eachTableService;\n        });\n\n        shallowProductTables = shallowProductTables.map((eachTableProduct) => {\n            if (eachTableProduct._id === tableID) {\n                eachTableProduct.products = eachTableProduct.products.map(\n                    (eachProduct) => {\n                        if (eachProduct._id === unitID) {\n                            if (eachProduct.revenue_per_unit !== amountPerUnit) {\n                                eachProduct.revenue_per_unit = amountPerUnit;\n                            }\n                        }\n                        return eachProduct;\n                    }\n                );\n            }\n            return eachTableProduct;\n        });\n\n        shallowFixedCostTables = shallowFixedCostTables.map(\n            (eachTableFixedCost) => {\n                if (eachTableFixedCost._id === tableID) {\n                    eachTableFixedCost.fixed_costs = eachTableFixedCost.fixed_costs.map(\n                        (eachFixedCost) => {\n                            if (eachFixedCost._id === unitID) {\n                                if (eachFixedCost.amount !== amountPerUnit) {\n                                    eachFixedCost.amount = amountPerUnit;\n                                }\n                            }\n                            return eachFixedCost;\n                        }\n                    );\n                }\n                return eachTableFixedCost;\n            }\n        );\n\n        let shallowSelectedProject = {\n            ...selectedProject,\n            revenue: {\n                service_tables: shallowServiceTables,\n                product_tables: shallowProductTables,\n            },\n            expense: {\n                fixed_cost_tables: shallowFixedCostTables,\n            },\n        };\n        dispatch(projectUpdated(shallowSelectedProject));\n        dispatch(\n            updateProject({ id: selectedProject._id, data: shallowSelectedProject })\n        );\n    };\n\n    function calculateRevenue_service() {\n        let sum_service_revenue = 0;\n        tableRevenueData.service_tables.forEach((tableService) => {\n            tableService.services.forEach((eachService) => {\n                sum_service_revenue += eachService.revenue_per_service;\n            });\n        });\n        return sum_service_revenue;\n    }\n    function calculateRevenue_product() {\n        let sum_product_revenue = 0;\n        tableRevenueData.product_tables.forEach((tableProduct) => {\n            tableProduct.products.forEach((eachProduct) => {\n                sum_product_revenue += eachProduct.revenue_per_unit;\n            });\n        });\n        return sum_product_revenue;\n    }\n\n    function calculateRevenue() {\n        let totalValue = 0;\n        totalValue = calculateRevenue_service() + calculateRevenue_product();\n        totalRevenue.push(totalValue);\n        return totalValue;\n    }\n\n    function calculateFixedCost() {\n        let sum_fixed_cost = 0;\n        tableExpenseData.fixed_cost_tables.forEach((tableFixedCost) => {\n            tableFixedCost.fixed_costs.forEach((eachFixedCost) => {\n                sum_fixed_cost += eachFixedCost.amount;\n            });\n        });\n        return sum_fixed_cost;\n    }\n\n    function calculateTotalFixdcost() {\n        let totalValue = 0;\n        totalValue = calculateFixedCost();\n        totalFixedCost.push(totalValue);\n        return totalValue\n    }\n\n    function calculateNPV(initialInvestment, cashFlows, discountRate) {\n        let presentValueOfCashFlows = 0\n        for (let i = 0; i < cashFlows.length; i++) {\n          presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n        }\n        const netPresentValue = presentValueOfCashFlows - initialInvestment\n        return netPresentValue\n      }      \n\n    const math = create(all)\n\n    function calculateIRR(cashFlows) {\n        const guess = 0.1 // Initial guess for IRR\n        const result = math.numeric.irr(cashFlows, guess)\n        return result\n    }\n\n    function calculatePaybackPeriod(initialInvestment, cashFlows) {\n        let cumulativeCashFlow = -initialInvestment // Add the initial investment as a negative cash flow\n        let paybackPeriod = 0\n\n        for (let i = 0; i < cashFlows.length; i++) {\n            cumulativeCashFlow += cashFlows[i]\n            if (cumulativeCashFlow >= 0) {\n                paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1]\n                break\n            }\n        }\n\n        return paybackPeriod\n    }\n\n    function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n        let presentValueOfCashFlows = 0\n        for (let i = 0; i < cashFlows.length; i++) {\n            presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n        }\n        const netPresentValue = presentValueOfCashFlows - initialInvestment\n        const profitabilityIndex = netPresentValue / initialInvestment\n        return profitabilityIndex\n    }\n\n\n\n    return (\n        <div className=\"ffc-card-container\">\n            <div>\n                <div className='d-flex justify-content-between'>\n                    <div className=\"ffc-table-name\">{props.tableName ? props.tableName : \"tableName\"}</div>\n                    <div className='d-flex'>\n                        <IconContext.Provider value={{ color: \"#9fa7c2\" }}>\n                            <FaThList onClick={() => setChart(false)} />&nbsp;\n                            <BsFillBarChartFill onClick={() => setChart(true)} />\n                        </IconContext.Provider>\n                    </div>\n                </div>\n                <hr style={{ margin: \"2px\" }}></hr>\n                <div>\n                    {chart ?\n                        <div className=\"ffc-card-body-chart\">\n\n                            <CombinationCharts\n                                className=\"combination-charts\"\n                                data_type={props.type}\n                            //   total_service_revenue={totalRevenue}\n                            //   total_fixed_cost={totalFixedCost}\n                            />\n\n                        </div>\n                        :\n                        <div className='ffc-card-body'>\n                            {props.type === \"revenue\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.service_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.services.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_service}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                        {tableRevenueData.product_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.products.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_unit}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n\n                            }\n                            {props.type === \"revenue-service\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.service_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.services.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_service}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n\n                            }\n                            {props.type === \"revenue-product\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableRevenueData.product_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.products.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.revenue_per_unit}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"fixed-cost\" &&\n                                tableExpenseData.fixed_cost_tables.map((tableFixedCost) => (\n                                    <div key={tableFixedCost._id}>\n                                        {/* <div className=\"total-text\">{tableFixedCost.name}</div> */}\n                                        {tableFixedCost.fixed_costs.map((eachFixedCost) => (\n                                            <div key={eachFixedCost._id}>\n                                                {eachFixedCost.name !== \"\" && (\n                                                    <EditInputOnSidebar\n                                                        name={eachFixedCost.name}\n                                                        type=\"text\"\n                                                        defaultValue={eachFixedCost.amount}\n                                                        className=\"chart-input\"\n                                                        onChange={(event) =>\n                                                            onValChange(\n                                                                tableFixedCost._id,\n                                                                eachFixedCost._id,\n                                                                event.target.value\n                                                            )\n                                                        }\n                                                    />\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                ))}\n                            {props.type === \"expense\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableExpenseData.fixed_cost_tables.map((tableFixedCost) => (\n                                            <React.Fragment key={tableFixedCost._id}>\n                                                {tableFixedCost.fixed_costs.map((eachFixedCost) => (\n                                                    <tr key={eachFixedCost._id}>\n                                                        <td>{eachFixedCost.name}</td>\n                                                        <td>{eachFixedCost.amount}</td>\n                                                        <td>{eachFixedCost.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"total-investment\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">name</th>\n                                            <th style={{ width: \"390px\" }} className=\"text-left\" scope=\"col\">amount</th>\n                                            <th sstyle={{ width: \"390px\" }} cope=\"col\">start_date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableExpenseData.investment_tables.map((table) => (\n                                            <React.Fragment key={table._id}>\n                                                {table.investments.map((each) => (\n                                                    <tr key={each._id}>\n                                                        <td>{each.name}</td>\n                                                        <td>{each.amount}</td>\n                                                        <td>{each.start_date.substring(0, 10)}</td>\n                                                    </tr>\n                                                ))}\n                                            </React.Fragment>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            }\n                            {props.type === \"financial-return\" &&\n                                <table className=\"table table-sm ffc-table-text\">\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: \"390px\" }} scope=\"col\">Financial Return</th>\n                                            <th style={{ width: \"190px\" }} className=\"text-left\" scope=\"col\">Best Case</th>\n                                            <th sstyle={{ width: \"190px\" }} cope=\"col\">Average</th>\n                                            <th sstyle={{ width: \"190px\" }} cope=\"col\">Worst Case</th>\n                                            <th sstyle={{ width: \"90px\" }} cope=\"col\">xxxx</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Net Present value (NPV)</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            {/* <td>{calculateNPV(initialInvestment, cashFlows, discountRate)}</td> */}\n                                        </tr>\n                                        <tr>\n                                            <td>Internal rate of return (IRR)</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            {/* <td>{calculateIRR(cashFlows)}</td> */}\n                                        </tr>\n                                        <tr>\n                                            <td>Payback period</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            {/* <td>{calculatePaybackPeriod(initialInvestment, cashFlows)}</td> */}\n                                        </tr>\n                                        <tr>\n                                            <td>profitability index (PI)</td>\n                                            <td></td>\n                                            <td></td>\n                                            <td></td>\n                                            {/* <td>{calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate)}</td> */}\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            }\n\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ffcCard"],"mappings":"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"},"metadata":{},"sourceType":"module"}