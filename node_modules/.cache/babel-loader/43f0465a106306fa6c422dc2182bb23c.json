{"ast":null,"code":"var KCalulateFunctions = {\n  getEquityShare: function getEquityShare(allData, myInvest, isOwner) {\n    var debts = allData.debt_issuance_tables[0].debt_issuances.map(function (each) {\n      return each.amount;\n    }); //array\n    var totalDebts = 0;\n    totalDebts = debts.reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var invests = allData.equity_contribution_tables[0].equity_contributions.map(function (each) {\n      return each.amount;\n    }); //array\n\n    var totalInvests = 0;\n    totalInvests = invests.reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var totalAmount = totalDebts + totalInvests;\n    var share = !isOwner ? myInvest * 100 / totalAmount : (myInvest + totalDebts) * 100 / totalAmount;\n    return totalAmount !== 0 ? parseFloat(share).toFixed(2) : 0;\n  },\n  getRemainDebt: function getRemainDebt(debtIssuances) {\n    var totalDebts = debtIssuances.map(function (each) {\n      return each.amount;\n    }).reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var totalPaid = debtIssuances.map(function (eachDebt) {\n      var eachPaid = eachDebt.payments.map(function (each) {\n        return each.amount;\n      }).reduce(function (partialSum, a) {\n        return partialSum + a;\n      }, 0);\n      return eachPaid;\n    }).reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var remainDebts = totalDebts - totalPaid;\n    return remainDebts;\n  },\n  getRemainDebtYearly: function getRemainDebtYearly(debtIssuances, year) {\n    var totalDebts = debtIssuances.map(function (each) {\n      return each.amount;\n    }).reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var totalYearPaid = debtIssuances.map(function (eachDebt) {\n      var eachDebtYearPaid = 0;\n      for (var i = 0; i < year; i++) {\n        eachDebtYearPaid = eachDebtYearPaid + eachDebt.payments[i].amount;\n      }\n      return eachDebtYearPaid;\n    }).reduce(function (partialSum, a) {\n      return partialSum + a;\n    }, 0);\n    var remainDebts = totalDebts - totalYearPaid;\n    return remainDebts;\n  }\n};\nexport default KCalulateFunctions;","map":{"version":3,"names":["KCalulateFunctions","getEquityShare","allData","myInvest","isOwner","debts","debt_issuance_tables","debt_issuances","map","each","amount","totalDebts","reduce","partialSum","a","invests","equity_contribution_tables","equity_contributions","totalInvests","totalAmount","share","parseFloat","toFixed","getRemainDebt","debtIssuances","totalPaid","eachDebt","eachPaid","payments","remainDebts","getRemainDebtYearly","year","totalYearPaid","eachDebtYearPaid","i"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/common/kCalulator.jsx"],"sourcesContent":["\nconst KCalulateFunctions = {\n    getEquityShare: function (allData, myInvest, isOwner) {\n        const debts = allData.debt_issuance_tables[0].debt_issuances.map(each => {\n            return each.amount\n        }) //array\n        let totalDebts = 0\n        totalDebts = debts.reduce((partialSum, a) => partialSum + a, 0)\n        const invests = allData.equity_contribution_tables[0].equity_contributions.map(each => {\n            return each.amount\n        }) //array\n\n        let totalInvests = 0\n        totalInvests = invests.reduce((partialSum, a) => partialSum + a, 0)\n        const totalAmount = totalDebts + totalInvests\n        const share = !isOwner ? (myInvest * 100) / totalAmount : ((myInvest + totalDebts) * 100) / totalAmount\n        return totalAmount !== 0 ? parseFloat(share).toFixed(2) : 0\n    },\n    getRemainDebt: function (debtIssuances) {\n        let totalDebts = debtIssuances.map(each => {\n            return each.amount\n        }).reduce((partialSum, a) => partialSum + a, 0)\n\n        let totalPaid = debtIssuances.map(eachDebt => {\n            let eachPaid = eachDebt.payments.map(each => {\n                return each.amount\n            }).reduce((partialSum, a) => partialSum + a, 0)\n            return eachPaid\n        }).reduce((partialSum, a) => partialSum + a, 0)\n        let remainDebts = totalDebts - totalPaid\n        return remainDebts\n    },\n    getRemainDebtYearly: function (debtIssuances, year) {\n        let totalDebts = debtIssuances.map(each => {\n            return each.amount\n        }).reduce((partialSum, a) => partialSum + a, 0)\n        let totalYearPaid = debtIssuances.map(eachDebt => {\n            let eachDebtYearPaid = 0 \n            for (let i = 0; i < year; i++) {\n                eachDebtYearPaid = eachDebtYearPaid + eachDebt.payments[i].amount\n            }\n            return eachDebtYearPaid\n        }).reduce((partialSum, a) => partialSum + a, 0)\n        let remainDebts = totalDebts- totalYearPaid\n        return remainDebts\n    },\n}\n\nexport default KCalulateFunctions"],"mappings":"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"},"metadata":{},"sourceType":"module"}