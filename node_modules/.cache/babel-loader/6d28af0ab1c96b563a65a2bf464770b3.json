{"ast":null,"code":"import _slicedToArray from \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/statement/documents/cashFlowDocument.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../statement.css\";\nimport CHECKBIZ_CONFIG from \"../../checkbiz/checkbizData/checkbizConfig\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nvar cashFlowDocument = function cashFlowDocument() {\n  var yearRange = [2565, 2566, 2567, 2568];\n  var inittialCashFlowData = CHECKBIZ_CONFIG.cashflow;\n  var totalInvestment = 0;\n  var totalRevenue = [];\n  var totalfixedCost = [];\n  var totalCFO = [];\n  var totalCFI = [0, 0, 0];\n  var totalCFF = [];\n  var mock = [1000, 1000, 1000, 1000];\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState = useState({\n      user: false,\n      projects: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reload = _useState4[0],\n    setReload = _useState4[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setprojectName(selectedProject.name);\n    setModelConfig(selectedProject.model_config);\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n    setTableMiscellaneousData(selectedProject.miscellaneous);\n  }, [selectedProject]);\n  var _useState5 = useState(selectedProject.name),\n    _useState6 = _slicedToArray(_useState5, 2),\n    projectName = _useState6[0],\n    setprojectName = _useState6[1];\n  var _useState7 = useState(selectedProject.model_config),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modelConfig = _useState8[0],\n    setModelConfig = _useState8[1];\n  var _useState9 = useState(selectedProject.revenue),\n    _useState10 = _slicedToArray(_useState9, 2),\n    tableRevenueData = _useState10[0],\n    setTableRevenueData = _useState10[1];\n  var _useState11 = useState(selectedProject.expense),\n    _useState12 = _slicedToArray(_useState11, 2),\n    tableExpenseData = _useState12[0],\n    setTableExpenseData = _useState12[1];\n  var _useState13 = useState(selectedProject.miscellaneous),\n    _useState14 = _slicedToArray(_useState13, 2),\n    tableMiscellaneousData = _useState14[0],\n    setTableMiscellaneousData = _useState14[1];\n  function calculateInitialInvestment() {\n    var total = 0;\n    tableExpenseData.investment_tables.forEach(function (table) {\n      table.investments.forEach(function (eachCost) {\n        total += eachCost.amount;\n      });\n      totalInvestment.unshift(total);\n    });\n  }\n  function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n    var cashFlows = [];\n    var currentCashFlow = initialInvestment;\n    for (var i = 0; i < numberOfYears; i++) {\n      cashFlows.push(currentCashFlow);\n      currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n    }\n    return cashFlows;\n  }\n  function calculateRevenue_service() {\n    var sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    var sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n  function calculateRevenue() {\n    var totalValue = 0;\n    totalValue = calculateRevenue_service() + calculateRevenue_product();\n    totalRevenue.push(totalValue);\n    return totalValue;\n  }\n  function calculateFixedCost() {\n    var sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.forEach(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n  function calculateTotalFixdcost() {\n    var totalValue = 0;\n    totalValue = calculateFixedCost();\n    totalfixedCost.push(totalValue);\n    return totalValue;\n  }\n  function calculateCFO() {\n    var result = 0;\n    result = calculateRevenue() - calculateFixedCost();\n    return result;\n  }\n  function calculateCFI() {\n    var result = 0;\n    return result;\n  }\n  function calculateCFF() {\n    var result = 0;\n    return result;\n  }\n  function netCashflow() {\n    var result = 0;\n    result = calculateCFO() + calculateCFI() + calculateCFF();\n    return result;\n  }\n  ///////////////////////////////////////////////////\n  function total_CFO() {\n    var sum_fixed_cost = 0;\n    var increase = 0;\n    var sum_service_revenue = 0;\n    var sum_product_revenue = 0;\n    tableRevenueData.service_tables.forEach(function (tableService) {\n      tableService.services.forEach(function (eachService) {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    tableRevenueData.product_tables.forEach(function (tableProduct) {\n      tableProduct.products.forEach(function (eachProduct) {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    tableExpenseData.fixed_cost_tables.map(function (tableFixedCost) {\n      tableFixedCost.fixed_costs.map(function (eachFixedCost) {\n        sum_fixed_cost += eachFixedCost.amount;\n        increase = eachFixedCost.cost_increase;\n      });\n    });\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n    for (var i = 1; i < modelConfig.projection_period; i++) {\n      sum_fixed_cost += sum_fixed_cost * (increase / 100);\n      increase += increase;\n      totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n    }\n    // return sum_fixed_cost\n  }\n\n  function total_CFI() {\n    var sum_investment = 0;\n    tableExpenseData.investment_tables.map(function (table) {\n      table.investments.map(function (eachData) {\n        sum_investment += eachData.amount;\n      });\n    });\n    totalCFI.unshift(-sum_investment);\n  }\n  function total_CFF() {\n    var total = 0;\n    var increase = 0;\n    var sum_debt = 0;\n    var sum_equity = 0;\n    tableMiscellaneousData.debt_issuance.forEach(function (table) {\n      table.payments.map(function (eachData) {\n        //year?\n        // sum_debt += eachData.amount;\n        totalCFF.push(-eachData.amount);\n      });\n    });\n\n    // tableMiscellaneousData.equity_contribution.forEach((table) => {\n    //   sum_equity += table.amount;\n    // });\n\n    // for (let i = 1; i < modelConfig.projection_period; i++) {\n    //   totalCFF.push(sum_equity - sum_debt);\n    // }\n  }\n\n  //////////////////////////////////////////// FFC 5\n\n  function calculateInitialInvestment() {\n    tableExpenseData.investment_tables.forEach(function (table) {\n      table.investments.forEach(function (eachCost) {\n        totalInvestment += eachCost.amount;\n      });\n    });\n  }\n  function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n    var cashFlows = [];\n    var currentCashFlow = initialInvestment;\n    for (var i = 0; i < numberOfYears; i++) {\n      cashFlows.push(currentCashFlow);\n      currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n    }\n    return cashFlows;\n  }\n  function calculateNPV(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    console.log(\"NPV : \".concat(initialInvestment, \" ,[ \").concat(cashFlows, \" ], \").concat(discountRate));\n    return netPresentValue.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  // const math = create(all)\n\n  function calculateIRR(cashFlows) {\n    var math = require('mathjs');\n    var irr = math.finance.IRR(cashFlows);\n    return irr.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  function calculatePaybackPeriod(initialInvestment, cashFlows) {\n    var cumulativeCashFlow = -initialInvestment; // Add the initial investment as a negative cash flow\n    var paybackPeriod = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      cumulativeCashFlow += cashFlows[i];\n      if (cumulativeCashFlow >= 0) {\n        paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1];\n        break;\n      }\n    }\n    return paybackPeriod.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n    var presentValueOfCashFlows = 0;\n    for (var i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow(1 + discountRate, i + 1);\n    }\n    var netPresentValue = presentValueOfCashFlows - initialInvestment;\n    var profitabilityIndex = netPresentValue / initialInvestment;\n    return profitabilityIndex.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dov-head-cell mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, \"\\u0E1A\\u0E23\\u0E34\\u0E29\\u0E31\\u0E17 \", projectName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dov-head-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, \"\\u0E07\\u0E1A\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, \"\\u0E01\\u0E32\\u0E23\\u0E1B\\u0E23\\u0E30\\u0E21\\u0E32\\u0E13\\u0E01\\u0E32\\u0E23\\u0E43\\u0E19\\u0E0A\\u0E48\\u0E27\\u0E07 \\u0E1B\\u0E35 2565 - 2568\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"biz-water-mask\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, \"create by BIZCHECK\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table container table-hover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, i);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E14\\u0E33\\u0E40\\u0E19\\u0E34\\u0E19\\u0E07\\u0E32\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, \"\\u0E15\\u0E49\\u0E19\\u0E17\\u0E38\\u0E19\\u0E17\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E40\\u0E07\\u0E34\\u0E19\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, calculateFixedCost().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E17\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E40\\u0E07\\u0E34\\u0E19\"), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, calculateRevenue().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E25\\u0E07\\u0E17\\u0E38\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  }, \"\\u0E04\\u0E48\\u0E32\\u0E43\\u0E0A\\u0E49\\u0E08\\u0E48\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E25\\u0E07\\u0E17\\u0E38\\u0E19\"), calculateInitialInvestment(), yearRange.map(function (i) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      scope: \"col\",\n      className: \"dov-money-cell\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }\n    }, totalInvestment.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E32\\u0E01\\u0E01\\u0E34\\u0E08\\u0E01\\u0E23\\u0E23\\u0E21\\u0E08\\u0E31\\u0E14\\u0E2B\\u0E32\\u0E40\\u0E07\\u0E34\\u0E19\"), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E01\\u0E39\\u0E49\\u0E22\\u0E37\\u0E21\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"td\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E08\\u0E48\\u0E32\\u0E22\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E0A\\u0E33\\u0E23\\u0E30\\u0E40\\u0E07\\u0E34\\u0E19\\u0E01\\u0E39\\u0E49\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"td\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"dov-name-cell\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, \"\\u0E01\\u0E23\\u0E30\\u0E41\\u0E2A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E2A\\u0E14\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"), calculateCashFlows(totalInvestment, 0.7, 4).map(function (eachYear) {\n    return (\n      /*#__PURE__*/\n      // yearRange.map((i) => (\n      React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"dov-money-cell\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      }, eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\n      // ))\n    );\n  }))))));\n};\n\nexport default cashFlowDocument;","map":{"version":3,"names":["React","useEffect","useState","CHECKBIZ_CONFIG","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","cashFlowDocument","yearRange","inittialCashFlowData","cashflow","totalInvestment","totalRevenue","totalfixedCost","totalCFO","totalCFI","totalCFF","mock","dispatch","selectedProject","state","projects","_useState","user","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","reload","setReload","_id","project","setprojectName","name","setModelConfig","model_config","setTableRevenueData","revenue","setTableExpenseData","expense","setTableMiscellaneousData","miscellaneous","_useState5","_useState6","projectName","_useState7","_useState8","modelConfig","_useState9","_useState10","tableRevenueData","_useState11","_useState12","tableExpenseData","_useState13","_useState14","tableMiscellaneousData","calculateInitialInvestment","total","investment_tables","forEach","table","investments","eachCost","amount","unshift","calculateCashFlows","initialInvestment","annualGrowthRate","numberOfYears","cashFlows","currentCashFlow","i","push","calculateRevenue_service","sum_service_revenue","service_tables","tableService","services","eachService","revenue_per_service","calculateRevenue_product","sum_product_revenue","product_tables","tableProduct","products","eachProduct","revenue_per_unit","calculateRevenue","totalValue","calculateFixedCost","sum_fixed_cost","fixed_cost_tables","tableFixedCost","fixed_costs","eachFixedCost","calculateTotalFixdcost","calculateCFO","result","calculateCFI","calculateCFF","netCashflow","total_CFO","increase","map","cost_increase","projection_period","total_CFI","sum_investment","eachData","total_CFF","sum_debt","sum_equity","debt_issuance","payments","calculateNPV","discountRate","presentValueOfCashFlows","length","Math","pow","netPresentValue","console","log","concat","toFixed","replace","calculateIRR","math","require","irr","finance","IRR","calculatePaybackPeriod","cumulativeCashFlow","paybackPeriod","calculateProfitabilityIndex","profitabilityIndex","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","scope","eachYear"],"sources":["/Users/koonk/Documents/GitHub/CE65-20/packages/frontend/src/components/statement/documents/cashFlowDocument.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../statement.css\";\nimport CHECKBIZ_CONFIG from \"../../checkbiz/checkbizData/checkbizConfig\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchProjectById,\n  projectUpdated,\n  updateProject,\n} from \"../../../features/projectsSlice\";\n\n\nconst cashFlowDocument = () => {\n  const yearRange = [2565, 2566, 2567, 2568];\n\n  const inittialCashFlowData = CHECKBIZ_CONFIG.cashflow\n\n  let totalInvestment = 0;\n  let totalRevenue = [];\n  let totalfixedCost = [];\n  const totalCFO = [];\n  const totalCFI = [0, 0, 0];\n  const totalCFF = [];\n  let mock = [1000, 1000, 1000, 1000]\n\n  const dispatch = useDispatch();\n  const selectedProject = useSelector(\n    (state) => state.projects.selectedProject\n  );\n  const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({ user: true, project: true });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setprojectName(selectedProject.name)\n    setModelConfig(selectedProject.model_config);\n    setTableRevenueData(selectedProject.revenue);\n    setTableExpenseData(selectedProject.expense);\n    setTableMiscellaneousData(selectedProject.miscellaneous);\n  }, [selectedProject]);\n\n  const [projectName, setprojectName] = useState(\n    selectedProject.name\n  );\n  const [modelConfig, setModelConfig] = useState(\n    selectedProject.model_config\n  );\n  const [tableRevenueData, setTableRevenueData] = useState(\n    selectedProject.revenue\n  );\n  const [tableExpenseData, setTableExpenseData] = useState(\n    selectedProject.expense\n  );\n  const [tableMiscellaneousData, setTableMiscellaneousData] = useState(\n    selectedProject.miscellaneous\n  );\n\n\n  function calculateInitialInvestment() {\n    let total = 0\n    tableExpenseData.investment_tables.forEach((table) => {\n      table.investments.forEach((eachCost) => {\n        total += eachCost.amount;\n      });\n      totalInvestment.unshift(total)\n    });\n\n\n  }\n  function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n    let cashFlows = [];\n    let currentCashFlow = initialInvestment;\n\n    for (let i = 0; i < numberOfYears; i++) {\n      cashFlows.push(currentCashFlow);\n      currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n    }\n\n    return cashFlows;\n  }\n\n\n  function calculateRevenue_service() {\n    let sum_service_revenue = 0;\n    tableRevenueData.service_tables.forEach((tableService) => {\n      tableService.services.forEach((eachService) => {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n    return sum_service_revenue;\n  }\n  function calculateRevenue_product() {\n    let sum_product_revenue = 0;\n    tableRevenueData.product_tables.forEach((tableProduct) => {\n      tableProduct.products.forEach((eachProduct) => {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n    return sum_product_revenue;\n  }\n\n  function calculateRevenue() {\n    let totalValue = 0;\n    totalValue = calculateRevenue_service() + calculateRevenue_product();\n    totalRevenue.push(totalValue);\n    return totalValue;\n  }\n\n  function calculateFixedCost() {\n    let sum_fixed_cost = 0;\n    tableExpenseData.fixed_cost_tables.forEach((tableFixedCost) => {\n      tableFixedCost.fixed_costs.forEach((eachFixedCost) => {\n        sum_fixed_cost += eachFixedCost.amount;\n      });\n    });\n    return sum_fixed_cost;\n  }\n\n  function calculateTotalFixdcost() {\n    let totalValue = 0;\n    totalValue = calculateFixedCost();\n    totalfixedCost.push(totalValue);\n    return totalValue\n  }\n\n  function calculateCFO() {\n    let result = 0\n    result = calculateRevenue() - calculateFixedCost();\n    return result\n  }\n\n  function calculateCFI() {\n    let result = 0\n    return result\n  }\n\n  function calculateCFF() {\n    let result = 0\n    return result\n  }\n\n  function netCashflow() {\n    let result = 0\n    result = calculateCFO() + calculateCFI() + calculateCFF()\n    return result\n  }\n  ///////////////////////////////////////////////////\n  function total_CFO() {\n    let sum_fixed_cost = 0;\n    let increase = 0;\n    let sum_service_revenue = 0;\n    let sum_product_revenue = 0;\n\n    tableRevenueData.service_tables.forEach((tableService) => {\n      tableService.services.forEach((eachService) => {\n        sum_service_revenue += eachService.revenue_per_service;\n      });\n    });\n\n    tableRevenueData.product_tables.forEach((tableProduct) => {\n      tableProduct.products.forEach((eachProduct) => {\n        sum_product_revenue += eachProduct.revenue_per_unit;\n      });\n    });\n\n    tableExpenseData.fixed_cost_tables.map((tableFixedCost) => {\n      tableFixedCost.fixed_costs.map((eachFixedCost) => {\n        sum_fixed_cost += eachFixedCost.amount;\n        increase = eachFixedCost.cost_increase\n      });\n    });\n\n\n\n    // ปีแรก\n    // totalFixedCost.push(sum_fixed_cost + sum_investment);\n    totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n\n    for (let i = 1; i < modelConfig.projection_period; i++) {\n      sum_fixed_cost += sum_fixed_cost * (increase / 100)\n      increase += increase\n      totalCFO.push(sum_service_revenue + sum_product_revenue - sum_fixed_cost);\n    }\n    // return sum_fixed_cost\n  }\n  function total_CFI() {\n    let sum_investment = 0;\n    tableExpenseData.investment_tables.map((table) => {\n      table.investments.map((eachData) => {\n        sum_investment += eachData.amount\n      })\n    })\n    totalCFI.unshift(-sum_investment);\n\n  }\n  function total_CFF() {\n    let total = 0;\n    let increase = 0;\n    let sum_debt = 0;\n    let sum_equity = 0;\n\n    tableMiscellaneousData.debt_issuance.forEach((table) => {\n      table.payments.map((eachData) => {\n        //year?\n        // sum_debt += eachData.amount;\n        totalCFF.push(-eachData.amount);\n      })\n    });\n\n    // tableMiscellaneousData.equity_contribution.forEach((table) => {\n    //   sum_equity += table.amount;\n    // });\n\n\n\n    // for (let i = 1; i < modelConfig.projection_period; i++) {\n    //   totalCFF.push(sum_equity - sum_debt);\n    // }\n\n  }\n\n  //////////////////////////////////////////// FFC 5\n\n  function calculateInitialInvestment() {\n    tableExpenseData.investment_tables.forEach((table) => {\n      table.investments.forEach((eachCost) => {\n        totalInvestment += eachCost.amount;\n      });\n    });\n  }\n\n\n\n  function calculateCashFlows(initialInvestment, annualGrowthRate, numberOfYears) {\n    let cashFlows = [];\n    let currentCashFlow = initialInvestment;\n\n    for (let i = 0; i < numberOfYears; i++) {\n      cashFlows.push(currentCashFlow);\n      currentCashFlow = currentCashFlow * (1 + annualGrowthRate);\n    }\n\n    return cashFlows;\n  }\n\n  function calculateNPV(initialInvestment, cashFlows, discountRate) {\n    let presentValueOfCashFlows = 0\n    for (let i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n    }\n    const netPresentValue = presentValueOfCashFlows - initialInvestment\n    console.log(`NPV : ${initialInvestment} ,[ ${cashFlows} ], ${discountRate}`)\n\n    return netPresentValue.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  }\n\n  // const math = create(all)\n\n  function calculateIRR(cashFlows) {\n    const math = require('mathjs');\n\n    const irr = math.finance.IRR(cashFlows);\n\n    return irr.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  }\n\n\n\n  function calculatePaybackPeriod(initialInvestment, cashFlows) {\n    let cumulativeCashFlow = -initialInvestment // Add the initial investment as a negative cash flow\n    let paybackPeriod = 0\n\n    for (let i = 0; i < cashFlows.length; i++) {\n      cumulativeCashFlow += cashFlows[i]\n      if (cumulativeCashFlow >= 0) {\n        paybackPeriod += i + (cumulativeCashFlow - cashFlows[i]) / cashFlows[i + 1]\n        break\n      }\n    }\n\n    return paybackPeriod.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  }\n\n  function calculateProfitabilityIndex(initialInvestment, cashFlows, discountRate) {\n    let presentValueOfCashFlows = 0\n    for (let i = 0; i < cashFlows.length; i++) {\n      presentValueOfCashFlows += cashFlows[i] / Math.pow((1 + discountRate), i + 1)\n    }\n    const netPresentValue = presentValueOfCashFlows - initialInvestment\n    const profitabilityIndex = netPresentValue / initialInvestment\n    return profitabilityIndex.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  }\n\n\n\n  return (\n    <div className=\"\">\n      <div>\n        <div className=\"dov-head-cell mb-3\">บริษัท {projectName}</div>\n        <div className=\"dov-head-cell\">งบกระแสเงินสด</div>\n        <div className=\"dov-name-cell\">การประมาณการในช่วง ปี 2565 - 2568</div>\n        <div className=\"biz-water-mask\">create by BIZCHECK</div>\n        <table className=\"table container table-hover\">\n          <thead>\n            <tr className=\"table\">\n              <th scope=\"col\" className=\"dov-name-cell\">รายการ</th>\n              {yearRange.map((i) => (\n                <th scope=\"col\" className=\"dov-money-cell\">{i}</th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมดำเนินงาน</th>\n            {/* <div>{total_income()}</div>\n            <div>{total_CFO()}</div>\n            <div>{total_CFI()}</div>\n            <div>{total_CFF()}</div> */}\n            <tr>\n              <td className=\"dov-name-cell\">ต้นทุนทางการเงิน</td>\n              {yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{calculateFixedCost().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n              ))}\n            </tr>\n            <tr>\n              <td className=\"dov-name-cell\">รายได้ทางการเงิน</td>\n              {yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{calculateRevenue().toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n              ))}\n            </tr>\n            <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมลงทุน</th>\n            <tr>\n              <td className=\"dov-name-cell\">ค่าใช้จ่ายการลงทุน</td>\n              {calculateInitialInvestment()}\n              {yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{totalInvestment.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n              ))}\n            </tr>\n            <th className=\"dov-name-cell\">กระแสเงินสดจากกิจกรรมจัดหาเงิน</th>\n            <tr>\n              <td className=\"dov-name-cell\">เงินสดรับจากการกู้ยืม</td>\n              {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                // yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                // ))\n              ))}\n            </tr>\n            <tr>\n              <td className=\"dov-name-cell\">เงินสดจ่ายจากการชำระเงินกู้</td>\n              {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                // yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                // ))\n              ))}\n            </tr>\n            {/* <tr>\n              <td className=\"dov-name-cell\">เงินสดจ่ายจากเงินปันผล</td>\n              {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                // yearRange.map((i) => (\n                <td scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\n                // ))\n              ))}\n            </tr> */}\n            <tr>\n              <th className=\"dov-name-cell\">กระแสเงินสดสุทธิ</th>\n              {(calculateCashFlows(totalInvestment, 0.7, 4)).map(eachYear => (\n                // yearRange.map((i) => (\n                <th scope=\"col\" className=\"dov-money-cell\">{eachYear.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</th>\n                // ))\n              ))}\n            </tr>\n\n\n          </tbody>\n\n        </table>\n      </div>\n\n    </div>\n  );\n};\n\nexport default cashFlowDocument;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}