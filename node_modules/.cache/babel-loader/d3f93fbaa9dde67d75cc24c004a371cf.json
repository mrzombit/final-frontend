{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nmodule.exports = {\n  name: 'AtrulePrelude',\n  structure: {\n    children: [[]]\n  },\n  parse: function parse(name) {\n    var children = null;\n    if (name !== null) {\n      name = name.toLowerCase();\n    }\n    this.scanner.skipSC();\n    if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {\n      // custom consumer\n      children = this.atrule[name].prelude.call(this);\n    } else {\n      // default consumer\n      children = this.readSequence(this.scope.AtrulePrelude);\n    }\n    this.scanner.skipSC();\n    if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n      this.error('Semicolon or block is expected');\n    }\n    if (children === null) {\n      children = this.createList();\n    }\n    return {\n      type: 'AtrulePrelude',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function generate(node) {\n    this.children(node);\n  },\n  walkContext: 'atrulePrelude'\n};","map":null,"metadata":{},"sourceType":"script"}