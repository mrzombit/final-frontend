{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nmodule.exports = {\n  name: 'MediaQuery',\n  structure: {\n    children: [['Identifier', 'MediaFeature', 'WhiteSpace']]\n  },\n  parse: function parse() {\n    this.scanner.skipSC();\n    var children = this.createList();\n    var child = null;\n    var space = null;\n    scan: while (!this.scanner.eof) {\n      switch (this.scanner.tokenType) {\n        case COMMENT:\n          this.scanner.next();\n          continue;\n        case WHITESPACE:\n          space = this.WhiteSpace();\n          continue;\n        case IDENT:\n          child = this.Identifier();\n          break;\n        case LEFTPARENTHESIS:\n          child = this.MediaFeature();\n          break;\n        default:\n          break scan;\n      }\n      if (space !== null) {\n        children.push(space);\n        space = null;\n      }\n      children.push(child);\n    }\n    if (child === null) {\n      this.error('Identifier or parenthesis is expected');\n    }\n    return {\n      type: 'MediaQuery',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function generate(node) {\n    this.children(node);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}