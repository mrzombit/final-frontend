{"ast":null,"code":"import _toConsumableArray from \"/Users/koonk/Documents/GitHub/final-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/koonk/Documents/GitHub/final-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/koonk/Documents/GitHub/final-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koonk/Documents/GitHub/final-frontend/src/pages/bizTools/revenuePage/revenuePage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport BizSidebar from \"../../../components/bizTools/bizSidebar/bizSidebar\";\nimport BiztoolBody from \"../../../components/investmentProject/biztoolBody/biztoolBody\";\nimport BiztoolHeader from \"../../../components/investmentProject/biztoolHeader/biztoolHeader\";\nimport '../biztools.css';\nimport BIZTOOL_PAGE_CONFIG from \"../pageConfig\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\nfunction RevenuePage() {\n  var dispatch = useDispatch();\n  var selectedProject = useSelector(function (state) {\n    return state.projects.selectedProject;\n  });\n  var _useState = useState({\n      user: false,\n      projects: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reload = _useState4[0],\n    setReload = _useState4[1];\n  useEffect(function () {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({\n        user: true,\n        project: true\n      });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setReload(true);\n    }\n    setTableData(selectedProject.revenue);\n  }, [selectedProject]);\n  var _useState5 = useState(selectedProject.revenue),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tableData = _useState6[0],\n    setTableData = _useState6[1];\n  var config = BIZTOOL_PAGE_CONFIG.revenue;\n  var onCellChange = function onCellChange(tableType, tableId, rowId, columnIndex, value) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(function (eachTable) {\n        if (eachTable._id === tableId) {\n          var shallowRows = eachTable.services;\n          shallowRows = shallowRows.map(function (eachRow) {\n            if (eachRow._id === rowId) {\n              if (columnIndex === 0) {\n                return _objectSpread({}, eachRow, {\n                  name: value\n                });\n              } else if (columnIndex === 1) {\n                return _objectSpread({}, eachRow, {\n                  unit: Number(value.unit),\n                  unit_name: value.unitName\n                });\n              } else if (columnIndex === 2) {\n                return _objectSpread({}, eachRow, {\n                  serve_per_unit: Number(value)\n                });\n              } else if (columnIndex === 3) {\n                return _objectSpread({}, eachRow, {\n                  revenue_per_service: Number(value)\n                });\n              } else if (columnIndex === 4) {\n                return _objectSpread({}, eachRow, {\n                  cost_per_service: parseFloat(value)\n                });\n              } else if (columnIndex === 5) {\n                return _objectSpread({}, eachRow, {\n                  start_date: value\n                });\n              }\n            }\n            return eachRow;\n          });\n          eachTable.services = shallowRows;\n        }\n        return eachTable;\n      });\n    } else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(function (eachTable) {\n        if (eachTable._id === tableId) {\n          var shallowRows = eachTable.products;\n          shallowRows = shallowRows.map(function (eachRow) {\n            if (eachRow._id === rowId) {\n              if (columnIndex === 0) {\n                return _objectSpread({}, eachRow, {\n                  name: value\n                });\n              } else if (columnIndex === 1) {\n                return _objectSpread({}, eachRow, {\n                  revenue_per_unit: Number(value)\n                });\n              } else if (columnIndex === 2) {\n                return _objectSpread({}, eachRow, {\n                  cost_per_unit: parseFloat(value)\n                });\n              } else if (columnIndex === 3) {\n                return _objectSpread({}, eachRow, {\n                  start_date: value\n                });\n              } else if (columnIndex === 4) {\n                var shallowSeasonalTrends = eachRow.seasonal_trends;\n                shallowSeasonalTrends[value.index] = Number(value.value);\n                return _objectSpread({}, eachRow, {\n                  seasonal_trends: shallowSeasonalTrends\n                });\n              }\n            }\n            return eachRow;\n          });\n          eachTable.products = shallowRows;\n        }\n        return eachTable;\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var addRowHandle = function addRowHandle(tableType, tableId) {\n    var initialRow = {\n      service: {\n        name: \"บริการ\",\n        unit: 1,\n        unit_name: \"หน่วย\",\n        serve_per_unit: 1,\n        revenue_per_service: 0,\n        cost_per_service: 30,\n        price_increase: 0,\n        price_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        cost_increase: 0,\n        cost_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        start_date: new Date(),\n        seasonal_trends: []\n      },\n      product: {\n        name: \"\",\n        days_of_inventory: {\n          days: 0,\n          months: 0\n        },\n        revenue_per_unit: 0,\n        cost_per_unit: 0,\n        price_increase: 0,\n        price_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        cost_increase: 0,\n        cost_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        start_date: new Date(),\n        seasonal_trends: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100]\n      }\n    };\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(function (eachTable) {\n        if (eachTable._id === tableId) eachTable.services.push(initialRow.service);\n        return eachTable;\n      });\n    } else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(function (eachTable) {\n        if (eachTable._id === tableId) eachTable.products.push(initialRow.product);\n        return eachTable;\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var tableHeaderOnChange = function tableHeaderOnChange(tableType, tableId, value) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(function (eachTable) {\n        if (eachTable._id === tableId) eachTable.name = value;\n        return eachTable;\n      });\n    } else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(function (eachTable) {\n        if (eachTable._id === tableId) eachTable.name = value;\n        return eachTable;\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    });\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var addServiceTableHandleFunction = function addServiceTableHandleFunction() {\n    var shallowServiceTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      services: []\n    };\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var newShallowServiceTables = [].concat(_toConsumableArray(shallowServiceTables), [shallowServiceTable]);\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: _objectSpread({}, selectedProject.revenue, {\n        service_tables: newShallowServiceTables\n      })\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var addProductTableHandleFunction = function addProductTableHandleFunction() {\n    var shallowProductTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      products: []\n    };\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    var newShallowProducrTables = [].concat(_toConsumableArray(shallowProductTables), [shallowProductTable]);\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: _objectSpread({}, selectedProject.revenue, {\n        product_tables: newShallowProducrTables\n      })\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var handleRowOptionFunction = function handleRowOptionFunction(tableType, tableId, rowId) {\n    var shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(function (eachTable) {\n        if (eachTable._id === tableId) {\n          var shallowRows = [];\n          eachTable.services.forEach(function (eachRow) {\n            if (eachRow._id !== rowId) shallowRows.push(eachRow);\n          });\n          eachTable.services = shallowRows;\n        }\n        return eachTable;\n      });\n    }\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(function (eachTable) {\n        if (eachTable._id === tableId) {\n          var shallowRows = [];\n          eachTable.products.forEach(function (eachRow) {\n            if (eachRow._id !== rowId) shallowRows.push(eachRow);\n          });\n          eachTable.products = shallowRows;\n        }\n        return eachTable;\n      });\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  var handleTableOptionFunction = function handleTableOptionFunction(tableType, tableId) {\n    var shallowServiceTables = [];\n    var shallowProductTables = [];\n    var serviceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables));\n    var productTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables));\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      serviceTables.forEach(function (eachTable) {\n        if (eachTable._id !== tableId) {\n          shallowServiceTables.push(eachTable);\n        }\n      });\n      shallowProductTables = productTables;\n    }\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      productTables.forEach(function (eachTable) {\n        if (eachTable._id !== tableId) {\n          shallowProductTables.push(eachTable);\n        }\n      });\n      shallowServiceTables = serviceTables;\n    }\n    var shallowSelectedProject = _objectSpread({}, selectedProject, {\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    });\n    setReload(false);\n    dispatch(projectUpdated(shallowSelectedProject));\n    dispatch(updateProject({\n      id: selectedProject._id,\n      data: shallowSelectedProject\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BizSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 biztool-body-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BiztoolHeader, {\n    type: config.type,\n    title: config.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BiztoolBody, {\n    handleTableOptionFunction: handleTableOptionFunction,\n    handleRowOptionFunction: handleRowOptionFunction,\n    tableHeaderOnChange: tableHeaderOnChange,\n    addRowHandle: addRowHandle,\n    onCellChange: onCellChange,\n    type: config.type,\n    tableStyle: config.tableStyle,\n    tableData: tableData,\n    handleServiceFunction: addServiceTableHandleFunction,\n    handleProductFunction: addProductTableHandleFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  })));\n}\nexport default RevenuePage;","map":{"version":3,"names":["React","useState","useEffect","BizSidebar","BiztoolBody","BiztoolHeader","BIZTOOL_PAGE_CONFIG","useDispatch","useSelector","fetchProjectById","projectUpdated","updateProject","RevenuePage","dispatch","selectedProject","state","projects","_useState","user","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","reload","setReload","_id","project","setTableData","revenue","_useState5","_useState6","tableData","config","onCellChange","tableType","tableId","rowId","columnIndex","value","shallowServiceTables","JSON","parse","stringify","service_tables","shallowProductTables","product_tables","type","service","map","eachTable","shallowRows","services","eachRow","_objectSpread","name","unit","Number","unit_name","unitName","serve_per_unit","revenue_per_service","cost_per_service","parseFloat","start_date","product","products","revenue_per_unit","cost_per_unit","shallowSeasonalTrends","seasonal_trends","index","shallowSelectedProject","id","data","addRowHandle","initialRow","price_increase","price_increase_period_id","cost_increase","cost_increase_period_id","Date","days_of_inventory","days","months","push","tableHeaderOnChange","addServiceTableHandleFunction","shallowServiceTable","description","color","text_color","newShallowServiceTables","concat","_toConsumableArray","addProductTableHandleFunction","shallowProductTable","newShallowProducrTables","handleRowOptionFunction","forEach","handleTableOptionFunction","serviceTables","productTables","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","tableStyle","handleServiceFunction","handleProductFunction"],"sources":["/Users/koonk/Documents/GitHub/final-frontend/src/pages/bizTools/revenuePage/revenuePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BizSidebar from \"../../../components/bizTools/bizSidebar/bizSidebar\";\nimport BiztoolBody from \"../../../components/investmentProject/biztoolBody/biztoolBody\";\nimport BiztoolHeader from \"../../../components/investmentProject/biztoolHeader/biztoolHeader\";\nimport '../biztools.css'\nimport BIZTOOL_PAGE_CONFIG from \"../pageConfig\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjectById, projectUpdated, updateProject } from \"../../../features/projectsSlice\";\n\nfunction RevenuePage() {\n  const dispatch = useDispatch();\n  const selectedProject = useSelector((state) => state.projects.selectedProject);\n  const [isLoaded, setIsLoaded] = useState({ user: false, projects: false });\n  const [reload, setReload] = useState(false)\n\n  useEffect(() => {\n    if (isLoaded.projects) {\n      dispatch(fetchProjectById(selectedProject._id));\n      setIsLoaded({ user: true, project: true });\n    }\n    if (!reload) {\n      dispatch(fetchProjectById(selectedProject._id))\n      setReload(true)\n    }\n    setTableData(selectedProject.revenue)\n  }, [selectedProject]);\n\n  const [tableData, setTableData] = useState(selectedProject.revenue)\n  const config = BIZTOOL_PAGE_CONFIG.revenue\n\n  const onCellChange = (tableType, tableId, rowId, columnIndex, value) => {\n    let shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map((eachTable => {\n        if (eachTable._id === tableId) {\n          let shallowRows = eachTable.services\n          shallowRows = shallowRows.map(eachRow => {\n            if (eachRow._id === rowId) {\n              if (columnIndex === 0) {\n                return { ...eachRow, name: value }\n              }\n              else if (columnIndex === 1) {\n                return { ...eachRow, unit: Number(value.unit),unit_name: value.unitName}\n              }\n              else if (columnIndex === 2) {\n                return { ...eachRow, serve_per_unit: Number(value) }\n              }\n              else if (columnIndex === 3) {\n                return { ...eachRow, revenue_per_service: Number(value) }\n              }\n              else if (columnIndex === 4) {\n                return { ...eachRow, cost_per_service: parseFloat(value) }\n              }\n              else if (columnIndex === 5) {\n                return { ...eachRow, start_date: value }\n              }\n            }\n            return eachRow\n          })\n          eachTable.services = shallowRows\n        }\n        return eachTable\n      }))\n    }\n    else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map((eachTable => {\n        if (eachTable._id === tableId) {\n          let shallowRows = eachTable.products\n          shallowRows = shallowRows.map(eachRow => {\n            if (eachRow._id === rowId) {\n              if (columnIndex === 0) {\n                return { ...eachRow, name: value }\n              }\n              else if (columnIndex === 1) {\n                return { ...eachRow, revenue_per_unit: Number(value) }\n              }\n              else if (columnIndex === 2) {\n                return { ...eachRow, cost_per_unit: parseFloat(value) }\n              }\n              else if (columnIndex === 3) {\n                return { ...eachRow, start_date: value }\n              }\n              else if (columnIndex === 4) {\n                const shallowSeasonalTrends = eachRow.seasonal_trends\n                shallowSeasonalTrends[value.index] = Number(value.value)\n                return { ...eachRow, seasonal_trends: shallowSeasonalTrends }\n              }\n            }\n            return eachRow\n          })\n          eachTable.products = shallowRows\n        }\n        return eachTable\n      }))\n    }\n    let shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables,\n      }\n    }\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const addRowHandle = (tableType, tableId) => {\n    const initialRow = {\n      service: {\n        name: \"บริการ\",\n        unit: 1,\n        unit_name: \"หน่วย\",\n        serve_per_unit: 1,\n        revenue_per_service: 0,\n        cost_per_service: 30,\n        price_increase: 0,\n        price_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        cost_increase: 0,\n        cost_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        start_date: new Date(),\n        seasonal_trends: [],\n      },\n      product: {\n        name: \"\",\n        days_of_inventory: {\n          days: 0,\n          months: 0,\n        },\n        revenue_per_unit: 0,\n        cost_per_unit: 0,\n        price_increase: 0,\n        price_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        cost_increase: 0,\n        cost_increase_period_id: \"63de92ebd63688ac8b7ed999\",\n        start_date: new Date(),\n        seasonal_trends: [\n          100,100,100,100,\n          100,100,100,100,\n          100,100,100,100\n        ],\n      }\n    }\n\n    let shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(eachTable => {\n        if (eachTable._id === tableId) eachTable.services.push(initialRow.service)\n        return eachTable\n      })\n    }\n    else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(eachTable => {\n        if (eachTable._id === tableId) eachTable.products.push(initialRow.product)\n        return eachTable\n      })\n    }\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    }\n\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const tableHeaderOnChange = (tableType, tableId, value) => {\n    let shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map(eachTable => {\n        if (eachTable._id === tableId) eachTable.name = value\n        return eachTable\n      })\n    }\n    else if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map(eachTable => {\n        if (eachTable._id === tableId) eachTable.name = value\n        return eachTable\n      })\n    }\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables\n      }\n    }\n\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const addServiceTableHandleFunction = () => {\n    let shallowServiceTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      services: [],\n    }\n\n    let shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let newShallowServiceTables = [...shallowServiceTables, shallowServiceTable]\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        ...selectedProject.revenue,\n        service_tables: newShallowServiceTables,\n      }\n    }\n\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const addProductTableHandleFunction = () => {\n    let shallowProductTable = {\n      name: \"ชื่อตาราง\",\n      description: \"\",\n      color: \"#FFFFFF\",\n      text_color: \"#000000\",\n      products: [],\n    }\n\n    let shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n    let newShallowProducrTables = [...shallowProductTables, shallowProductTable]\n\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        ...selectedProject.revenue,\n        product_tables: newShallowProducrTables\n      }\n    }\n\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const handleRowOptionFunction = (tableType, tableId, rowId) => {\n    let shallowServiceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let shallowProductTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      shallowServiceTables = shallowServiceTables.map((eachTable) => {\n        if (eachTable._id === tableId) {\n          let shallowRows = []\n          eachTable.services.forEach(eachRow => {\n            if (eachRow._id !== rowId) shallowRows.push(eachRow)\n          })\n          eachTable.services = shallowRows\n        }\n        return eachTable\n      })\n    }\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      shallowProductTables = shallowProductTables.map((eachTable) => {\n        if (eachTable._id === tableId) {\n          let shallowRows = []\n          eachTable.products.forEach(eachRow => {\n            if (eachRow._id !== rowId) shallowRows.push(eachRow)\n          })\n          eachTable.products = shallowRows\n        }\n        return eachTable\n      })\n    }\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables,\n      }\n    }\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  const handleTableOptionFunction = (tableType, tableId) => {\n    let shallowServiceTables = []\n    let shallowProductTables = []\n    let serviceTables = JSON.parse(JSON.stringify(selectedProject.revenue.service_tables))\n    let productTables = JSON.parse(JSON.stringify(selectedProject.revenue.product_tables))\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.service) {\n      serviceTables.forEach((eachTable) => {\n        if (eachTable._id !== tableId) {\n          shallowServiceTables.push(eachTable)\n        }\n      })\n      shallowProductTables = productTables\n    }\n    if (tableType === BIZTOOL_PAGE_CONFIG.revenue.type.product) {\n      productTables.forEach((eachTable) => {\n        if (eachTable._id !== tableId) {\n          shallowProductTables.push(eachTable)\n        }\n      })\n      shallowServiceTables = serviceTables\n    }\n    const shallowSelectedProject = {\n      ...selectedProject,\n      revenue: {\n        service_tables: shallowServiceTables,\n        product_tables: shallowProductTables,\n      }\n    }\n    setReload(false)\n    dispatch(projectUpdated(shallowSelectedProject))\n    dispatch(updateProject({ id: selectedProject._id, data: shallowSelectedProject }))\n  }\n\n  return (\n    <div className=\"d-flex \">\n      <BizSidebar />\n      <div className=\"p-4 biztool-body-width\">\n        <BiztoolHeader\n          type={config.type}\n          title={config.title}\n        />\n        <BiztoolBody\n          handleTableOptionFunction={handleTableOptionFunction}\n          handleRowOptionFunction={handleRowOptionFunction}\n          tableHeaderOnChange={tableHeaderOnChange}\n          addRowHandle={addRowHandle}\n          onCellChange={onCellChange}\n          type={config.type}\n          tableStyle={config.tableStyle}\n          tableData={tableData}\n          handleServiceFunction={addServiceTableHandleFunction}\n          handleProductFunction={addProductTableHandleFunction}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default RevenuePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}